{"version":3,"file":"sim-c111fa99.chunk.js","sources":["../../../ui/retribution_paladin/presets.ts","../../../ui/retribution_paladin/inputs.ts","../../../ui/retribution_paladin/sim.ts"],"sourcesContent":["import { Conjured, Consumes } from '../core/proto/common.js';\r\nimport { CustomRotation, CustomSpell } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { Player } from '../core/player.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\nimport {\r\n\tPaladinAura as PaladinAura,\r\n\tPaladinJudgement as PaladinJudgement,\r\n\tRetributionPaladin_Rotation as RetributionPaladinRotation,\r\n\tRetributionPaladin_Options as RetributionPaladinOptions,\r\n\tRetributionPaladin_Rotation_RotationType as RotationType,\r\n\tRetributionPaladin_Rotation_SpellOption as SpellOption,\r\n\tPaladinMajorGlyph,\r\n\tPaladinMinorGlyph,\r\n} from '../core/proto/paladin.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const AuraMasteryTalents = {\r\n\tname: 'Aura Mastery',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '050501-05-05232051203331302133231331',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfSealOfVengeance,\r\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfJudgement,\r\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfReckoning,\r\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\r\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\r\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings\r\n\t\t})\r\n\t}),\r\n};\r\n\r\n\r\nexport const DivineSacTalents = {\r\n\tname: 'Divine Sacrifice & Guardian',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '03-453201002-05222051203331302133201331',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: PaladinMajorGlyph.GlyphOfSealOfVengeance,\r\n\t\t\tmajor2: PaladinMajorGlyph.GlyphOfJudgement,\r\n\t\t\tmajor3: PaladinMajorGlyph.GlyphOfReckoning,\r\n\t\t\tminor1: PaladinMinorGlyph.GlyphOfSenseUndead,\r\n\t\t\tminor2: PaladinMinorGlyph.GlyphOfLayOnHands,\r\n\t\t\tminor3: PaladinMinorGlyph.GlyphOfBlessingOfKings\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = RetributionPaladinRotation.create({\r\n\ttype: RotationType.Standard,\r\n\texoSlack: 500,\r\n\tconsSlack: 500,\r\n\t//useDivinePlea: true,\r\n\tavoidClippingConsecration: true,\r\n\tholdLastAvengingWrathUntilExecution: false,\r\n\tcancelChaosBane: false,\r\n\t//divinePleaPercentage: 0.75,\r\n\tholyWrathThreshold: 4,\r\n\tsovTargets: 1,\r\n\tcustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: SpellOption.HammerOfWrath }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.JudgementOfWisdom }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CrusaderStrike }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.DivineStorm }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Consecration }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Exorcism }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.HolyWrath }),\r\n\t\t],\r\n\t}),\r\n\tcustomCastSequence: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: SpellOption.JudgementOfWisdom }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CrusaderStrike }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.DivineStorm }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Consecration }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CrusaderStrike }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Exorcism }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.JudgementOfWisdom }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CrusaderStrike }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.DivineStorm }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Consecration }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CrusaderStrike }),\r\n\t\t],\r\n\t}),\r\n});\r\n\r\nexport const DefaultOptions = RetributionPaladinOptions.create({\r\n\taura: PaladinAura.RetributionAura,\r\n\tjudgement: PaladinJudgement.JudgementOfWisdom,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tdefaultConjured: Conjured.ConjuredDarkRune,\r\n\tflask: Flask.FlaskOfEndlessRage,\r\n\tfood: Food.FoodDragonfinFilet,\r\n});\r\n\r\n// Maybe use this later if I can figure out the interactive tooltips from tippy\r\nconst RET_BIS_DISCLAIMER = \"<p>Please reference <a target=\\\"_blank\\\" href=\\\"https://docs.google.com/spreadsheets/d/1SxO6abYm4k7XRaP1MsxhaqYoukgyZ-cbWDE3ujadjx4/\\\">Baranor's TBC BiS Lists</a> for more detailed gearing options and information.</p>\"\r\n\r\nexport const PRE_RAID_PRESET = {\r\n\tname: 'Pre-Raid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":41386,\"enchant\":3817,\"gems\":[41398,40022]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":34388,\"enchant\":3875,\"gems\":[39996,40037]},\r\n\t\t{\"id\":37647,\"enchant\":3605},\r\n\t\t{\"id\":39633,\"enchant\":3832,\"gems\":[39996,40038]},\r\n\t\t{\"id\":41355,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39634,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":40694,\"gems\":[39996,39996]},\r\n\t\t{\"id\":37193,\"enchant\":3326,\"gems\":[39996,39996]},\r\n\t\t{\"id\":44297,\"enchant\":3606},\r\n\t\t{\"id\":40586},\r\n\t\t{\"id\":37685},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":37852,\"enchant\":3789},\r\n\t\t{},\r\n\t\t{\"id\":37574}\r\n\t]}`),\r\n};\r\n\r\nexport const P1_PRESET = {\r\n\tname: 'P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t  {\"id\":44006,\"enchant\":3817,\"gems\":[41398,49110]},\r\n\t\t  {\"id\":44664,\"gems\":[42142]},\r\n\t\t  {\"id\":40578,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t  {\"id\":40403,\"enchant\":3605},\r\n\t\t  {\"id\":40574,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t  {\"id\":40330,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t  {\"id\":40541,\"enchant\":3604,\"gems\":[0]},\r\n\t\t  {\"id\":40278,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":44011,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t  {\"id\":40591,\"enchant\":3606},\r\n\t\t  {\"id\":40075},\r\n\t\t  {\"id\":40474},\r\n\t\t  {\"id\":42987},\r\n\t\t  {\"id\":40431},\r\n\t\t  {\"id\":40384,\"enchant\":3789},\r\n\t\t  {},\r\n\t\t  {\"id\":42852}\r\n\t\t]}`),\r\n};\r\n\r\nexport const P2_PRESET = {\r\n\tname: 'P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45472,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":45517,\"gems\":[39996]},\r\n\t\t{\"id\":45245,\"enchant\":3808,\"gems\":[39996,39996]},\r\n\t\t{\"id\":45461,\"enchant\":3605,\"gems\":[39996]},\r\n\t\t{\"id\":45473,\"enchant\":3832,\"gems\":[39996,39996,39996]},\r\n\t\t{\"id\":45663,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t{\"id\":45444,\"enchant\":3604,\"gems\":[39996,39996,0]},\r\n\t\t{\"id\":46095,\"gems\":[42142,42142,42142]},\r\n\t\t{\"id\":45134,\"enchant\":3823,\"gems\":[39996,39996,39996]},\r\n\t\t{\"id\":45599,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t{\"id\":45608,\"gems\":[39996]},\r\n\t\t{\"id\":45534,\"gems\":[39996]},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":45516,\"enchant\":3789,\"gems\":[39996,39996]},\r\n\t\t{},\r\n\t\t{\"id\":42853}\r\n\t]}`),\r\n};\r\n\r\nexport const P3_PRESET = {\r\n\tname: 'P3 Mace Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":48614,\"enchant\":3817,\"gems\":[41398,40142]},\r\n        \t{\"id\":47110,\"gems\":[40142]},\r\n        \t{\"id\":48612,\"enchant\":3808,\"gems\":[40111]},\r\n        \t{\"id\":47548,\"enchant\":3605,\"gems\":[40111]},\r\n        \t{\"id\":48616,\"enchant\":3832,\"gems\":[49110,40111]},\r\n        \t{\"id\":47155,\"enchant\":3845,\"gems\":[40111,40111,0]},\r\n        \t{\"id\":48615,\"enchant\":3604,\"gems\":[40142,0]},\r\n        \t{\"id\":47002,\"gems\":[40111,40111,40111]},\r\n        \t{\"id\":47132,\"enchant\":3823,\"gems\":[42142,42142,42142]},\r\n        \t{\"id\":47154,\"enchant\":3606,\"gems\":[40142,40111]},\r\n        \t{\"id\":47075,\"gems\":[40111]},\r\n        \t{\"id\":46966,\"gems\":[40142]},\r\n        \t{\"id\":47131},\r\n        \t{\"id\":42987},\r\n        \t{\"id\":47520,\"enchant\":3789,\"gems\":[40111,40111]},\r\n        \t{},\r\n        \t{\"id\":47661}\r\n\t]}`),\r\n};\r\n\r\nexport const P4_PRESET = {\r\n\tname: 'P4 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":51277,\"enchant\":3817,\"gems\":[41398,40118]},\r\n        \t{\"id\":50633,\"gems\":[40111]},\r\n        \t{\"id\":51279,\"enchant\":3808,\"gems\":[40111]},\r\n        \t{\"id\":50653,\"enchant\":3605,\"gems\":[40111]},\r\n        \t{\"id\":51275,\"enchant\":3832,\"gems\":[40118,49110]},\r\n        \t{\"id\":50659,\"enchant\":3845,\"gems\":[42142,0]},\r\n        \t{\"id\":50690,\"enchant\":3604,\"gems\":[40111,40111,0]},\r\n        \t{\"id\":50707,\"gems\":[40111,40111,45862]},\r\n        \t{\"id\":51278,\"enchant\":3823,\"gems\":[42142,42142]},\r\n        \t{\"id\":50607,\"enchant\":3606,\"gems\":[40111,40111]},\r\n        \t{\"id\":50604,\"gems\":[40111]},\r\n        \t{\"id\":50402,\"gems\":[40111]},\r\n        \t{\"id\":50706},\r\n        \t{\"id\":47131},\r\n        \t{\"id\":49623,\"enchant\":3789,\"gems\":[40111,40111,40111]},\r\n        \t{},\r\n        \t{\"id\":50455}\r\n\t]}`),\r\n};\r\n\r\nexport const P5_PRESET = {\r\n\tname: 'P5 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecRetributionPaladin>) => true,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":51277,\"enchant\":3817,\"gems\":[41398,40111]},\r\n        \t{\"id\":54581,\"gems\":[40146]},\r\n        \t{\"id\":51279,\"enchant\":3808,\"gems\":[40111]},\r\n        \t{\"id\":50677,\"enchant\":3605,\"gems\":[40146]},\r\n        \t{\"id\":51275,\"enchant\":3832,\"gems\":[40111,49110]},\r\n        \t{\"id\":54580,\"enchant\":3845,\"gems\":[40111,0]},\r\n        \t{\"id\":50690,\"enchant\":3604,\"gems\":[40146,40111,0]},\r\n        \t{\"id\":50707,\"gems\":[40111,40111,40111]},\r\n        \t{\"id\":51278,\"enchant\":3823,\"gems\":[40111,40111]},\r\n        \t{\"id\":54578,\"enchant\":3606,\"gems\":[40111,40111]},\r\n        \t{\"id\":50402,\"gems\":[40111]},\r\n        \t{\"id\":54576,\"gems\":[40111]},\r\n        \t{\"id\":54590},\r\n        \t{\"id\":50706},\r\n        \t{\"id\":49623,\"enchant\":3789,\"gems\":[42142,42142,42154]},\r\n        \t{},\r\n        \t{\"id\":50455}\r\n\t]}`),\r\n};\r\n\r\nexport const ROTATION_PRESET_BASIC_APL = {\r\n\tname: 'Basic APL',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: RetributionPaladinRotation.toJsonString(DefaultRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":67485}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48806}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":53408}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":35395}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":53385}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":53488}}},\"castSpell\":{\"spellId\":{\"spellId\":48801}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48819}}}}\r\n\t\t\t]\r\n\t\t  }`),\r\n\t}),\r\n\t};","import { Spec, ItemSlot } from '../core/proto/common.js';\r\nimport { Player } from '../core/player.js';\r\nimport { EventID } from '../core/typed_event.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { CustomRotation } from '../core/proto/common.js';\r\n\r\nimport {\r\n\tPaladinAura as PaladinAura,\r\n\tRetributionPaladin_Rotation as RetributionPaladinRotation,\r\n\tRetributionPaladin_Options as RetributionPaladinOptions,\r\n\tRetributionPaladin_Rotation_SpellOption as SpellOption,\r\n\tRetributionPaladin_Rotation_RotationType as RotationType,\r\n\tPaladinJudgement as PaladinJudgement,\r\n\tPaladinSeal,\r\n} from '../core/proto/paladin.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\nexport const AuraSelection = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRetributionPaladin, PaladinAura>({\r\n\tfieldName: 'aura',\r\n\tvalues: [\r\n\t\t{ value: PaladinAura.NoPaladinAura, tooltip: 'No Aura' },\r\n\t\t{ actionId: ActionId.fromSpellId(27150), value: PaladinAura.RetributionAura },\r\n\t],\r\n});\r\n\r\nexport const StartingSealSelection = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRetributionPaladin, PaladinSeal>({\r\n\tfieldName: 'seal',\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(42463), value: PaladinSeal.Vengeance },\r\n\t\t{ actionId: ActionId.fromSpellId(20154), value: PaladinSeal.Righteousness },\r\n\t\t{\r\n\t\t\tactionId: ActionId.fromSpellId(20424), value: PaladinSeal.Command,\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getTalents().sealOfCommand,\r\n\t\t},\r\n\t],\r\n\tchangeEmitter: (player: Player<Spec.SpecRetributionPaladin>) => player.changeEmitter,\r\n});\r\n\r\nexport const JudgementSelection = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRetributionPaladin, PaladinJudgement>({\r\n\tfieldName: 'judgement',\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(53408), value: PaladinJudgement.JudgementOfWisdom },\r\n\t\t{ actionId: ActionId.fromSpellId(20271), value: PaladinJudgement.JudgementOfLight },\r\n\t],\r\n});\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\nexport const RetributionPaladinRotationExoSlackConfig = InputHelpers.makeRotationNumberInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: \"exoSlack\",\r\n\tlabel: \"Exo Slack (MS)\",\r\n\tlabelTooltip: \"Amount of extra time in MS to give main abilities to come off cooldown before using Exorcism on single target\",\r\n\tpositive: true,\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.Standard,\r\n})\r\n\r\nexport const RetributionPaladinRotationConsSlackConfig = InputHelpers.makeRotationNumberInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: \"consSlack\",\r\n\tlabel: \"Cons Slack (MS)\",\r\n\tlabelTooltip: \"Amount of extra time in MS to give main abilities to come off cooldown before using Consecration on single target\",\r\n\tpositive: true,\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.Standard,\r\n})\r\n\r\n\r\n// export const RetributionPaladinRotationDivinePleaSelection = InputHelpers.makeRotationBooleanInput<Spec.SpecRetributionPaladin>({\r\n// \tfieldName: 'useDivinePlea',\r\n// \tlabel: 'Use Divine Plea',\r\n// \tlabelTooltip: 'Whether or not to maintain Divine Plea',\r\n// \tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.Standard,\r\n// });\r\n\r\n// // Reuse field name, but different tooltip.\r\n// export const RetributionPaladinRotationDivinePleaSelectionAlternate = InputHelpers.makeRotationBooleanInput<Spec.SpecRetributionPaladin>({\r\n// \tfieldName: 'useDivinePlea',\r\n// \tlabel: 'Use Divine Plea - Out of Sequence',\r\n// \tlabelTooltip: 'Whether or not to maintain Divine Plea, this happens OUTSIDE of the cast sequence',\r\n// \tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.CastSequence\r\n// });\r\n\r\n// export const RetributionPaladinRotationDivinePleaPercentageConfig = InputHelpers.makeRotationNumberInput<Spec.SpecRetributionPaladin>({\r\n// \tfieldName: \"divinePleaPercentage\",\r\n// \tlabel: \"Divine Plea Mana Threshold %\",\r\n// \tlabelTooltip: \"% of max mana left before beginning to use Divine Plea\",\r\n// \tpercent: true,\r\n// \tpositive: true,\r\n// })\r\n\r\nexport const RetributionPaladinRotationHolyWrathConfig = InputHelpers.makeRotationNumberInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: \"holyWrathThreshold\",\r\n\tlabel: \"Holy Wrath Threshold\",\r\n\tlabelTooltip: \"Minimum number of Demon and Undead units before Holy Wrath is considered viable to add to an AOE rotation.\",\r\n\tpositive: true,\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.Standard,\r\n})\r\n\r\nexport const RetributionPaladinSoVTargets = InputHelpers.makeRotationNumberInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: \"sovTargets\",\r\n\tlabel: \"Max SoV Targets\",\r\n\tlabelTooltip: \"The maximum number of targets to keep the SoV debuff on.\",\r\n\tpositive: true,\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getSpecOptions().seal == PaladinSeal.Vengeance,\r\n\tchangeEmitter: (player: Player<Spec.SpecRetributionPaladin>) => player.changeEmitter,\r\n})\r\n\r\nexport const RetributionPaladinRotationAvoidClippingConsecration = InputHelpers.makeRotationBooleanInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: 'avoidClippingConsecration',\r\n\tlabel: 'Avoid Clipping Consecration',\r\n\tlabelTooltip: 'Avoid clipping consecration at the end of a fight.',\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => (player.getRotation().type == RotationType.Standard) || (player.getRotation().type == RotationType.Custom),\r\n});\r\n\r\nexport const RetributionPaladinRotationHoldLastAvengingWrathUntilExecution = InputHelpers.makeRotationBooleanInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: 'holdLastAvengingWrathUntilExecution',\r\n\tlabel: 'Hold Avenging Wrath Until Execution',\r\n\tlabelTooltip: 'Hold last Avenging Wrath usage until the execution phase. This currently does not work if specific Avenging Wrath CD usage times are specified.',\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => (player.getRotation().type == RotationType.Standard) || (player.getRotation().type == RotationType.Custom),\r\n});\r\n\r\nexport const RetributionPaladinRotationCancelChaosBane = InputHelpers.makeRotationBooleanInput<Spec.SpecRetributionPaladin>({\r\n\tfieldName: 'cancelChaosBane',\r\n\tlabel: 'Cancel Chaos Bane Buff From Shadowmourne',\r\n\tlabelTooltip: 'Cancels the buff provided when Shadowmourne soul shard buff reaches 10 stacks.',\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.name == \"Shadowmourne\",\r\n});\r\n\r\nexport const RetributionPaladinRotationPriorityConfig = InputHelpers.makeCustomRotationInput<Spec.SpecRetributionPaladin, SpellOption>({\r\n\tfieldName: 'customRotation',\r\n\tnumColumns: 2,\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(53408), value: SpellOption.JudgementOfWisdom },\r\n\t\t{ actionId: ActionId.fromSpellId(53385), value: SpellOption.DivineStorm },\r\n\t\t{ actionId: ActionId.fromSpellId(48806), value: SpellOption.HammerOfWrath },\r\n\t\t{ actionId: ActionId.fromSpellId(48819), value: SpellOption.Consecration },\r\n\t\t{ actionId: ActionId.fromSpellId(48817), value: SpellOption.HolyWrath },\r\n\t\t{ actionId: ActionId.fromSpellId(35395), value: SpellOption.CrusaderStrike },\r\n\t\t{ actionId: ActionId.fromSpellId(48801), value: SpellOption.Exorcism },\r\n\t\t//{ actionId: ActionId.fromSpellId(54428), value: SpellOption.DivinePlea }\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.Custom,\r\n});\r\n\r\nexport const RetributionPaladinCastSequenceConfig = InputHelpers.makeCustomRotationInput<Spec.SpecRetributionPaladin, SpellOption>({\r\n\tfieldName: 'customCastSequence',\r\n\tnumColumns: 2,\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(53408), value: SpellOption.JudgementOfWisdom },\r\n\t\t{ actionId: ActionId.fromSpellId(53385), value: SpellOption.DivineStorm },\r\n\t\t{ actionId: ActionId.fromSpellId(48806), value: SpellOption.HammerOfWrath },\r\n\t\t{ actionId: ActionId.fromSpellId(48819), value: SpellOption.Consecration },\r\n\t\t{ actionId: ActionId.fromSpellId(48817), value: SpellOption.HolyWrath },\r\n\t\t{ actionId: ActionId.fromSpellId(35395), value: SpellOption.CrusaderStrike },\r\n\t\t{ actionId: ActionId.fromSpellId(48801), value: SpellOption.Exorcism },\r\n\t\t//{ actionId: ActionId.fromSpellId(54428), value: SpellOption.DivinePlea }\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecRetributionPaladin>) => player.getRotation().type == RotationType.CastSequence,\r\n});\r\n\r\nexport const RotationSelector = InputHelpers.makeRotationEnumInput<Spec.SpecRetributionPaladin, RotationType>({\r\n\tfieldName: 'type',\r\n\tlabel: 'Type',\r\n\tlabelTooltip:\r\n\t\t`<ul>\r\n\t\t<li>\r\n\t\t\t<div>Standard: All-in-one rotation for single target and aoe.</div>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<div>Custom: Highest spell that is ready will be cast.</div>\r\n\t\t</li>\r\n\t\t<li>\r\n\t\t\t<div>Cast Sequence: Spells will be cast in the order of the list. (Like 1-button-macro)</div>\r\n\t\t</li>\r\n\t</ul>`,\r\n\tvalues: [\r\n\t\t{ name: 'Standard', value: RotationType.Standard },\r\n\t\t{ name: 'Custom', value: RotationType.Custom },\r\n\t\t{ name: 'Cast Sequence', value: RotationType.CastSequence },\r\n\t],\r\n});","import { RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat, PseudoStat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\n\r\nimport { PaladinMajorGlyph, PaladinSeal } from '../core/proto/paladin.js';\r\n\r\nimport * as RetributionPaladinInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class RetributionPaladinSimUI extends IndividualSimUI<Spec.SpecRetributionPaladin> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRetributionPaladin>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'retribution-paladin-sim-ui',\r\n\t\t\tcssScheme: 'paladin',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatMana,\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t],\r\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecRetributionPaladin>) => {\r\n\t\t\t\tlet stats = new Stats();\r\n\r\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\t\tif (player.getMajorGlyphs().includes(PaladinMajorGlyph.GlyphOfSealOfVengeance) && (player.getSpecOptions().seal == PaladinSeal.Vengeance)) {\r\n\t\t\t\t\t\tstats = stats.addStat(Stat.StatExpertise, 10 * Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttalents: stats,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatStrength]: 2.53,\r\n\t\t\t\t\t[Stat.StatAgility]: 1.13,\r\n\t\t\t\t\t[Stat.StatIntellect]: 0.15,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 0.32,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0.41,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.01,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.12,\r\n\t\t\t\t\t[Stat.StatMP5]: 0.05,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 1,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.96,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 1.16,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.44,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.76,\r\n\t\t\t\t\t[Stat.StatExpertise]: 1.80,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 7.33,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.AuraMasteryTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tarcaneBrilliance: true,\r\n\t\t\t\t\tdivineSpirit: true,\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t\thornOfWinter: true,\r\n\t\t\t\t\tbattleShout: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t\tswiftRetribution: true,\r\n\t\t\t\t\telementalOath: true,\r\n\t\t\t\t\trampage: true,\r\n\t\t\t\t\ttrueshotAura: true,\r\n\t\t\t\t\ticyTalons: true,\r\n\t\t\t\t\ttotemOfWrath: true,\r\n\t\t\t\t\twrathOfAirTotem: true,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tjudgementsOfTheWise: true,\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tshadowMastery: true,\r\n\t\t\t\t\ttotemOfWrath: true,\r\n\t\t\t\t\tjudgementOfWisdom: true,\r\n\t\t\t\t\tjudgementOfLight: true,\r\n\t\t\t\t\tmisery: true,\r\n\t\t\t\t\tcurseOfElements: true,\r\n\t\t\t\t\tbloodFrenzy: true,\r\n\t\t\t\t\texposeArmor: true,\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tcurseOfWeakness: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tRetributionPaladinInputs.AuraSelection,\r\n\t\t\t\tRetributionPaladinInputs.JudgementSelection,\r\n\t\t\t\tRetributionPaladinInputs.StartingSealSelection,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tRetributionPaladinInputs.RotationSelector,\r\n\t\t\t\t\t//RetributionPaladinInputs.RetributionPaladinRotationDivinePleaSelection,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationAvoidClippingConsecration,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationHoldLastAvengingWrathUntilExecution,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationCancelChaosBane,\r\n\t\t\t\t\t//RetributionPaladinInputs.RetributionPaladinRotationDivinePleaSelectionAlternate,\r\n\t\t\t\t\t//RetributionPaladinInputs.RetributionPaladinRotationDivinePleaPercentageConfig,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationConsSlackConfig,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationExoSlackConfig,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationHolyWrathConfig,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinSoVTargets,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinRotationPriorityConfig,\r\n\t\t\t\t\tRetributionPaladinInputs.RetributionPaladinCastSequenceConfig\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.ReplenishmentBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_PRESET_BASIC_APL,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.AuraMasteryTalents,\r\n\t\t\t\t\tPresets.DivineSacTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PRE_RAID_PRESET,\r\n\t\t\t\t\tPresets.P1_PRESET,\r\n\t\t\t\t\tPresets.P2_PRESET,\r\n\t\t\t\t\tPresets.P3_PRESET,\r\n\t\t\t\t\tPresets.P4_PRESET,\r\n\t\t\t\t\tPresets.P5_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["AuraMasteryTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","PaladinMajorGlyph","GlyphOfSealOfVengeance","major2","GlyphOfJudgement","major3","GlyphOfReckoning","minor1","PaladinMinorGlyph","GlyphOfSenseUndead","minor2","GlyphOfLayOnHands","minor3","GlyphOfBlessingOfKings","DivineSacTalents","DefaultRotation","RetributionPaladinRotation","type","RotationType","Standard","exoSlack","consSlack","avoidClippingConsecration","holdLastAvengingWrathUntilExecution","cancelChaosBane","holyWrathThreshold","sovTargets","customRotation","CustomRotation","spells","CustomSpell","spell","SpellOption","HammerOfWrath","JudgementOfWisdom","CrusaderStrike","DivineStorm","Consecration","Exorcism","HolyWrath","customCastSequence","DefaultOptions","RetributionPaladinOptions","aura","PaladinAura","RetributionAura","judgement","PaladinJudgement","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","defaultConjured","Conjured","ConjuredDarkRune","flask","Flask","FlaskOfEndlessRage","food","Food","FoodDragonfinFilet","PRE_RAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","player","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","P3_PRESET","P4_PRESET","P5_PRESET","ROTATION_PRESET_BASIC_APL","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","AuraSelection","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoPaladinAura","actionId","ActionId","fromSpellId","StartingSealSelection","PaladinSeal","Vengeance","Righteousness","Command","showWhen","getTalents","sealOfCommand","changeEmitter","JudgementSelection","JudgementOfLight","RetributionPaladinRotationExoSlackConfig","InputHelpers.makeRotationNumberInput","label","labelTooltip","positive","getRotation","RetributionPaladinRotationConsSlackConfig","RetributionPaladinRotationHolyWrathConfig","RetributionPaladinSoVTargets","getSpecOptions","seal","RetributionPaladinRotationAvoidClippingConsecration","InputHelpers.makeRotationBooleanInput","Custom","RetributionPaladinRotationHoldLastAvengingWrathUntilExecution","RetributionPaladinRotationCancelChaosBane","getEquippedItem","ItemSlot","ItemSlotMainHand","item","RetributionPaladinRotationPriorityConfig","InputHelpers.makeCustomRotationInput","numColumns","RetributionPaladinCastSequenceConfig","CastSequence","RotationSelector","InputHelpers.makeRotationEnumInput","RetributionPaladinSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStrength","StatAgility","StatIntellect","StatMP5","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatExpertise","StatArmorPenetration","StatSpellPower","StatSpellCrit","StatSpellHit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatMana","StatHealth","modifyDisplayStats","stats","Stats","TypedEvent","freezeAllAndDo","getMajorGlyphs","includes","addStat","Mechanics.EXPERTISE_PER_QUARTER_PERCENT_REDUCTION","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","Presets.AuraMasteryTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","manaSpringTotem","TristateEffectRegular","hornOfWinter","battleShout","sanctifiedRetribution","swiftRetribution","elementalOath","rampage","trueshotAura","icyTalons","totemOfWrath","wrathOfAirTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","judgementsOfTheWise","blessingOfKings","blessingOfMight","debuffs","Debuffs","shadowMastery","judgementOfWisdom","judgementOfLight","misery","curseOfElements","bloodFrenzy","exposeArmor","sunderArmor","faerieFire","curseOfWeakness","playerIconInputs","RetributionPaladinInputs.AuraSelection","RetributionPaladinInputs.JudgementSelection","RetributionPaladinInputs.StartingSealSelection","rotationInputs","inputs","RetributionPaladinInputs.RotationSelector","RetributionPaladinInputs.RetributionPaladinRotationAvoidClippingConsecration","RetributionPaladinInputs.RetributionPaladinRotationHoldLastAvengingWrathUntilExecution","RetributionPaladinInputs.RetributionPaladinRotationCancelChaosBane","RetributionPaladinInputs.RetributionPaladinRotationConsSlackConfig","RetributionPaladinInputs.RetributionPaladinRotationExoSlackConfig","RetributionPaladinInputs.RetributionPaladinRotationHolyWrathConfig","RetributionPaladinInputs.RetributionPaladinSoVTargets","RetributionPaladinInputs.RetributionPaladinRotationPriorityConfig","RetributionPaladinInputs.RetributionPaladinCastSequenceConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_BASIC_APL","Presets.DivineSacTalents","Presets.PRE_RAID_PRESET","Presets.P2_PRESET","Presets.P3_PRESET","Presets.P4_PRESET","Presets.P5_PRESET"],"mappings":"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"}