{"version":3,"file":"index-0a79fa8e.entry.js","sources":["../../../ui/raid/presets.ts","../../../ui/raid/raid_picker.ts","../../../ui/raid/raid_stats.ts","../../../ui/raid/raid_tab.ts","../../../ui/core/components/raid_target_picker.ts","../../../ui/raid/assignments_picker.ts","../../../ui/raid/blessings_picker.ts","../../../ui/raid/tanks_picker.ts","../../../ui/raid/settings_tab.ts","../../../ui/raid/import_export.ts","../../../ui/raid/raid_sim_ui.ts","../../../ui/raid/index.ts"],"sourcesContent":["import { IndividualSimUI, OtherDefaults } from '../core/individual_sim_ui.js';\r\n\r\nimport {\r\n\tClass,\r\n\tConsumes,\r\n\tEquipmentSpec,\r\n\tFaction,\r\n\tRace,\r\n\tSpec\r\n} from '../core/proto/common.js';\r\nimport { SavedTalents } from '../core/proto/ui.js';\r\nimport {\r\n\tgetSpecIcon,\r\n\tspecNames,\r\n\tSpecOptions,\r\n\tSpecRotation,\r\n} from '../core/proto_utils/utils.js';\r\n\r\nimport { Player } from '../core/player.js';\r\n\r\nimport * as TankDeathknightPresets from '../tank_deathknight/presets.js';\r\nimport * as DeathknightPresets from '../deathknight/presets.js';\r\nimport * as BalanceDruidPresets from '../balance_druid/presets.js';\r\nimport * as FeralDruidPresets from '../feral_druid/presets.js';\r\nimport * as FeralTankDruidPresets from '../feral_tank_druid/presets.js';\r\nimport * as RestorationDruidPresets from '../restoration_druid/presets.js';\r\nimport * as ElementalShamanPresets from '../elemental_shaman/presets.js';\r\nimport * as EnhancementShamanPresets from '../enhancement_shaman/presets.js';\r\nimport * as RestorationShamanPresets from '../restoration_shaman/presets.js';\r\nimport * as HunterPresets from '../hunter/presets.js';\r\nimport * as MagePresets from '../mage/presets.js';\r\nimport * as RoguePresets from '../rogue/presets.js';\r\nimport * as HolyPaladinPresets from '../holy_paladin/presets.js';\r\nimport * as ProtectionPaladinPresets from '../protection_paladin/presets.js';\r\nimport * as RetributionPaladinPresets from '../retribution_paladin/presets.js';\r\nimport * as HealingPriestPresets from '../healing_priest/presets.js';\r\nimport * as ShadowPriestPresets from '../shadow_priest/presets.js';\r\nimport * as SmitePriestPresets from '../smite_priest/presets.js';\r\nimport * as WarriorPresets from '../warrior/presets.js';\r\nimport * as ProtectionWarriorPresets from '../protection_warrior/presets.js';\r\nimport * as WarlockPresets from '../warlock/presets.js';\r\n\r\nimport { TankDeathknightSimUI } from '../tank_deathknight/sim.js';\r\nimport { DeathknightSimUI } from '../deathknight/sim.js';\r\nimport { BalanceDruidSimUI } from '../balance_druid/sim.js';\r\nimport { FeralDruidSimUI } from '../feral_druid/sim.js';\r\nimport { FeralTankDruidSimUI } from '../feral_tank_druid/sim.js';\r\nimport { RestorationDruidSimUI } from '../restoration_druid/sim.js';\r\nimport { ElementalShamanSimUI } from '../elemental_shaman/sim.js';\r\nimport { EnhancementShamanSimUI } from '../enhancement_shaman/sim.js';\r\nimport { RestorationShamanSimUI } from '../restoration_shaman/sim.js';\r\nimport { HunterSimUI } from '../hunter/sim.js';\r\nimport { MageSimUI } from '../mage/sim.js';\r\nimport { RogueSimUI } from '../rogue/sim.js';\r\nimport { HolyPaladinSimUI } from '../holy_paladin/sim.js';\r\nimport { ProtectionPaladinSimUI } from '../protection_paladin/sim.js';\r\nimport { RetributionPaladinSimUI } from '../retribution_paladin/sim.js';\r\nimport { HealingPriestSimUI } from '../healing_priest/sim.js';\r\nimport { ShadowPriestSimUI } from '../shadow_priest/sim.js';\r\nimport { SmitePriestSimUI } from '../smite_priest/sim.js';\r\nimport { WarriorSimUI } from '../warrior/sim.js';\r\nimport { ProtectionWarriorSimUI } from '../protection_warrior/sim.js';\r\nimport { WarlockSimUI } from '../warlock/sim.js';\r\n\r\nexport const specSimFactories: Record<Spec, (parentElem: HTMLElement, player: Player<any>) => IndividualSimUI<any>> = {\r\n\t[Spec.SpecTankDeathknight]: (parentElem: HTMLElement, player: Player<any>) => new TankDeathknightSimUI(parentElem, player),\r\n\t[Spec.SpecDeathknight]: (parentElem: HTMLElement, player: Player<any>) => new DeathknightSimUI(parentElem, player),\r\n\t[Spec.SpecBalanceDruid]: (parentElem: HTMLElement, player: Player<any>) => new BalanceDruidSimUI(parentElem, player),\r\n\t[Spec.SpecFeralDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralDruidSimUI(parentElem, player),\r\n\t[Spec.SpecFeralTankDruid]: (parentElem: HTMLElement, player: Player<any>) => new FeralTankDruidSimUI(parentElem, player),\r\n\t[Spec.SpecRestorationDruid]: (parentElem: HTMLElement, player: Player<any>) => new RestorationDruidSimUI(parentElem, player),\r\n\t[Spec.SpecElementalShaman]: (parentElem: HTMLElement, player: Player<any>) => new ElementalShamanSimUI(parentElem, player),\r\n\t[Spec.SpecEnhancementShaman]: (parentElem: HTMLElement, player: Player<any>) => new EnhancementShamanSimUI(parentElem, player),\r\n\t[Spec.SpecRestorationShaman]: (parentElem: HTMLElement, player: Player<any>) => new RestorationShamanSimUI(parentElem, player),\r\n\t[Spec.SpecHunter]: (parentElem: HTMLElement, player: Player<any>) => new HunterSimUI(parentElem, player),\r\n\t[Spec.SpecMage]: (parentElem: HTMLElement, player: Player<any>) => new MageSimUI(parentElem, player),\r\n\t[Spec.SpecRogue]: (parentElem: HTMLElement, player: Player<any>) => new RogueSimUI(parentElem, player),\r\n\t[Spec.SpecHolyPaladin]: (parentElem: HTMLElement, player: Player<any>) => new HolyPaladinSimUI(parentElem, player),\r\n\t[Spec.SpecProtectionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionPaladinSimUI(parentElem, player),\r\n\t[Spec.SpecRetributionPaladin]: (parentElem: HTMLElement, player: Player<any>) => new RetributionPaladinSimUI(parentElem, player),\r\n\t[Spec.SpecHealingPriest]: (parentElem: HTMLElement, player: Player<any>) => new HealingPriestSimUI(parentElem, player),\r\n\t[Spec.SpecShadowPriest]: (parentElem: HTMLElement, player: Player<any>) => new ShadowPriestSimUI(parentElem, player),\r\n\t[Spec.SpecSmitePriest]: (parentElem: HTMLElement, player: Player<any>) => new SmitePriestSimUI(parentElem, player),\r\n\t[Spec.SpecWarrior]: (parentElem: HTMLElement, player: Player<any>) => new WarriorSimUI(parentElem, player),\r\n\t[Spec.SpecProtectionWarrior]: (parentElem: HTMLElement, player: Player<any>) => new ProtectionWarriorSimUI(parentElem, player),\r\n\t[Spec.SpecWarlock]: (parentElem: HTMLElement, player: Player<any>) => new WarlockSimUI(parentElem, player),\r\n};\r\n\r\n// Configuration necessary for creating new players.\r\nexport interface PresetSpecSettings<SpecType extends Spec> {\r\n\tspec: Spec,\r\n\trotation: SpecRotation<SpecType>,\r\n\ttalents: SavedTalents,\r\n\tspecOptions: SpecOptions<SpecType>,\r\n\tconsumes: Consumes,\r\n\r\n\tdefaultName: string,\r\n\tdefaultFactionRaces: Record<Faction, Race>,\r\n\tdefaultGear: Record<Faction, Record<number, EquipmentSpec>>,\r\n\totherDefaults?: OtherDefaults,\r\n\r\n\ttooltip: string,\r\n\ticonUrl: string,\r\n}\r\n\r\nexport const playerPresets: Array<PresetSpecSettings<any>> = [\r\n\t// {\r\n\t// \tspec: Spec.SpecTankDeathknight,\r\n\t// \trotation: TankDeathknightPresets.DefaultRotation,\r\n\t// \ttalents: TankDeathknightPresets.BloodTalents.data,\r\n\t// \tspecOptions: TankDeathknightPresets.DefaultOptions,\r\n\t// \tconsumes: TankDeathknightPresets.DefaultConsumes,\r\n\t// \tdefaultName: 'Blood Tank',\r\n\t// \tdefaultFactionRaces: {\r\n\t// \t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t// \t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t// \t\t[Faction.Horde]: Race.RaceTroll,\r\n\t// \t},\r\n\t// \tdefaultGear: {\r\n\t// \t\t[Faction.Unknown]: {},\r\n\t// \t\t[Faction.Alliance]: {\r\n\t// \t\t\t1: TankDeathknightPresets.P1_BLOOD_PRESET.gear,\r\n\t// \t\t\t2: TankDeathknightPresets.P2_BLOOD_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t\t[Faction.Horde]: {\r\n\t// \t\t\t1: TankDeathknightPresets.P1_BLOOD_PRESET.gear,\r\n\t// \t\t\t2: TankDeathknightPresets.P2_BLOOD_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \ttooltip: 'Blood Tank Death Knight',\r\n\t// \ticonUrl: getSpecIcon(Class.ClassDeathknight, 0),\r\n\t// },\r\n\t// {\r\n\t// \tspec: Spec.SpecDeathknight,\r\n\t// \trotation: DeathknightPresets.DefaultBloodRotation,\r\n\t// \ttalents: DeathknightPresets.BloodTalents.data,\r\n\t// \tspecOptions: DeathknightPresets.DefaultBloodOptions,\r\n\t// \tconsumes: DeathknightPresets.DefaultConsumes,\r\n\t// \tdefaultName: 'Blood DPS',\r\n\t// \tdefaultFactionRaces: {\r\n\t// \t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t// \t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t// \t\t[Faction.Horde]: Race.RaceOrc,\r\n\t// \t},\r\n\t// \tdefaultGear: {\r\n\t// \t\t[Faction.Unknown]: {},\r\n\t// \t\t[Faction.Alliance]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t\t[Faction.Horde]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_BLOOD_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \ttooltip: 'Blood DPS Death Knight',\r\n\t// \ticonUrl: getSpecIcon(Class.ClassDeathknight, 3),\r\n\t// },\r\n\t// {\r\n\t// \tspec: Spec.SpecDeathknight,\r\n\t// \trotation: DeathknightPresets.DefaultFrostRotation,\r\n\t// \ttalents: DeathknightPresets.FrostTalents.data,\r\n\t// \tspecOptions: DeathknightPresets.DefaultFrostOptions,\r\n\t// \tconsumes: DeathknightPresets.DefaultConsumes,\r\n\t// \tdefaultName: 'Frost',\r\n\t// \tdefaultFactionRaces: {\r\n\t// \t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t// \t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t// \t\t[Faction.Horde]: Race.RaceTroll,\r\n\t// \t},\r\n\t// \tdefaultGear: {\r\n\t// \t\t[Faction.Unknown]: {},\r\n\t// \t\t[Faction.Alliance]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_FROST_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_FROST_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_FROST_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t\t[Faction.Horde]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_FROST_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_FROST_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_FROST_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \totherDefaults: DeathknightPresets.OtherDefaults,\r\n\t// \ttooltip: 'Frost Death Knight',\r\n\t// \ticonUrl: getSpecIcon(Class.ClassDeathknight, 1),\r\n\t// },\r\n\t// {\r\n\t// \tspec: Spec.SpecDeathknight,\r\n\t// \trotation: DeathknightPresets.DefaultUnholyRotation,\r\n\t// \ttalents: DeathknightPresets.UnholyDualWieldTalents.data,\r\n\t// \tspecOptions: DeathknightPresets.DefaultUnholyOptions,\r\n\t// \tconsumes: DeathknightPresets.DefaultConsumes,\r\n\t// \tdefaultName: 'Unholy',\r\n\t// \tdefaultFactionRaces: {\r\n\t// \t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t// \t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t// \t\t[Faction.Horde]: Race.RaceTroll,\r\n\t// \t},\r\n\t// \tdefaultGear: {\r\n\t// \t\t[Faction.Unknown]: {},\r\n\t// \t\t[Faction.Alliance]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t\t[Faction.Horde]: {\r\n\t// \t\t\t1: DeathknightPresets.P1_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t\t2: DeathknightPresets.P2_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t\t3: DeathknightPresets.P3_UNHOLY_DW_BIS_PRESET.gear,\r\n\t// \t\t},\r\n\t// \t},\r\n\t// \totherDefaults: DeathknightPresets.OtherDefaults,\r\n\t// \ttooltip: 'Dual-Wield Unholy DK',\r\n\t// \ticonUrl: getSpecIcon(Class.ClassDeathknight, 2),\r\n\t// },\r\n\t{\r\n\t\tspec: Spec.SpecBalanceDruid,\r\n\t\trotation: BalanceDruidPresets.DefaultRotation,\r\n\t\ttalents: BalanceDruidPresets.Phase1Talents.data,\r\n\t\tspecOptions: BalanceDruidPresets.DefaultOptions,\r\n\t\tconsumes: BalanceDruidPresets.DefaultConsumes,\r\n\t\totherDefaults: BalanceDruidPresets.OtherDefaults,\r\n\t\tdefaultName: 'Balance',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceTauren,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: BalanceDruidPresets.PRE_RAID_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: BalanceDruidPresets.PRE_RAID_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecBalanceDruid],\r\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecFeralDruid,\r\n\t\trotation: FeralDruidPresets.DefaultRotation,\r\n\t\ttalents: FeralDruidPresets.OmenTalents.data,\r\n\t\tspecOptions: FeralDruidPresets.DefaultOptions,\r\n\t\tconsumes: FeralDruidPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Cat',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceTauren,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: FeralDruidPresets.PreRaid_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: FeralDruidPresets.PreRaid_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecFeralDruid],\r\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 3),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecFeralTankDruid,\r\n\t\trotation: FeralTankDruidPresets.DefaultRotation,\r\n\t\ttalents: FeralTankDruidPresets.StandardTalents.data,\r\n\t\tspecOptions: FeralTankDruidPresets.DefaultOptions,\r\n\t\tconsumes: FeralTankDruidPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Bear',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceTauren,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\r\n\t\t\t\t2: FeralTankDruidPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: FeralTankDruidPresets.P1_PRESET.gear,\r\n\t\t\t\t2: FeralTankDruidPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecFeralTankDruid],\r\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecRestorationDruid,\r\n\t\trotation: RestorationDruidPresets.DefaultRotation,\r\n\t\ttalents: RestorationDruidPresets.CelestialFocusTalents.data,\r\n\t\tspecOptions: RestorationDruidPresets.DefaultOptions,\r\n\t\tconsumes: RestorationDruidPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Restoration',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceTauren,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: RestorationDruidPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RestorationDruidPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: RestorationDruidPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RestorationDruidPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecRestorationDruid],\r\n\t\ticonUrl: getSpecIcon(Class.ClassDruid, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHunter,\r\n\t\trotation: HunterPresets.DefaultRotation,\r\n\t\ttalents: HunterPresets.BeastMasteryTalents.data,\r\n\t\tspecOptions: HunterPresets.BMDefaultOptions,\r\n\t\tconsumes: HunterPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Beast Mastery',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Beast Mastery Hunter',\r\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHunter,\r\n\t\trotation: HunterPresets.DefaultRotation,\r\n\t\ttalents: HunterPresets.MarksmanTalents.data,\r\n\t\tspecOptions: HunterPresets.DefaultOptions,\r\n\t\tconsumes: HunterPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Marksmanship',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HunterPresets.MM_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.MM_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.MM_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.MM_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Marksmanship Hunter',\r\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHunter,\r\n\t\trotation: HunterPresets.DefaultRotation,\r\n\t\ttalents: HunterPresets.SurvivalTalents.data,\r\n\t\tspecOptions: HunterPresets.DefaultOptions,\r\n\t\tconsumes: HunterPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Survival',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceNightElf,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.SV_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.SV_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.SV_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HunterPresets.SV_P1_PRESET.gear,\r\n\t\t\t\t2: HunterPresets.SV_P2_PRESET.gear,\r\n\t\t\t\t3: HunterPresets.SV_P3_PRESET.gear,\r\n\t\t\t\t4: HunterPresets.SV_P4_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Survival Hunter',\r\n\t\ticonUrl: getSpecIcon(Class.ClassHunter, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecMage,\r\n\t\trotation: MagePresets.DefaultArcaneRotation,\r\n\t\ttalents: MagePresets.ArcaneTalents.data,\r\n\t\tspecOptions: MagePresets.DefaultArcaneOptions,\r\n\t\tconsumes: MagePresets.DefaultArcaneConsumes,\r\n\t\totherDefaults: MagePresets.OtherDefaults,\r\n\t\tdefaultName: 'Arcane',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\r\n\t\t\t[Faction.Horde]: Race.RaceTroll,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: MagePresets.ARCANE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.ARCANE_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.ARCANE_P3_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: MagePresets.ARCANE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.ARCANE_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.ARCANE_P3_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Arcane Mage',\r\n\t\ticonUrl: getSpecIcon(Class.ClassMage, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecMage,\r\n\t\trotation: MagePresets.DefaultFireRotation,\r\n\t\ttalents: MagePresets.FireTalents.data,\r\n\t\tspecOptions: MagePresets.DefaultFireOptions,\r\n\t\tconsumes: MagePresets.DefaultFireConsumes,\r\n\t\totherDefaults: MagePresets.OtherDefaults,\r\n\t\tdefaultName: 'TTW Fire',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\r\n\t\t\t[Faction.Horde]: Race.RaceTroll,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.FIRE_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.FIRE_P3_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.FIRE_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.FIRE_P3_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'TTW Fire Mage',\r\n\t\ticonUrl: getSpecIcon(Class.ClassMage, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecMage,\r\n\t\trotation: MagePresets.DefaultFFBRotation,\r\n\t\ttalents: MagePresets.FrostfireTalents.data,\r\n\t\tspecOptions: MagePresets.DefaultFFBOptions,\r\n\t\tconsumes: MagePresets.DefaultFireConsumes,\r\n\t\totherDefaults: MagePresets.OtherDefaults,\r\n\t\tdefaultName: 'FFB Fire',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceGnome,\r\n\t\t\t[Faction.Horde]: Race.RaceTroll,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.FFB_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.FFB_P3_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: MagePresets.FIRE_P1_PRESET.gear,\r\n\t\t\t\t2: MagePresets.FFB_P2_PRESET.gear,\r\n\t\t\t\t3: MagePresets.FFB_P3_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'FFB Fire Mage',\r\n\t\ticonUrl: \"https://wow.zamimg.com/images/wow/icons/medium/ability_mage_frostfirebolt.jpg\",\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecRogue,\r\n\t\trotation: RoguePresets.DefaultRotation,\r\n\t\ttalents: RoguePresets.AssassinationTalents137.data,\r\n\t\tspecOptions: RoguePresets.DefaultOptions,\r\n\t\tconsumes: RoguePresets.DefaultConsumes,\r\n\t\tdefaultName: 'Assassination',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: RoguePresets.P1_PRESET_ASSASSINATION.gear,\r\n\t\t\t\t2: RoguePresets.P2_PRESET_ASSASSINATION.gear,\r\n\t\t\t\t3: RoguePresets.P3_PRESET_ASSASSINATION.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: RoguePresets.P1_PRESET_ASSASSINATION.gear,\r\n\t\t\t\t2: RoguePresets.P2_PRESET_ASSASSINATION.gear,\r\n\t\t\t\t3: RoguePresets.P3_PRESET_ASSASSINATION.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Assassination Rogue',\r\n\t\ticonUrl: getSpecIcon(Class.ClassRogue, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecRogue,\r\n\t\trotation: RoguePresets.DefaultRotation,\r\n\t\ttalents: RoguePresets.CombatCQCTalents.data,\r\n\t\tspecOptions: RoguePresets.DefaultOptions,\r\n\t\tconsumes: RoguePresets.DefaultConsumes,\r\n\t\tdefaultName: 'Combat',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\r\n\t\t\t\t2: RoguePresets.P2_PRESET_COMBAT.gear,\r\n\t\t\t\t3: RoguePresets.P3_PRESET_COMBAT.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: RoguePresets.P1_PRESET_COMBAT.gear,\r\n\t\t\t\t2: RoguePresets.P2_PRESET_COMBAT.gear,\r\n\t\t\t\t3: RoguePresets.P3_PRESET_COMBAT.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Combat Rogue',\r\n\t\ticonUrl: getSpecIcon(Class.ClassRogue, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecElementalShaman,\r\n\t\trotation: ElementalShamanPresets.DefaultRotation,\r\n\t\ttalents: ElementalShamanPresets.StandardTalents.data,\r\n\t\tspecOptions: ElementalShamanPresets.DefaultOptions,\r\n\t\tconsumes: ElementalShamanPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Elemental',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ElementalShamanPresets.P2_PRESET.gear,\r\n\t\t\t\t3: ElementalShamanPresets.P3_PRESET_ALLI.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: ElementalShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ElementalShamanPresets.P2_PRESET.gear,\r\n\t\t\t\t3: ElementalShamanPresets.P3_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecElementalShaman],\r\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecEnhancementShaman,\r\n\t\trotation: EnhancementShamanPresets.DefaultRotation,\r\n\t\ttalents: EnhancementShamanPresets.StandardTalents.data,\r\n\t\tspecOptions: EnhancementShamanPresets.DefaultOptions,\r\n\t\tconsumes: EnhancementShamanPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Enhancement',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: EnhancementShamanPresets.P2_PRESET_FT.gear,\r\n\t\t\t\t3: EnhancementShamanPresets.P3_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: EnhancementShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: EnhancementShamanPresets.P2_PRESET_FT.gear,\r\n\t\t\t\t3: EnhancementShamanPresets.P3_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecEnhancementShaman],\r\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecRestorationShaman,\r\n\t\trotation: RestorationShamanPresets.DefaultRotation,\r\n\t\ttalents: RestorationShamanPresets.RaidHealingTalents.data,\r\n\t\tspecOptions: RestorationShamanPresets.DefaultOptions,\r\n\t\tconsumes: RestorationShamanPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Restoration',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDraenei,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: RestorationShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RestorationShamanPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: RestorationShamanPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RestorationShamanPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecRestorationShaman],\r\n\t\ticonUrl: getSpecIcon(Class.ClassShaman, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHealingPriest,\r\n\t\trotation: HealingPriestPresets.DiscDefaultRotation,\r\n\t\ttalents: HealingPriestPresets.DiscTalents.data,\r\n\t\tspecOptions: HealingPriestPresets.DefaultOptions,\r\n\t\tconsumes: HealingPriestPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Discipline',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\r\n\t\t\t[Faction.Horde]: Race.RaceUndead,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HealingPriestPresets.DISC_P1_PRESET.gear,\r\n\t\t\t\t2: HealingPriestPresets.DISC_P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HealingPriestPresets.DISC_P1_PRESET.gear,\r\n\t\t\t\t2: HealingPriestPresets.DISC_P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Discipline Priest',\r\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHealingPriest,\r\n\t\trotation: HealingPriestPresets.HolyDefaultRotation,\r\n\t\ttalents: HealingPriestPresets.HolyTalents.data,\r\n\t\tspecOptions: HealingPriestPresets.DefaultOptions,\r\n\t\tconsumes: HealingPriestPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Holy',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\r\n\t\t\t[Faction.Horde]: Race.RaceUndead,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HealingPriestPresets.HOLY_P1_PRESET.gear,\r\n\t\t\t\t2: HealingPriestPresets.HOLY_P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HealingPriestPresets.HOLY_P1_PRESET.gear,\r\n\t\t\t\t2: HealingPriestPresets.HOLY_P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Holy Priest',\r\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecShadowPriest,\r\n\t\trotation: ShadowPriestPresets.DefaultRotation,\r\n\t\ttalents: ShadowPriestPresets.StandardTalents.data,\r\n\t\tspecOptions: ShadowPriestPresets.DefaultOptions,\r\n\t\tconsumes: ShadowPriestPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Shadow',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\r\n\t\t\t[Faction.Horde]: Race.RaceUndead,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\r\n\t\t\t\t3: ShadowPriestPresets.P3_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: ShadowPriestPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\r\n\t\t\t\t3: ShadowPriestPresets.P3_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecShadowPriest],\r\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecSmitePriest,\r\n\t\trotation: SmitePriestPresets.DefaultRotation,\r\n\t\ttalents: SmitePriestPresets.StandardTalents.data,\r\n\t\tspecOptions: SmitePriestPresets.DefaultOptions,\r\n\t\tconsumes: SmitePriestPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Smite',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceDwarf,\r\n\t\t\t[Faction.Horde]: Race.RaceUndead,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: SmitePriestPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ShadowPriestPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: specNames[Spec.SpecSmitePriest],\r\n\t\ticonUrl: getSpecIcon(Class.ClassPriest, 3),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecWarrior,\r\n\t\trotation: WarriorPresets.ArmsRotation,\r\n\t\ttalents: WarriorPresets.ArmsTalents.data,\r\n\t\tspecOptions: WarriorPresets.DefaultOptions,\r\n\t\tconsumes: WarriorPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Arms',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\r\n\t\t\t\t2: WarriorPresets.P2_ARMS_PRESET.gear,\r\n\t\t\t\t3: WarriorPresets.P3_ARMS_4P_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: WarriorPresets.P1_ARMS_PRESET.gear,\r\n\t\t\t\t2: WarriorPresets.P2_ARMS_PRESET.gear,\r\n\t\t\t\t3: WarriorPresets.P3_ARMS_4P_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Arms Warrior',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecWarrior,\r\n\t\trotation: WarriorPresets.DefaultRotation,\r\n\t\ttalents: WarriorPresets.FuryTalents.data,\r\n\t\tspecOptions: WarriorPresets.DefaultOptions,\r\n\t\tconsumes: WarriorPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Fury',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\r\n\t\t\t\t2: WarriorPresets.P2_FURY_PRESET.gear,\r\n\t\t\t\t3: WarriorPresets.P3_FURY_PRESET_ALLIANCE.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: WarriorPresets.P1_FURY_PRESET.gear,\r\n\t\t\t\t2: WarriorPresets.P2_FURY_PRESET.gear,\r\n\t\t\t\t3: WarriorPresets.P3_FURY_PRESET_HORDE.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Fury Warrior',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecProtectionWarrior,\r\n\t\trotation: ProtectionWarriorPresets.DefaultRotation,\r\n\t\ttalents: ProtectionWarriorPresets.StandardTalents.data,\r\n\t\tspecOptions: ProtectionWarriorPresets.DefaultOptions,\r\n\t\tconsumes: ProtectionWarriorPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Protection',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\r\n\t\t\t\t2: ProtectionWarriorPresets.P2_SURVIVAL_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: ProtectionWarriorPresets.P1_BALANCED_PRESET.gear,\r\n\t\t\t\t2: ProtectionWarriorPresets.P2_SURVIVAL_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Protection Warrior',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecHolyPaladin,\r\n\t\trotation: HolyPaladinPresets.DefaultRotation,\r\n\t\ttalents: HolyPaladinPresets.StandardTalents.data,\r\n\t\tspecOptions: HolyPaladinPresets.DefaultOptions,\r\n\t\tconsumes: HolyPaladinPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Holy',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: HolyPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: HolyPaladinPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: HolyPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: HolyPaladinPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Holy Paladin',\r\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecProtectionPaladin,\r\n\t\trotation: ProtectionPaladinPresets.DefaultRotation,\r\n\t\ttalents: ProtectionPaladinPresets.GenericAoeTalents.data,\r\n\t\tspecOptions: ProtectionPaladinPresets.DefaultOptions,\r\n\t\tconsumes: ProtectionPaladinPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Protection',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ProtectionPaladinPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: ProtectionPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: ProtectionPaladinPresets.P2_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Protection Paladin',\r\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecRetributionPaladin,\r\n\t\trotation: RetributionPaladinPresets.DefaultRotation,\r\n\t\ttalents: RetributionPaladinPresets.AuraMasteryTalents.data,\r\n\t\tspecOptions: RetributionPaladinPresets.DefaultOptions,\r\n\t\tconsumes: RetributionPaladinPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Retribution',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceBloodElf,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\r\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\r\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\r\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: RetributionPaladinPresets.P1_PRESET.gear,\r\n\t\t\t\t2: RetributionPaladinPresets.P2_PRESET.gear,\r\n\t\t\t\t3: RetributionPaladinPresets.P3_PRESET.gear,\r\n\t\t\t\t4: RetributionPaladinPresets.P4_PRESET.gear,\r\n\t\t\t\t5: RetributionPaladinPresets.P5_PRESET.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\ttooltip: 'Retribution Paladin',\r\n\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 2),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecWarlock,\r\n\t\trotation: WarlockPresets.AfflictionRotation,\r\n\t\ttalents: WarlockPresets.AfflictionTalents.data,\r\n\t\tspecOptions: WarlockPresets.AfflictionOptions,\r\n\t\tconsumes: WarlockPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Affliction',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Affliction.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Affliction.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Affliction_Alliance.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Affliction.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Affliction.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Affliction_Horde.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\totherDefaults: WarlockPresets.OtherDefaults,\r\n\t\ttooltip: 'Affliction Warlock',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 0),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecWarlock,\r\n\t\trotation: WarlockPresets.DemonologyRotation,\r\n\t\ttalents: WarlockPresets.DemonologyTalents.data,\r\n\t\tspecOptions: WarlockPresets.DemonologyOptions,\r\n\t\tconsumes: WarlockPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Demonology',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Demo_Destro.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Demo_Alliance.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Demo_Destro.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Demo_Horde.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\totherDefaults: WarlockPresets.OtherDefaults,\r\n\t\ttooltip: 'Demonology Warlock',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 1),\r\n\t},\r\n\t{\r\n\t\tspec: Spec.SpecWarlock,\r\n\t\trotation: WarlockPresets.DestructionRotation,\r\n\t\ttalents: WarlockPresets.DestructionTalents.data,\r\n\t\tspecOptions: WarlockPresets.DestructionOptions,\r\n\t\tconsumes: WarlockPresets.DefaultConsumes,\r\n\t\tdefaultName: 'Destruction',\r\n\t\tdefaultFactionRaces: {\r\n\t\t\t[Faction.Unknown]: Race.RaceUnknown,\r\n\t\t\t[Faction.Alliance]: Race.RaceHuman,\r\n\t\t\t[Faction.Horde]: Race.RaceOrc,\r\n\t\t},\r\n\t\tdefaultGear: {\r\n\t\t\t[Faction.Unknown]: {},\r\n\t\t\t[Faction.Alliance]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Demo_Destro.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Destro_Alliance.gear,\r\n\t\t\t},\r\n\t\t\t[Faction.Horde]: {\r\n\t\t\t\t1: WarlockPresets.P1_Preset_Demo_Destro.gear,\r\n\t\t\t\t2: WarlockPresets.P2_Preset_Demo_Destro.gear,\r\n\t\t\t\t3: WarlockPresets.P3_Preset_Destro_Horde.gear,\r\n\t\t\t},\r\n\t\t},\r\n\t\totherDefaults: WarlockPresets.OtherDefaults,\r\n\t\ttooltip: 'Destruction Warlock',\r\n\t\ticonUrl: getSpecIcon(Class.ClassWarlock, 2),\r\n\t},\r\n];\r\n\r\nexport const implementedSpecs: Array<Spec> = [...new Set(playerPresets.map(preset => preset.spec))];\r\n","import { Component } from '../core/components/component.js';\r\nimport { EnumPicker } from '../core/components/enum_picker.js';\r\nimport { Raid } from '../core/raid.js';\r\nimport { MAX_PARTY_SIZE } from '../core/party.js';\r\nimport { Party } from '../core/party.js';\r\nimport { Player } from '../core/player.js';\r\nimport { Player as PlayerProto } from '../core/proto/api.js';\r\nimport { Class } from '../core/proto/common.js';\r\nimport { Profession } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Faction } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { cssClassForClass, playerToSpec } from '../core/proto_utils/utils.js';\r\nimport { isTankSpec } from '../core/proto_utils/utils.js';\r\nimport { specToClass } from '../core/proto_utils/utils.js';\r\nimport { newUnitReference } from '../core/proto_utils/utils.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\nimport { formatDeltaTextElem } from '../core/utils.js';\r\nimport { getEnumValues } from '../core/utils.js';\r\n\r\nimport { RaidSimUI } from './raid_sim_ui.js';\r\nimport { playerPresets, specSimFactories } from './presets.js';\r\n\r\nimport { BalanceDruid_Options as BalanceDruidOptions } from '../core/proto/druid.js';\r\nimport { Mage_Options as MageOptions } from '../core/proto/mage.js';\r\nimport { SmitePriest_Options as SmitePriestOptions } from '../core/proto/priest.js';\r\nimport { BaseModal } from '../core/components/base_modal.js';\r\nimport { Tooltip } from 'bootstrap';\r\n\r\nconst NEW_PLAYER: number = -1;\r\n\r\nenum DragType {\r\n\tNone,\r\n\tNew,\r\n\tMove,\r\n\tSwap,\r\n\tCopy,\r\n}\r\n\r\nexport class RaidPicker extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\treadonly raid: Raid;\r\n\treadonly partyPickers: Array<PartyPicker>;\r\n\treadonly newPlayerPicker: NewPlayerPicker;\r\n\r\n\t// Hold data about the player being dragged while the drag is happening.\r\n\tcurrentDragPlayer: Player<any> | null = null;\r\n\tcurrentDragPlayerFromIndex: number = NEW_PLAYER;\r\n\tcurrentDragType: DragType = DragType.New;\r\n\r\n\t// Hold data about the party being dragged while the drag is happening.\r\n\tcurrentDragParty: PartyPicker | null = null;\r\n\r\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parent, 'raid-picker-root');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\t\tthis.raid = raidSimUI.sim.raid;\r\n\r\n\t\tconst raidControls = document.createElement('div');\r\n\t\traidControls.classList.add('raid-controls');\r\n\t\tthis.rootElem.appendChild(raidControls);\r\n\r\n\t\tthis.newPlayerPicker = new NewPlayerPicker(this.rootElem, this);\r\n\r\n\t\tconst activePartiesSelector = new EnumPicker<Raid>(raidControls, this.raidSimUI.sim.raid, {\r\n\t\t\tlabel: 'Raid Size',\r\n\t\t\tlabelTooltip: 'Number of players participating in the sim.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: '5', value: 1 },\r\n\t\t\t\t{ name: '10', value: 2 },\r\n\t\t\t\t{ name: '25', value: 5 },\r\n\t\t\t\t{ name: '40', value: 8 },\r\n\t\t\t],\r\n\t\t\tchangedEvent: (raid: Raid) => raid.numActivePartiesChangeEmitter,\r\n\t\t\tgetValue: (raid: Raid) => raid.getNumActiveParties(),\r\n\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: number) => {\r\n\t\t\t\traid.setNumActiveParties(eventID, newValue);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst factionSelector = new EnumPicker<NewPlayerPicker>(raidControls, this.newPlayerPicker, {\r\n\t\t\tlabel: 'Default Faction',\r\n\t\t\tlabelTooltip: 'Default faction for newly-created players.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Alliance', value: Faction.Alliance },\r\n\t\t\t\t{ name: 'Horde', value: Faction.Horde },\r\n\t\t\t],\r\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raid.sim.factionChangeEmitter,\r\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raid.sim.getFaction(),\r\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: Faction) => {\r\n\t\t\t\tthis.raid.sim.setFaction(eventID, newValue);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst latestPhaseWithAllPresets = Math.min(...playerPresets.map(preset => Math.max(...Object.keys(preset.defaultGear[Faction.Alliance]).map(k => parseInt(k)))));\r\n\t\tconst phaseSelector = new EnumPicker<NewPlayerPicker>(raidControls, this.newPlayerPicker, {\r\n\t\t\tlabel: 'Default Gear',\r\n\t\t\tlabelTooltip: 'Newly-created players will start with approximate BIS gear from this phase.',\r\n\t\t\tvalues: [...Array(latestPhaseWithAllPresets).keys()].map(val => {\r\n\t\t\t\tconst phase = val + 1;\r\n\t\t\t\treturn { name: 'Phase ' + phase, value: phase };\r\n\t\t\t}),\r\n\t\t\tchangedEvent: (picker: NewPlayerPicker) => this.raid.sim.phaseChangeEmitter,\r\n\t\t\tgetValue: (picker: NewPlayerPicker) => this.raid.sim.getPhase(),\r\n\t\t\tsetValue: (eventID: EventID, picker: NewPlayerPicker, newValue: number) => {\r\n\t\t\t\tthis.raid.sim.setPhase(eventID, newValue);\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst partiesContainer = document.createElement('div');\r\n\t\tpartiesContainer.classList.add('parties-container');\r\n\t\tthis.rootElem.appendChild(partiesContainer);\r\n\r\n\t\tthis.partyPickers = this.raid.getParties().map((party, i) => new PartyPicker(partiesContainer, party, i, this));\r\n\r\n\t\tconst updateActiveParties = () => {\r\n\t\t\tthis.partyPickers.forEach(partyPicker => {\r\n\t\t\t\tif (partyPicker.index < this.raidSimUI.sim.raid.getNumActiveParties()) {\r\n\t\t\t\t\tpartyPicker.rootElem.classList.add('active');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpartyPicker.rootElem.classList.remove('active');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tthis.raidSimUI.sim.raid.numActivePartiesChangeEmitter.on(updateActiveParties);\r\n\t\tupdateActiveParties();\r\n\r\n\t\tthis.rootElem.ondragend = event => {\r\n\t\t\t// Uncomment to remove player when dropped 'off' the raid.\r\n\t\t\t//if (this.currentDragPlayerFromIndex != NEW_PLAYER) {\r\n\t\t\t//\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\r\n\t\t\t//\tplayerPicker.setPlayer(null, null, DragType.None);\r\n\t\t\t//}\r\n\r\n\t\t\tthis.clearDragPlayer();\r\n\t\t\tthis.clearDragParty();\r\n\t\t};\r\n\t}\r\n\r\n\tgetCurrentFaction(): Faction {\r\n\t\treturn this.raid.sim.getFaction();\r\n\t}\r\n\r\n\tgetCurrentPhase(): number {\r\n\t\treturn this.raid.sim.getPhase();\r\n\t}\r\n\r\n\tgetPlayerPicker(raidIndex: number): PlayerPicker {\r\n\t\treturn this.partyPickers[Math.floor(raidIndex / MAX_PARTY_SIZE)].playerPickers[raidIndex % MAX_PARTY_SIZE];\r\n\t}\r\n\r\n\tgetPlayerPickers(): Array<PlayerPicker> {\r\n\t\treturn [...new Array(25).keys()].map(i => this.getPlayerPicker(i));\r\n\t}\r\n\r\n\tsetDragPlayer(player: Player<any>, fromIndex: number, type: DragType) {\r\n\t\tthis.clearDragPlayer();\r\n\r\n\t\tthis.currentDragPlayer = player;\r\n\t\tthis.currentDragPlayerFromIndex = fromIndex;\r\n\t\tthis.currentDragType = type;\r\n\r\n\t\tif (fromIndex != NEW_PLAYER) {\r\n\t\t\tconst playerPicker = this.getPlayerPicker(fromIndex);\r\n\t\t\tplayerPicker.rootElem.classList.add('dragfrom');\r\n\t\t}\r\n\t}\r\n\r\n\tclearDragPlayer() {\r\n\t\tif (this.currentDragPlayerFromIndex != NEW_PLAYER) {\r\n\t\t\tconst playerPicker = this.getPlayerPicker(this.currentDragPlayerFromIndex);\r\n\t\t\tplayerPicker.rootElem.classList.remove('dragfrom');\r\n\t\t}\r\n\r\n\t\tthis.currentDragPlayer = null;\r\n\t\tthis.currentDragPlayerFromIndex = NEW_PLAYER;\r\n\t\tthis.currentDragType = DragType.New;\r\n\t}\r\n\r\n\tsetDragParty(party: PartyPicker) {\r\n\t\tthis.currentDragParty = party;\r\n\t\tparty.rootElem.classList.add('dragfrom');\r\n\t}\r\n\tclearDragParty() {\r\n\t\tif (this.currentDragParty) {\r\n\t\t\tthis.currentDragParty.rootElem.classList.remove('dragfrom');\r\n\t\t\tthis.currentDragParty = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PartyPicker extends Component {\r\n\treadonly party: Party;\r\n\treadonly index: number;\r\n\treadonly raidPicker: RaidPicker;\r\n\treadonly playerPickers: Array<PlayerPicker>;\r\n\r\n\tconstructor(parent: HTMLElement, party: Party, index: number, raidPicker: RaidPicker) {\r\n\t\tsuper(parent, 'party-picker-root');\r\n\t\tthis.party = party;\r\n\t\tthis.index = index;\r\n\t\tthis.raidPicker = raidPicker;\r\n\r\n\t\tthis.rootElem.setAttribute('draggable', 'true');\r\n\t\tthis.rootElem.innerHTML = `\r\n\t\t\t<div class=\"party-header\">\r\n\t\t\t\t<label class=\"party-label form-label\">Group ${index + 1}</label>\r\n\t\t\t\t<div class=\"party-results\">\r\n\t\t\t\t\t<span class=\"party-results-dps\"></span>\r\n\t\t\t\t\t<span class=\"party-results-reference-delta\"></span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"players-container\">\r\n\t\t\t</div>\r\n\t\t`;\r\n\r\n\t\tconst playersContainer = this.rootElem.getElementsByClassName('players-container')[0] as HTMLDivElement;\r\n\t\tthis.playerPickers = [...Array(MAX_PARTY_SIZE).keys()].map(i => new PlayerPicker(playersContainer, this, i));\r\n\r\n\t\tconst dpsResultElem = this.rootElem.getElementsByClassName('party-results-dps')[0] as HTMLElement;\r\n\t\tconst referenceDeltaElem = this.rootElem.getElementsByClassName('party-results-reference-delta')[0] as HTMLElement;\r\n\r\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\r\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\r\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\r\n\r\n\t\t\tconst partyDps = currentData?.simResult.raidMetrics.parties[this.index]?.dps.avg || 0;\r\n\t\t\tconst referenceDps = referenceData?.simResult.raidMetrics.parties[this.index]?.dps.avg || 0;\r\n\r\n\t\t\tif (partyDps == 0 && referenceDps == 0) {\r\n\t\t\t\tdpsResultElem.textContent = '';\r\n\t\t\t\treferenceDeltaElem.textContent = '';\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tdpsResultElem.textContent = `${partyDps.toFixed(1)} DPS`;\r\n\r\n\t\t\tif (!referenceData) {\r\n\t\t\t\treferenceDeltaElem.textContent = '';\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tformatDeltaTextElem(referenceDeltaElem, referenceDps, partyDps, 1);\r\n\t\t});\r\n\r\n\t\tthis.rootElem.ondragstart = event => {\r\n\t\t\tif (event.target == this.rootElem) {\r\n\t\t\t\tevent.dataTransfer!.dropEffect = 'move';\r\n\t\t\t\tevent.dataTransfer!.effectAllowed = 'all';\r\n\t\t\t\tthis.raidPicker.setDragParty(this);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet dragEnterCounter = 0;\r\n\t\tthis.rootElem.ondragenter = event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (!this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdragEnterCounter++;\r\n\t\t\tthis.rootElem.classList.add('dragto');\r\n\t\t};\r\n\t\tthis.rootElem.ondragleave = event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (!this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdragEnterCounter--;\r\n\t\t\tif (dragEnterCounter <= 0) {\r\n\t\t\t\tthis.rootElem.classList.remove('dragto');\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.rootElem.ondragover = event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t};\r\n\t\tthis.rootElem.ondrop = event => {\r\n\t\t\tif (!this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdragEnterCounter = 0;\r\n\t\t\tthis.rootElem.classList.remove('dragto');\r\n\r\n\t\t\tconst eventID = TypedEvent.nextEventID();\r\n\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\tconst srcPartyPicker = this.raidPicker.currentDragParty!;\r\n\r\n\t\t\t\tfor (let i = 0; i < MAX_PARTY_SIZE; i++) {\r\n\t\t\t\t\tconst srcPlayerPicker = srcPartyPicker.playerPickers[i]!;\r\n\t\t\t\t\tconst dstPlayerPicker = this.playerPickers[i]!;\r\n\r\n\t\t\t\t\tconst srcPlayer = srcPlayerPicker.player;\r\n\t\t\t\t\tconst dstPlayer = dstPlayerPicker.player;\r\n\r\n\t\t\t\t\tsrcPlayerPicker.setPlayer(eventID, dstPlayer, DragType.Swap);\r\n\t\t\t\t\tdstPlayerPicker.setPlayer(eventID, srcPlayer, DragType.Swap);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tthis.raidPicker.clearDragParty();\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport class PlayerPicker extends Component {\r\n\t// Index of this player within its party (0-4).\r\n\treadonly index: number;\r\n\r\n\t// Index of this player within the whole raid (0-24).\r\n\treadonly raidIndex: number;\r\n\r\n\tplayer: Player<any> | null;\r\n\r\n\treadonly partyPicker: PartyPicker;\r\n\treadonly raidPicker: RaidPicker;\r\n\r\n\tprivate labelElem: HTMLElement | null;\r\n\tprivate iconElem: HTMLImageElement | null;\r\n\tprivate nameElem: HTMLInputElement | null;\r\n\tprivate resultsElem: HTMLElement | null;\r\n\tprivate dpsResultElem: HTMLElement | null;\r\n\tprivate referenceDeltaElem: HTMLElement | null;\r\n\r\n\tconstructor(parent: HTMLElement, partyPicker: PartyPicker, index: number) {\r\n\t\tsuper(parent, 'player-picker-root');\r\n\t\tthis.index = index;\r\n\t\tthis.raidIndex = partyPicker.index * MAX_PARTY_SIZE + index;\r\n\t\tthis.player = null;\r\n\t\tthis.partyPicker = partyPicker;\r\n\t\tthis.raidPicker = partyPicker.raidPicker;\r\n\r\n\t\tthis.labelElem = null;\r\n\t\tthis.iconElem = null;\r\n\t\tthis.nameElem = null;\r\n\t\tthis.resultsElem = null;\r\n\t\tthis.dpsResultElem = null;\r\n\t\tthis.referenceDeltaElem = null;\r\n\r\n\t\tthis.rootElem.classList.add('player');\r\n\r\n\t\tthis.partyPicker.party.compChangeEmitter.on(eventID => {\r\n\t\t\tconst newPlayer = this.partyPicker.party.getPlayer(this.index);\r\n\t\t\tif (newPlayer != this.player)\r\n\t\t\t\tthis.setPlayer(eventID, newPlayer, DragType.None);\r\n\t\t});\r\n\r\n\t\tthis.raidPicker.raidSimUI.referenceChangeEmitter.on(() => {\r\n\t\t\tconst currentData = this.raidPicker.raidSimUI.getCurrentData();\r\n\t\t\tconst referenceData = this.raidPicker.raidSimUI.getReferenceData();\r\n\r\n\t\t\tconst playerDps = currentData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\r\n\t\t\tconst referenceDps = referenceData?.simResult.getPlayerWithRaidIndex(this.raidIndex)?.dps.avg || 0;\r\n\r\n\t\t\tif (this.player) {\r\n\t\t\t\tthis.resultsElem?.classList.remove('hide');\r\n\t\t\t\t(this.dpsResultElem as HTMLElement).textContent = `${playerDps.toFixed(1)} DPS`;\r\n\r\n\t\t\t\tif (referenceData)\r\n\t\t\t\t\tformatDeltaTextElem(this.referenceDeltaElem as HTMLElement, referenceDps, playerDps, 1);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet dragEnterCounter = 0;\r\n\t\tthis.rootElem.ondragenter = event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdragEnterCounter++;\r\n\t\t\tthis.rootElem.classList.add('dragto');\r\n\t\t};\r\n\t\tthis.rootElem.ondragleave = event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tif (this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdragEnterCounter--;\r\n\t\t\tif (dragEnterCounter <= 0) {\r\n\t\t\t\tthis.rootElem.classList.remove('dragto');\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.rootElem.ondragover = event => event.preventDefault();\r\n\t\tthis.rootElem.ondrop = event => {\r\n\t\t\tif (this.raidPicker.currentDragParty) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar dropData = event.dataTransfer!.getData(\"text/plain\");\r\n\r\n\t\t\tevent.preventDefault();\r\n\t\t\tdragEnterCounter = 0;\r\n\t\t\tthis.rootElem.classList.remove('dragto');\r\n\r\n\t\t\tconst eventID = TypedEvent.nextEventID();\r\n\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\tif (this.raidPicker.currentDragPlayer == null && dropData.length == 0) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex == this.raidIndex) {\r\n\t\t\t\t\tthis.raidPicker.clearDragPlayer();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dragType = this.raidPicker.currentDragType;\r\n\r\n\t\t\t\tif (this.raidPicker.currentDragPlayerFromIndex != NEW_PLAYER) {\r\n\t\t\t\t\tconst fromPlayerPicker = this.raidPicker.getPlayerPicker(this.raidPicker.currentDragPlayerFromIndex);\r\n\t\t\t\t\tif (dragType == DragType.Swap) {\r\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, this.player, dragType);\r\n\t\t\t\t\t} else if (dragType == DragType.Move) {\r\n\t\t\t\t\t\tfromPlayerPicker.setPlayer(eventID, null, dragType);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this.raidPicker.currentDragPlayer == null) {\r\n\t\t\t\t\t// This would be a copy from another window.\r\n\t\t\t\t\tconst binary = atob(dropData);\r\n\t\t\t\t\tconst bytes = new Uint8Array(binary.length);\r\n\t\t\t\t\tfor (let i = 0; i < bytes.length; i++) {\r\n\t\t\t\t\t\tbytes[i] = binary.charCodeAt(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst playerProto = PlayerProto.fromBinary(bytes);\r\n\r\n\t\t\t\t\tvar localPlayer = new Player(playerToSpec(playerProto), this.raidPicker.raidSimUI.sim);\r\n\t\t\t\t\tlocalPlayer.fromProto(eventID, playerProto);\r\n\t\t\t\t\tthis.raidPicker.currentDragPlayer = localPlayer;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragType == DragType.Copy) {\r\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer!.clone(eventID), dragType);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setPlayer(eventID, this.raidPicker.currentDragPlayer, dragType);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.raidPicker.clearDragPlayer();\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tsetPlayer(eventID: EventID, newPlayer: Player<any> | null, dragType: DragType) {\r\n\t\tif (newPlayer == this.player) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\tthis.player = newPlayer;\r\n\t\t\tif (newPlayer) {\r\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\r\n\r\n\t\t\t\tif (dragType == DragType.New) {\r\n\t\t\t\t\tapplyNewPlayerAssignments(eventID, newPlayer, this.raidPicker.raid);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.partyPicker.party.setPlayer(eventID, this.index, newPlayer);\r\n\t\t\t\tthis.partyPicker.party.compChangeEmitter.emit(eventID);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tprivate update() {\r\n\t\tif (this.player == null) {\r\n\t\t\tthis.rootElem.className = 'player-picker-root player';\r\n\t\t\tthis.rootElem.innerHTML = '';\r\n\r\n\t\t\tthis.labelElem = null;\r\n\t\t\tthis.iconElem = null;\r\n\t\t\tthis.nameElem = null;\r\n\t\t\tthis.resultsElem = null;\r\n\t\t\tthis.dpsResultElem = null;\r\n\t\t\tthis.referenceDeltaElem = null;\r\n\t\t} else {\r\n\t\t\tconst classCssClass = cssClassForClass(this.player.getClass());\r\n\r\n\t\t\tthis.rootElem.className = `player-picker-root player bg-${classCssClass}-dampened`;\r\n\t\t\tthis.rootElem.innerHTML = `\r\n\t\t\t\t<div class=\"player-label\">\r\n\t\t\t\t\t<img class=\"player-icon\" src=\"${this.player.getSpecIcon()}\" draggable=\"true\" />\r\n\t\t\t\t\t<div class=\"player-details\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclass=\"player-name text-${classCssClass}\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue=\"${this.player.getName()}\"\r\n\t\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\t\tmaxlength=\"15\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div class=\"player-results hide\">\r\n\t\t\t\t\t\t\t<span class=\"player-results-dps\"></span>\r\n\t\t\t\t\t\t\t<span class=\"player-results-reference-delta\"></span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"player-options\">\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\t\t\tclass=\"player-edit\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\r\n\t\t\t\t\t\tdata-bs-title=\"Click to Edit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i class=\"fa fa-edit fa-lg\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\t\t\tclass=\"player-copy link-warning\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\r\n\t\t\t\t\t\tdata-bs-title=\"Drag to Copy\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i class=\"fa fa-copy fa-lg\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\t\t\tclass=\"player-delete link-danger\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\r\n\t\t\t\t\t\tdata-bs-title=\"Click to Delete\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i class=\"fa fa-times fa-lg\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t`;\r\n\r\n\t\t\tthis.labelElem = this.rootElem.querySelector('.player-label') as HTMLElement;\r\n\t\t\tthis.iconElem = this.rootElem.querySelector('.player-icon') as HTMLImageElement;\r\n\t\t\tthis.nameElem = this.rootElem.querySelector('.player-name') as HTMLInputElement;\r\n\t\t\tthis.resultsElem = this.rootElem.querySelector('.player-results') as HTMLElement;\r\n\t\t\tthis.dpsResultElem = this.rootElem.querySelector('.player-results-dps') as HTMLElement;\r\n\t\t\tthis.referenceDeltaElem = this.rootElem.querySelector('.player-results-reference-delta') as HTMLElement;\r\n\r\n\t\t\tthis.bindPlayerEvents();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate bindPlayerEvents() {\r\n\t\tthis.nameElem?.addEventListener('input', event => {\r\n\t\t\tthis.player?.setName(TypedEvent.nextEventID(), this.nameElem?.value || '');\r\n\t\t});\r\n\r\n\t\tthis.nameElem?.addEventListener('mousedown', event => {\r\n\t\t\tthis.partyPicker.rootElem.setAttribute('draggable', 'false')\r\n\t\t})\r\n\r\n\t\tthis.nameElem?.addEventListener('mouseup', event => {\r\n\t\t\tthis.partyPicker.rootElem.setAttribute('draggable', 'true')\r\n\t\t})\r\n\r\n\t\tconst emptyName = 'Unnamed';\r\n\t\tthis.nameElem?.addEventListener('focusout', event => {\r\n\t\t\tif (this.nameElem && !this.nameElem.value) {\r\n\t\t\t\tthis.nameElem.value = emptyName;\r\n\t\t\t\tthis.player?.setName(TypedEvent.nextEventID(), emptyName);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst dragStart = (event: DragEvent, type: DragType) => {\r\n\t\t\tif (this.player == null) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tevent.dataTransfer!.dropEffect = 'move';\r\n\t\t\tevent.dataTransfer!.effectAllowed = 'all';\r\n\r\n\t\t\tif (this.player) {\r\n\t\t\t\tvar playerDataProto = this.player.toProto(true);\r\n\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", btoa(String.fromCharCode(...PlayerProto.toBinary(playerDataProto))));\r\n\t\t\t}\r\n\r\n\t\t\tthis.raidPicker.setDragPlayer(this.player, this.raidIndex, type);\r\n\t\t};\r\n\r\n\t\tconst editElem = this.rootElem.querySelector('.player-edit') as HTMLElement;\r\n\t\tconst copyElem = this.rootElem.querySelector('.player-copy') as HTMLElement;\r\n\t\tconst deleteElem = this.rootElem.querySelector('.player-delete') as HTMLElement;\r\n\r\n\t\tconst editTooltip = Tooltip.getOrCreateInstance(editElem);\r\n\t\tconst copyTooltip = Tooltip.getOrCreateInstance(copyElem);\r\n\t\tconst deleteTooltip = Tooltip.getOrCreateInstance(deleteElem);\r\n\r\n\t\t(this.iconElem as HTMLElement).ondragstart = event => {\r\n\t\t\tevent.dataTransfer!.setDragImage(this.rootElem, 20, 20);\r\n\t\t\tdragStart(event, DragType.Swap)\r\n\t\t}\r\n\t\teditElem.onclick = event => {\r\n\t\t\tnew PlayerEditorModal(this.player as Player<any>);\r\n\t\t};\r\n\t\tcopyElem.ondragstart = event => {\r\n\t\t\tevent.dataTransfer!.setDragImage(this.rootElem, 20, 20);\r\n\t\t\tdragStart(event, DragType.Copy);\r\n\t\t}\r\n\t\tdeleteElem.onclick = event => {\r\n\t\t\tdeleteTooltip.hide();\r\n\t\t\tthis.setPlayer(TypedEvent.nextEventID(), null, DragType.None);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass PlayerEditorModal extends BaseModal {\r\n\tconstructor(player: Player<any>) {\r\n\t\tsuper(document.body, 'player-editor-modal', {\r\n\t\t\tcloseButton: { fixed: true },\r\n\t\t\theader: false\r\n\t\t});\r\n\r\n\t\tthis.rootElem.id = 'playerEditorModal';\r\n\t\tthis.body.insertAdjacentHTML('beforeend', `\r\n\t\t\t<div class=\"player-editor within-raid-sim\"></div>\r\n\t\t`);\r\n\r\n\t\tconst editorRoot = this.rootElem.getElementsByClassName('player-editor')[0] as HTMLElement;\r\n\t\tconst individualSim = specSimFactories[player.spec]!(editorRoot, player);\r\n\t}\r\n}\r\n\r\nclass NewPlayerPicker extends Component {\r\n\treadonly raidPicker: RaidPicker;\r\n\r\n\tconstructor(parent: HTMLElement, raidPicker: RaidPicker) {\r\n\t\tsuper(parent, 'new-player-picker-root');\r\n\t\tthis.raidPicker = raidPicker;\r\n\r\n\t\tgetEnumValues(Class).forEach(wowClass => {\r\n\t\t\tif (wowClass == Class.ClassUnknown) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst matchingPresets = playerPresets.filter(preset => specToClass[preset.spec] == wowClass);\r\n\t\t\tif (matchingPresets.length == 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst classPresetsContainer = document.createElement('div');\r\n\t\t\tclassPresetsContainer.classList.add('class-presets-container', `bg-${cssClassForClass(wowClass as Class)}-dampened`);\r\n\t\t\tthis.rootElem.appendChild(classPresetsContainer);\r\n\r\n\t\t\tmatchingPresets.forEach(matchingPreset => {\r\n\t\t\t\tconst presetElemFragment = document.createElement('fragment');\r\n\t\t\t\tpresetElemFragment.innerHTML = `\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\tdata-bs-toggle=\"tooltip\"\r\n\t\t\t\t\t\tdata-bs-title=\"${matchingPreset.tooltip}\"\r\n\t\t\t\t\t\tdata-bs-html=\"true\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img class=\"preset-picker-icon player-icon\" src=\"${matchingPreset.iconUrl}\"/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t`\r\n\t\t\t\tconst presetElem = presetElemFragment.children[0] as HTMLElement;\r\n\t\t\t\tclassPresetsContainer.appendChild(presetElem);\r\n\r\n\t\t\t\tTooltip.getOrCreateInstance(presetElem);\r\n\r\n\t\t\t\tpresetElem.ondragstart = event => {\r\n\t\t\t\t\tconst eventID = TypedEvent.nextEventID();\r\n\t\t\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\t\t\tconst dragImage = new Image();\r\n\t\t\t\t\t\tdragImage.src = matchingPreset.iconUrl;\r\n\t\t\t\t\t\tevent.dataTransfer!.setDragImage(dragImage, 30, 30);\r\n\t\t\t\t\t\tevent.dataTransfer!.setData(\"text/plain\", \"\");\r\n\t\t\t\t\t\tevent.dataTransfer!.dropEffect = 'copy';\r\n\r\n\t\t\t\t\t\tconst newPlayer = new Player(matchingPreset.spec, this.raidPicker.raid.sim);\r\n\t\t\t\t\t\tnewPlayer.applySharedDefaults(eventID);\r\n\t\t\t\t\t\tnewPlayer.setRace(eventID, matchingPreset.defaultFactionRaces[this.raidPicker.getCurrentFaction()]);\r\n\t\t\t\t\t\tnewPlayer.setRotation(eventID, matchingPreset.rotation);\r\n\t\t\t\t\t\tnewPlayer.setTalentsString(eventID, matchingPreset.talents.talentsString);\r\n\t\t\t\t\t\tnewPlayer.setGlyphs(eventID, matchingPreset.talents.glyphs || Glyphs.create());\r\n\t\t\t\t\t\tnewPlayer.setSpecOptions(eventID, matchingPreset.specOptions);\r\n\t\t\t\t\t\tnewPlayer.setConsumes(eventID, matchingPreset.consumes);\r\n\t\t\t\t\t\tnewPlayer.setName(eventID, matchingPreset.defaultName);\r\n\t\t\t\t\t\tnewPlayer.setProfession1(eventID, matchingPreset.otherDefaults?.profession1 || Profession.Engineering);\r\n\t\t\t\t\t\tnewPlayer.setProfession2(eventID, matchingPreset.otherDefaults?.profession2 || Profession.Jewelcrafting);\r\n\t\t\t\t\t\tnewPlayer.setDistanceFromTarget(eventID, matchingPreset.otherDefaults?.distanceFromTarget || 0);\r\n\r\n\t\t\t\t\t\t// Need to wait because the gear might not be loaded yet.\r\n\t\t\t\t\t\tthis.raidPicker.raid.sim.waitForInit().then(() => {\r\n\t\t\t\t\t\t\tnewPlayer.setGear(\r\n\t\t\t\t\t\t\t\teventID,\r\n\t\t\t\t\t\t\t\tthis.raidPicker.raid.sim.db.lookupEquipmentSpec(\r\n\t\t\t\t\t\t\t\t\tmatchingPreset.defaultGear[this.raidPicker.getCurrentFaction()][this.raidPicker.getCurrentPhase()]));\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.raidPicker.setDragPlayer(newPlayer, NEW_PLAYER, DragType.New);\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction applyNewPlayerAssignments(eventID: EventID, newPlayer: Player<any>, raid: Raid) {\r\n\tif (isTankSpec(newPlayer.spec)) {\r\n\t\tconst tanks = raid.getTanks();\r\n\t\tconst emptyIdx = tanks.findIndex(tank => raid.getPlayerFromUnitReference(tank) == null);\r\n\t\tif (emptyIdx == -1) {\r\n\t\t\tif (tanks.length < 3) {\r\n\t\t\t\traid.setTanks(eventID, tanks.concat([newPlayer.makeUnitReference()]));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttanks[emptyIdx] = newPlayer.makeUnitReference();\r\n\t\t\traid.setTanks(eventID, tanks);\r\n\t\t}\r\n\t}\r\n\r\n\t// Spec-specific assignments. For most cases, default to buffing self.\r\n\tif (newPlayer.spec == Spec.SpecBalanceDruid) {\r\n\t\tconst newOptions = newPlayer.getSpecOptions() as BalanceDruidOptions;\r\n\t\tnewOptions.innervateTarget = newUnitReference(newPlayer.getRaidIndex());\r\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\r\n\t} else if (newPlayer.spec == Spec.SpecSmitePriest) {\r\n\t\tconst newOptions = newPlayer.getSpecOptions() as SmitePriestOptions;\r\n\t\tnewOptions.powerInfusionTarget = newUnitReference(newPlayer.getRaidIndex());\r\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\r\n\t} else if (newPlayer.spec == Spec.SpecMage) {\r\n\t\tconst newOptions = newPlayer.getSpecOptions() as MageOptions;\r\n\t\tnewOptions.focusMagicTarget = newUnitReference(newPlayer.getRaidIndex());\r\n\t\tnewPlayer.setSpecOptions(eventID, newOptions);\r\n\t}\r\n}\r\n","import {\r\n\tClass,\r\n\tRaidBuffs,\r\n\tSpec,\r\n} from '../core/proto/common.js';\r\nimport { Component } from '../core/components/component.js';\r\nimport { Player } from \"../core/player.js\";\r\nimport { Raid } from \"../core/raid.js\";\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport {\r\n\tClassSpecs,\r\n\tSpecTalents,\r\n\tspecToClass,\r\n\tisTankSpec,\r\n\tisHealingSpec,\r\n\tisMeleeDpsSpec,\r\n\tisRangedDpsSpec,\r\n\ttextCssClassForClass,\r\n} from '../core/proto_utils/utils.js';\r\nimport { sum } from '../core/utils.js';\r\n\r\nimport { Mage_Rotation_Type as MageRotationType } from '../core/proto/mage.js';\r\nimport { Hunter_Rotation_StingType as HunterStingType, Hunter_Options_PetType as HunterPetType } from '../core/proto/hunter.js';\r\nimport { PaladinAura } from '../core/proto/paladin.js';\r\nimport { Rogue_Rotation_Frequency as ExposeFrequency } from '../core/proto/rogue.js';\r\nimport { AirTotem, EarthTotem, FireTotem, WaterTotem } from '../core/proto/shaman.js';\r\nimport { Warlock_Rotation_Curse as WarlockCurse, Warlock_Options_Summon as WarlockSummon } from '../core/proto/warlock.js';\r\nimport { WarriorShout, Warrior_Rotation_SunderArmor as SunderArmor } from '../core/proto/warrior.js';\r\n\r\nimport { RaidSimUI } from './raid_sim_ui.js';\r\nimport { Tooltip } from 'bootstrap';\r\n\r\ninterface RaidStatsOptions {\r\n\tsections: Array<RaidStatsSectionOptions>,\r\n}\r\n\r\ninterface RaidStatsSectionOptions {\r\n\tlabel: string,\r\n\tcategories: Array<RaidStatsCategoryOptions>,\r\n}\r\n\r\ninterface RaidStatsCategoryOptions {\r\n\tlabel: string,\r\n\teffects: Array<RaidStatsEffectOptions>,\r\n}\r\n\r\ntype PlayerProvider = { class?: Class, condition: (player: Player<any>) => boolean };\r\ntype RaidProvider = (raid: Raid) => boolean;\r\n\r\ninterface RaidStatsEffectOptions {\r\n\tlabel: string,\r\n\tactionId?: ActionId,\r\n\tplayerData?: PlayerProvider,\r\n\traidData?: RaidProvider,\r\n}\r\n\r\nexport class RaidStats extends Component {\r\n\tprivate readonly categories: Array<RaidStatsCategory>;\r\n\r\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parent, 'raid-stats');\r\n\r\n\t\tlet categories: Array<RaidStatsCategory> = [];\r\n\t\tRAID_STATS_OPTIONS.sections.forEach(section => {\r\n\t\t\tconst sectionElem = document.createElement('div');\r\n\t\t\tsectionElem.classList.add('raid-stats-section');\r\n\t\t\tthis.rootElem.appendChild(sectionElem);\r\n\t\t\tsectionElem.innerHTML = `\r\n\t\t\t\t<div class=\"raid-stats-section-header\">\r\n\t\t\t\t\t<label class=\"raid-stats-section-label form-label\">${section.label}</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"raid-stats-section-content\"></div>\r\n\t\t\t`;\r\n\t\t\tconst contentElem = sectionElem.getElementsByClassName('raid-stats-section-content')[0] as HTMLDivElement;\r\n\r\n\t\t\tsection.categories.forEach(categoryOptions => {\r\n\t\t\t\tcategories.push(new RaidStatsCategory(contentElem, raidSimUI, categoryOptions));\r\n\t\t\t});\r\n\t\t});\r\n\t\tthis.categories = categories;\r\n\r\n\t\traidSimUI.changeEmitter.on(eventID => this.categories.forEach(c => c.update()));\r\n\t}\r\n}\r\n\r\nclass RaidStatsCategory extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\tprivate readonly options: RaidStatsCategoryOptions;\r\n\tprivate readonly effects: Array<RaidStatsEffect>;\r\n\tprivate readonly counterElem: HTMLElement;\r\n\tprivate readonly tooltipElem: HTMLElement;\r\n\r\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI, options: RaidStatsCategoryOptions) {\r\n\t\tsuper(parent, 'raid-stats-category-root');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\t\tthis.options = options;\r\n\r\n\t\tthis.rootElem.innerHTML = `\r\n\t\t\t<a href=\"javascript:void(0)\" role=\"button\" class=\"raid-stats-category\">\r\n\t\t\t\t<span class=\"raid-stats-category-counter\"></span>\r\n\t\t\t\t<span class=\"raid-stats-category-label\">${options.label}</span>\r\n\t\t\t</a>\r\n\t\t`;\r\n\r\n\t\tthis.counterElem = this.rootElem.querySelector('.raid-stats-category-counter') as HTMLElement;\r\n\t\tthis.tooltipElem = document.createElement('div');\r\n\t\tthis.tooltipElem.innerHTML = `\r\n\t\t\t<label class=\"raid-stats-category-label\">${options.label}</label>\r\n\t\t`\r\n\r\n\t\tthis.effects = options.effects.map(opt => new RaidStatsEffect(this.tooltipElem, raidSimUI, opt));\r\n\r\n\t\tif (options.effects.length != 1 || options.effects[0].playerData?.class) {\r\n\t\t\tconst statsLink = this.rootElem.querySelector('.raid-stats-category') as HTMLElement;\r\n\r\n\t\t\t// Using the title option here because outerHTML sanitizes and filters out the img src options\r\n\t\t\tTooltip.getOrCreateInstance(statsLink, {\r\n\t\t\t\tcustomClass: 'raid-stats-category-tooltip',\r\n\t\t\t\thtml: true,\r\n\t\t\t\tplacement: 'right',\r\n\t\t\t\ttitle: this.tooltipElem,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tthis.effects.forEach(effect => effect.update());\r\n\r\n\t\tconst total = sum(this.effects.map(effect => effect.count));\r\n\t\tthis.counterElem.textContent = String(total);\r\n\r\n\t\tconst statsLink = this.rootElem.querySelector('.raid-stats-category') as HTMLElement;\r\n\r\n\t\tif (total == 0) {\r\n\t\t\tstatsLink?.classList.remove('active');\r\n\t\t} else {\r\n\t\t\tstatsLink?.classList.add('active');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass RaidStatsEffect extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\tprivate readonly options: RaidStatsEffectOptions;\r\n\tprivate readonly counterElem: HTMLElement;\r\n\r\n\tcurPlayers: Array<Player<any>>;\r\n\tcount: number;\r\n\r\n\tconstructor(parent: HTMLElement, raidSimUI: RaidSimUI, options: RaidStatsEffectOptions) {\r\n\t\tsuper(parent, 'raid-stats-effect');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\t\tthis.options = options;\r\n\r\n\t\tthis.curPlayers = [];\r\n\t\tthis.count = 0;\r\n\r\n\t\tthis.rootElem.innerHTML = `\r\n\t\t\t<span class=\"raid-stats-effect-counter\"></span>\r\n\t\t\t<img class=\"raid-stats-effect-icon\"></img>\r\n\t\t\t<span class=\"raid-stats-effect-label\">${options.label}</span>\r\n\t\t`;\r\n\t\tthis.counterElem = this.rootElem.querySelector('.raid-stats-effect-counter') as HTMLElement;\r\n\r\n\t\tif (this.options.playerData?.class) {\r\n\t\t\tconst labelElem = this.rootElem.querySelector('.raid-stats-effect-label') as HTMLElement;\r\n\t\t\tconst playerCssClass = textCssClassForClass(this.options.playerData.class);\r\n\t\t\tlabelElem.classList.add(playerCssClass);\r\n\t\t}\r\n\r\n\t\tconst iconElem = this.rootElem.querySelector('.raid-stats-effect-icon') as HTMLImageElement;\r\n\t\tif (options.actionId) {\r\n\t\t\toptions.actionId.fill().then(actionId => iconElem.src = actionId.iconUrl);\r\n\t\t} else {\r\n\t\t\ticonElem.remove();\r\n\t\t}\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tif (this.options.playerData) {\r\n\t\t\tthis.curPlayers = this.raidSimUI.getActivePlayers().filter(p => this.options.playerData!.condition(p));\r\n\t\t}\r\n\r\n\t\tconst raidData = this.options.raidData && this.options.raidData(this.raidSimUI.sim.raid);\r\n\r\n\t\tthis.count = this.curPlayers.length + (raidData ? 1 : 0);\r\n\t\tthis.counterElem.textContent = String(this.count);\r\n\t\tif (this.count == 0) {\r\n\t\t\tthis.rootElem.classList.remove('active');\r\n\t\t} else {\r\n\t\t\tthis.rootElem.classList.add('active');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction negateIf(val: boolean, cond: boolean): boolean {\r\n\treturn cond ? !val : val;\r\n}\r\n\r\nfunction playerClass<T extends Class>(clazz: T, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\r\n\treturn {\r\n\t\tclass: clazz,\r\n\t\tcondition: (player: Player<any>): boolean => {\r\n\t\t\treturn player.isClass(clazz)\r\n\t\t\t\t&& (!extraCondition || extraCondition(player));\r\n\t\t},\r\n\t};\r\n}\r\nfunction playerClassAndTalentInternal<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, negateTalent: boolean, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\r\n\treturn {\r\n\t\tclass: clazz,\r\n\t\tcondition: (player: Player<any>): boolean => {\r\n\t\t\treturn player.isClass(clazz)\r\n\t\t\t\t&& negateIf(Boolean((player.getTalents() as any)[talentName]), negateTalent)\r\n\t\t\t\t&& (!extraCondition || extraCondition(player));\r\n\t\t},\r\n\t};\r\n}\r\nfunction playerClassAndTalent<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\r\n\treturn playerClassAndTalentInternal(clazz, talentName, false, extraCondition);\r\n}\r\nfunction playerClassAndMissingTalent<T extends Class>(clazz: T, talentName: keyof SpecTalents<ClassSpecs<T>>, extraCondition?: (player: Player<ClassSpecs<T>>) => boolean): PlayerProvider {\r\n\treturn playerClassAndTalentInternal(clazz, talentName, true, extraCondition);\r\n}\r\nfunction playerSpecAndTalentInternal<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, negateTalent: boolean, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\r\n\treturn {\r\n\t\tclass: specToClass[spec],\r\n\t\tcondition: (player: Player<any>): boolean => {\r\n\t\t\treturn player.isSpec(spec)\r\n\t\t\t\t&& negateIf(Boolean((player.getTalents() as any)[talentName]), negateTalent)\r\n\t\t\t\t&& (!extraCondition || extraCondition(player));\r\n\t\t},\r\n\t};\r\n}\r\nfunction playerSpecAndTalent<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\r\n\treturn playerSpecAndTalentInternal(spec, talentName, false, extraCondition);\r\n}\r\nfunction playerSpecAndMissingTalent<T extends Spec>(spec: T, talentName: keyof SpecTalents<T>, extraCondition?: (player: Player<T>) => boolean): PlayerProvider {\r\n\treturn playerSpecAndTalentInternal(spec, talentName, true, extraCondition);\r\n}\r\n\r\nfunction raidBuff(buffName: keyof RaidBuffs): RaidProvider {\r\n\treturn (raid: Raid): boolean => {\r\n\t\treturn Boolean(raid.getBuffs()[buffName]);\r\n\t};\r\n}\r\n\r\nconst RAID_STATS_OPTIONS: RaidStatsOptions = {\r\n\tsections: [\r\n\t\t{\r\n\t\t\tlabel: 'Roles',\r\n\t\t\tcategories: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Tanks',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Tanks',\r\n\t\t\t\t\t\t\tplayerData: { condition: player => isTankSpec(player.spec) },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Healers',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Healers',\r\n\t\t\t\t\t\t\tplayerData: { condition: player => isHealingSpec(player.spec) },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Melee',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Melee',\r\n\t\t\t\t\t\t\tplayerData: { condition: player => isMeleeDpsSpec(player.spec) },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Ranged',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Ranged',\r\n\t\t\t\t\t\t\tplayerData: { condition: player => isRangedDpsSpec(player.spec) },\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Buffs',\r\n\t\t\tcategories: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Bloodlust',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Bloodlust',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(2825),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().bloodlust),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Stats',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Gift of the Wild',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17051),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'improvedMarkOfTheWild'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Gift of the Wild',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48470),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassDruid, 'improvedMarkOfTheWild'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Drums of the Wild',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(49634),\r\n\t\t\t\t\t\t\traidData: raidBuff('drumsOfTheWild'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Stats %',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blessing of Kings',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25898),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Drums of Forgotten Kings',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(49633),\r\n\t\t\t\t\t\t\traidData: raidBuff('drumsOfForgottenKings'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blessing of Sanctuary',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25899),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Armor',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Devotion Aura',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20140),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'improvedDevotionAura', player => player.getSpecOptions().aura == PaladinAura.DevotionAura),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Devotion Aura',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48942),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPaladin, 'improvedDevotionAura', player => player.getSpecOptions().aura == PaladinAura.DevotionAura),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Stoneskin Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16293),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'guardianTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StoneskinTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Stoneskin Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58753),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'guardianTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StoneskinTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Protection',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43468),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfProtection'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Stamina',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Power Word Fortitude',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(14767),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'improvedPowerWordFortitude'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Power Word Fortitude',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48161),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPriest, 'improvedPowerWordFortitude'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Stamina',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37094),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfStamina'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Str + Agi',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Strength of Earth Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(52456),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'enhancingTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StrengthOfEarthTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Strength of Earth Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58643),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'enhancingTotems', player => player.getSpecOptions().totems?.earth == EarthTotem.StrengthOfEarthTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Horn of Winter',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57623),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDeathknight),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Strength',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43466),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfStrength'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Agility',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(43464),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfAgility'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Intellect',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Arcane Brilliance',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(43002),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassMage),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Fel Intelligence',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54038),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Fel Intelligence',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57567),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Intellect',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37092),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfIntellect'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spirit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Divine Spirit',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48073),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPriest),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Fel Intelligence',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54038),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Fel Intelligence',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57567),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedFelhunter', player => player.getSpecOptions().summon == WarlockSummon.Felhunter),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scroll of Spirit',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromItemId(37098),\r\n\t\t\t\t\t\t\traidData: raidBuff('scrollOfSpirit'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Atk Pwr',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Blessing of Might',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20045),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blessing of Might',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48934),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Battle Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12861),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutBattle),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Battle Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47436),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutBattle),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Atk Pwr %',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Abomination\\'s Might',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53138),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'abominationsMight'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Unleashed Rage',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(30809),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'unleashedRage'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Trueshot Aura',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(19506),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassHunter, 'trueshotAura'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Damage %',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Sanctified Retribution',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31869),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'sanctifiedRetribution'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Arcane Empowerment',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31583),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'arcaneEmpowerment'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Ferocious Inspiration',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(34460),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassHunter, 'ferociousInspiration'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Mit %',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Renewed Hope',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57472),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'renewedHope'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blessing Of Sanctuary',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(25899),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassPaladin),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Vigilance',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50720),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'vigilance'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Haste %',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Swift Retribution',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53648),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'swiftRetribution'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Moonkin Form',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48396),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'improvedMoonkinForm'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'MP5',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Blessing of Wisdom',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20245),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'improvedBlessingOfWisdom'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blessing of Wisdom',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48938),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassPaladin, 'improvedBlessingOfWisdom'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Mana Spring Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16206),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'restorativeTotems', player => player.getSpecOptions().totems?.water == WaterTotem.ManaSpringTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Mana Spring Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58774),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'restorativeTotems', player => player.getSpecOptions().totems?.water == WaterTotem.ManaSpringTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Melee Crit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Leader of the Pack',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17007),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'leaderOfThePack'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Rampage',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29801),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'rampage'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Melee Haste',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Icy Talons',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55610),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'improvedIcyTalons'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Windfury Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29193),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'improvedWindfuryTotem', player => player.getSpecOptions().totems?.air == AirTotem.WindfuryTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Windfury Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(65990),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassShaman, 'improvedWindfuryTotem', player => player.getSpecOptions().totems?.air == AirTotem.WindfuryTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Power',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Demonic Pact',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47240),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'demonicPact'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Totem of Wrath',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57722),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'totemOfWrath', player => player.getSpecOptions().totems?.fire == FireTotem.TotemOfWrath),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Flametongue Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58656),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().totems?.fire == FireTotem.FlametongueTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Crit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Moonkin Form',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(24907),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'moonkinForm'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Elemental Oath',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51470),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'elementalOath'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Haste',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Wrath of Air Totem',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(3738),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassShaman, player => player.getSpecOptions().totems?.air == AirTotem.WrathOfAirTotem),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Health',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Commanding Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12861),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutCommanding),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Commanding Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47440),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'commandingPresence', player => player.getSpecOptions().shout == WarriorShout.WarriorShoutCommanding),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Imp',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(18696),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedImp', player => player.getSpecOptions().summon == WarlockSummon.Imp),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blood Pact',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47982),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarlock, 'improvedImp', player => player.getSpecOptions().summon == WarlockSummon.Imp),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Replenishment',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Vampiric Touch',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48160),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecShadowPriest, 'vampiricTouch'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Judgements of the Wise',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(31878),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecRetributionPaladin, 'judgementsOfTheWise'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Hunting Party',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53292),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecHunter, 'huntingParty'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Soul Leech',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54118),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecWarlock, 'improvedSoulLeech'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Enduring Winter',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(44561),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecMage, 'enduringWinter'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'External Buffs',\r\n\t\t\tcategories: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Innervate',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Innervate',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29166),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Power Infusion',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Power Infusion',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(10060),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'powerInfusion'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Focus Magic',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Focus Magic',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(54648),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'focusMagic'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Tricks of the Trade',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Tricks of the Trade',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57933),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassRogue),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Unholy Frenzy',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Unholy Frenzy',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(49016),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'hysteria'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Pain Suppression',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Pain Suppression',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33206),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPriest, 'painSuppression'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Divine Guardian',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Divine Guardian',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53530),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'divineGuardian'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'DPS Debuffs',\r\n\t\t\tcategories: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Major ArP',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Sunder Armor',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47467),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarrior, player => player.isSpec(Spec.SpecProtectionWarrior) || (player as Player<Spec.SpecWarrior>).getRotation().sunderArmor == SunderArmor.SunderArmorMaintain),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Expose Armor',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(8647),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassRogue, player => player.getRotation().exposeArmorFrequency == ExposeFrequency.Maintain),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Acid Spit',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55754),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Worm),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Minor ArP',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Faerie Fire',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(770),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid, player => player.spec == Spec.SpecFeralTankDruid ||\r\n\t\t\t\t\t\t\t\t(player.spec != Spec.SpecRestorationDruid && (player as Player<Spec.SpecBalanceDruid | Spec.SpecFeralDruid>).getRotation().maintainFaerieFire)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Curse of Weakness',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50511),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarlock, player => player.getRotation().curse == WarlockCurse.Weakness),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Sting',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(56631),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Wasp),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Spore Cloud',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53598),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Bat),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Phys Vuln',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Blood Frenzy',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(29859),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'bloodFrenzy'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Savage Combat',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58413),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassRogue, 'savageCombat'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Bleed',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Mangle',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16862),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassDruid, player => [Spec.SpecFeralDruid, Spec.SpecFeralTankDruid].includes(player.spec)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Trauma',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(46855),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'trauma'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Stampede',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(57393),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.Rhino),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Crit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Totem of Wrath',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(30706),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassShaman, 'totemOfWrath', player => player.getSpecOptions().totems?.fire == FireTotem.TotemOfWrath),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Heart of the Crusader',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(20337),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'heartOfTheCrusader', player => [Spec.SpecRetributionPaladin, Spec.SpecProtectionPaladin].includes(player.spec)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Master Poisoner',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(58410),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassRogue, 'masterPoisoner'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Crit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Shadow Bolt',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(17803),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedShadowBolt'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Scorch',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12873),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'improvedScorch', player => {\r\n\t\t\t\t\t\t\t\tconst rotation = player.getRotation();\r\n\t\t\t\t\t\t\t\treturn rotation.type == MageRotationType.Fire && rotation.maintainImprovedScorch;\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Winter\\'s Chill',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(28593),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassMage, 'wintersChill', player => player.getRotation().type == MageRotationType.Frost),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Hit',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Misery',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33198),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecShadowPriest, 'misery'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Faerie Fire',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(33602),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'improvedFaerieFire'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Spell Dmg',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Ebon Plaguebringer',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51161),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'ebonPlaguebringer'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Earth and Moon',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48511),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'earthAndMoon'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Curse of Elements',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47865),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassWarlock, player => player.getRotation().curse == WarlockCurse.Elements),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tlabel: 'Mitigation Debuffs',\r\n\t\t\tcategories: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Atk Pwr',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Vindication',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(26016),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'vindication', player => [Spec.SpecRetributionPaladin, Spec.SpecProtectionPaladin].includes(player.spec)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Demoralizing Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12879),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'improvedDemoralizingShout', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainDemoShout) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().demoShoutChoice != 0)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Demoralizing Shout',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47437),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'improvedDemoralizingShout', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainDemoShout) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().demoShoutChoice != 0)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Demoralizing Roar',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(16862),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecFeralTankDruid, 'feralAggression', player => player.getRotation().maintainDemoralizingRoar),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Demoralizing Roar',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48560),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndMissingTalent(Spec.SpecFeralTankDruid, 'feralAggression', player => player.getRotation().maintainDemoralizingRoar),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Curse of Weakness',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(18180),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedCurseOfWeakness', player => player.getRotation().curse == WarlockCurse.Weakness),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Curse of Weakness',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(50511),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarlock, 'improvedCurseOfWeakness', player => player.getRotation().curse == WarlockCurse.Weakness),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Demoralizing Screech',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(55487),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getSpecOptions().petType == HunterPetType.CarrionBird),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Atk Speed',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Thunder Clap',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(12666),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassWarrior, 'improvedThunderClap', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainThunderClap) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().thunderClapChoice != 0)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Thunder Clap',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(47502),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassWarrior, 'improvedThunderClap', player => (player.spec == Spec.SpecWarrior && (player as Player<Spec.SpecWarrior>).getRotation().maintainThunderClap) || (player.spec == Spec.SpecProtectionWarrior && (player as Player<Spec.SpecProtectionWarrior>).getRotation().thunderClapChoice != 0)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Improved Frost Fever',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51456),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDeathknight, 'improvedIcyTouch'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Frost Fever',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(51456),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndMissingTalent(Class.ClassDeathknight, 'improvedIcyTouch'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Judgements of the Just',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(53696),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassPaladin, 'judgementsOfTheJust'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Infected Wounds',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(48485),\r\n\t\t\t\t\t\t\tplayerData: playerClassAndTalent(Class.ClassDruid, 'infectedWounds', player => [Spec.SpecFeralDruid, Spec.SpecFeralTankDruid].includes(player.spec)),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Miss',\r\n\t\t\t\t\teffects: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Insect Swarm',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(65855),\r\n\t\t\t\t\t\t\tplayerData: playerSpecAndTalent(Spec.SpecBalanceDruid, 'insectSwarm'),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: 'Scorpid Sting',\r\n\t\t\t\t\t\t\tactionId: ActionId.fromSpellId(3043),\r\n\t\t\t\t\t\t\tplayerData: playerClass(Class.ClassHunter, player => player.getRotation().sting == HunterStingType.ScorpidSting),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t]\r\n};\r\n","import { RaidPicker } from \"./raid_picker\";\r\nimport { RaidSimUI } from \"./raid_sim_ui\";\r\nimport { RaidStats } from \"./raid_stats\";\r\nimport { SavedDataManager } from \"../core/components/saved_data_manager\";\r\nimport { SimTab } from \"../core/components/sim_tab\";\r\nimport { BlessingsAssignments, SavedRaid } from \"../core/proto/ui\";\r\nimport { EventID, TypedEvent } from \"../core/typed_event\";\r\nimport { Raid as RaidProto } from \"../core/proto/api\";\r\n\r\nexport class RaidTab extends SimTab {\r\n\tprotected simUI: RaidSimUI;\r\n\r\n\treadonly leftPanel: HTMLElement;\r\n\treadonly rightPanel: HTMLElement;\r\n\r\n\tconstructor(parentElem: HTMLElement, simUI: RaidSimUI) {\r\n\t\tsuper(parentElem, simUI, { identifier: 'raid-tab', title: 'Raid' });\r\n\t\tthis.simUI = simUI;\r\n\r\n\t\tthis.rootElem.classList.add('active', 'show')\r\n\r\n\t\tthis.leftPanel = document.createElement('div');\r\n\t\tthis.leftPanel.classList.add('raid-tab-left', 'tab-panel-left');\r\n\r\n\t\tthis.rightPanel = document.createElement('div');\r\n\t\tthis.rightPanel.classList.add('raid-tab-right', 'tab-panel-right');\r\n\r\n\t\tthis.contentContainer.appendChild(this.leftPanel);\r\n\t\tthis.contentContainer.appendChild(this.rightPanel);\r\n\r\n\t\tthis.buildTabContent();\r\n\t}\r\n\r\n\tprotected buildTabContent() {\r\n\t\tthis.simUI.raidPicker = new RaidPicker(this.leftPanel, this.simUI);\r\n\t\tnew RaidStats(this.leftPanel, this.simUI);\r\n\r\n\t\tconst savedRaidManager = new SavedDataManager<RaidSimUI, SavedRaid>(\r\n\t\t\tthis.rightPanel, this.simUI, this.simUI, {\r\n\t\t\tlabel: 'Raid',\r\n\t\t\theader: { title: 'Saved Raid Groups' },\r\n\t\t\tstorageKey: this.simUI.getSavedRaidStorageKey(),\r\n\t\t\tgetData: (raidSimUI: RaidSimUI) => SavedRaid.create({\r\n\t\t\t\traid: this.simUI.sim.raid.toProto(),\r\n\t\t\t\tblessings: this.simUI.blessingsPicker!.getAssignments(),\r\n\t\t\t\tfaction: this.simUI.sim.getFaction(),\r\n\t\t\t\tphase: this.simUI.sim.getPhase(),\r\n\t\t\t}),\r\n\t\t\tsetData: (eventID: EventID, raidSimUI: RaidSimUI, newRaid: SavedRaid) => {\r\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\t\tthis.simUI.sim.raid.fromProto(eventID, newRaid.raid || RaidProto.create());\r\n\t\t\t\t\tthis.simUI.blessingsPicker!.setAssignments(eventID, newRaid.blessings || BlessingsAssignments.create());\r\n\t\t\t\t\tif (newRaid.faction) this.simUI.sim.setFaction(eventID, newRaid.faction);\r\n\t\t\t\t\tif (newRaid.phase) this.simUI.sim.setPhase(eventID, newRaid.phase);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tchangeEmitters: [this.simUI.changeEmitter, this.simUI.sim.changeEmitter],\r\n\t\t\tequals: (a: SavedRaid, b: SavedRaid) => {\r\n\t\t\t\treturn SavedRaid.equals(a, b);\r\n\t\t\t},\r\n\t\t\ttoJson: (a: SavedRaid) => SavedRaid.toJson(a),\r\n\t\t\tfromJson: (obj: any) => SavedRaid.fromJson(obj),\r\n\t\t}\r\n\t\t);\r\n\t\tthis.simUI.sim.waitForInit().then(() => {\r\n\t\t\tsavedRaidManager.loadUserData();\r\n\t\t});\r\n\t}\r\n}\r\n","import { Input, InputConfig } from '../components/input.js';\r\nimport { Player } from '../player.js';\r\nimport { Raid } from '../raid.js';\r\nimport { EventID, TypedEvent } from '../typed_event.js';\r\nimport { UnitReference } from '../proto/common.js';\r\nimport { emptyUnitReference, cssClassForClass } from '../proto_utils/utils.js';\r\n\r\nexport interface UnitReferencePickerConfig<ModObject> extends InputConfig<ModObject, UnitReference> {\r\n\tnoTargetLabel: string,\r\n\tcompChangeEmitter: TypedEvent<void>,\r\n}\r\n\r\ninterface OptionElemOptions {\r\n\tisDropdown?: boolean,\r\n\tplayer: Player<any> | null,\r\n}\r\n\r\n// Dropdown menu for selecting a player.\r\nexport class UnitReferencePicker<ModObject> extends Input<ModObject, UnitReference> {\r\n\tprivate readonly config: UnitReferencePickerConfig<ModObject>;\r\n\tprivate readonly raid: Raid;\r\n\r\n\tprivate curPlayer: Player<any> | null;\r\n\tprivate curUnitReference: UnitReference;\r\n\r\n\tprivate currentOptions: Array<OptionElemOptions>;\r\n\r\n\tprivate readonly buttonElem: HTMLElement;\r\n\tprivate readonly dropdownElem: HTMLElement;\r\n\r\n\tconstructor(parent: HTMLElement, raid: Raid, modObj: ModObject, config: UnitReferencePickerConfig<ModObject>) {\r\n\t\tsuper(parent, 'raid-target-picker-root', modObj, config);\r\n\t\tthis.rootElem.classList.add('dropdown');\r\n\t\tthis.config = config;\r\n\t\tthis.raid = raid;\r\n\t\tthis.curPlayer = this.raid.getPlayerFromUnitReference(config.getValue(modObj));\r\n\t\tthis.curUnitReference = this.getInputValue();\r\n\r\n\t\tthis.rootElem.innerHTML = `\r\n\t\t\t<a\r\n\t\t\t\tclass=\"raid-target-picker-button\"\r\n\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\trole=\"button\"\r\n\t\t\t\tdata-bs-toggle=\"dropdown\"\r\n\t\t\t></a>\r\n\t\t\t<div class=\"dropdown-menu\"></div>\r\n    `;\r\n\r\n\t\tthis.buttonElem = this.rootElem.querySelector('.raid-target-picker-button') as HTMLElement;\r\n\t\tthis.dropdownElem = this.rootElem.querySelector('.dropdown-menu') as HTMLElement;\r\n\r\n\t\tthis.buttonElem.addEventListener('click', event => event.preventDefault());\r\n\r\n\t\tthis.currentOptions = [];\r\n\t\tthis.updateOptions(TypedEvent.nextEventID());\r\n\t\tconfig.compChangeEmitter.on(eventID => this.updateOptions(eventID));\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tprivate makeTargetOptions(): Array<OptionElemOptions> {\r\n\t\tconst unassignedOption = { player: null, isDropdown: true }\r\n\t\tconst playerOptions = this.raid.getPlayers().filter(player => player != null).map(player => {\r\n\t\t\treturn { player: player, isDropdown: true }\r\n\t\t});\r\n\r\n\t\treturn [unassignedOption, ...playerOptions]\r\n\t}\r\n\r\n\tprivate updateOptions(eventID: EventID) {\r\n\t\tthis.currentOptions = this.makeTargetOptions();\r\n\r\n\t\tthis.dropdownElem.innerHTML = '';\r\n\t\tthis.currentOptions.forEach(option => this.dropdownElem.appendChild(this.makeOption(option)));\r\n\r\n\t\tconst prevUnitReference = this.curUnitReference;\r\n\t\tthis.curUnitReference = this.getInputValue();\r\n\t\tif (!UnitReference.equals(prevUnitReference, this.curUnitReference)) {\r\n\t\t\tthis.inputChanged(eventID);\r\n\t\t} else {\r\n\t\t\tthis.setInputValue(this.curUnitReference);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate makeOption(data: OptionElemOptions): HTMLElement {\r\n\t\tconst option = UnitReferencePicker.makeOptionElem(data);\r\n\r\n\t\toption.addEventListener('click', event => {\r\n\t\t\tevent.preventDefault();\r\n\t\t\tthis.curPlayer = data.player;\r\n\t\t\tthis.curUnitReference = this.getInputValue();\r\n\t\t\tthis.inputChanged(TypedEvent.nextEventID());\r\n\t\t});\r\n\r\n\t\treturn option;\r\n\t}\r\n\r\n\tgetInputElem(): HTMLElement {\r\n\t\treturn this.buttonElem;\r\n\t}\r\n\r\n\tgetInputValue(): UnitReference {\r\n\t\tif (this.curPlayer) {\r\n\t\t\treturn this.curPlayer.makeUnitReference();\r\n\t\t} else {\r\n\t\t\treturn emptyUnitReference();\r\n\t\t}\r\n\t}\r\n\r\n\tsetInputValue(newValue: UnitReference) {\r\n\t\tthis.curUnitReference = UnitReference.clone(newValue);\r\n\t\tthis.curPlayer = this.raid.getPlayerFromUnitReference(this.curUnitReference);\r\n\r\n\t\tconst optionData = this.currentOptions.find(optionData => optionData.player == this.curPlayer);\r\n\r\n\t\tif (optionData)\r\n\t\t\tthis.buttonElem.innerHTML = UnitReferencePicker.makeOptionElem({ player: optionData.player }).outerHTML;\r\n\t}\r\n\r\n\tstatic makeOptionElem(data: OptionElemOptions): HTMLElement {\r\n\t\tconst classCssClass = data.player ? cssClassForClass(data.player.getClass()) : '';\r\n\t\tlet playerFragment = document.createElement('fragment');\r\n\r\n\t\tplayerFragment.innerHTML = `\r\n\t\t\t<div class=\"player ${classCssClass ? `bg-${classCssClass}-dampened` : ''}\">\r\n\t\t\t\t<div class=\"player-label\">\r\n\t\t\t\t\t${data.player ? `<img class=\"player-icon\" src=\"${data.player.getSpecIcon()}\" draggable=\"false\"/>` : ''}\r\n\t\t\t\t\t<div class=\"player-details\">\r\n\t\t\t\t\t\t<span class=\"player-name ${classCssClass ? `text-${classCssClass}` : ''}\">\r\n\t\t\t\t\t\t\t${data.player ? data.player.getName() : 'Unassigned'}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t`\r\n\r\n\t\tif (data.isDropdown) {\r\n\t\t\tplayerFragment.innerHTML = `\r\n\t\t\t\t<a class=\"dropdown-option\" href=\"javascript:void(0) role=\"button\">${playerFragment.innerHTML}</a>\r\n\t\t\t`\r\n\t\t}\r\n\r\n\t\treturn playerFragment.children[0] as HTMLElement;\r\n\t}\r\n}\r\n","import { Component } from '../core/components/component.js';\r\nimport { UnitReferencePicker } from '../core/components/raid_target_picker.js';\r\n\r\nimport { Player } from '../core/player.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport { Class, UnitReference, Spec } from '../core/proto/common.js';\r\nimport { emptyUnitReference } from '../core/proto_utils/utils.js';\r\n\r\nimport { RaidSimUI } from './raid_sim_ui.js';\r\nimport { PriestTalents } from 'ui/core/proto/priest.js';\r\nimport { DeathknightTalents } from 'ui/core/proto/deathknight.js';\r\n\r\nexport class AssignmentsPicker extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\r\n\r\n\tprivate readonly innervatesPicker: InnervatesPicker;\r\n\tprivate readonly powerInfusionsPicker: PowerInfusionsPicker;\r\n\t// private readonly tricksOfTheTradesPicker: TricksOfTheTradesPicker;\r\n\t// private readonly unholyFrenzyPicker: UnholyFrenzyPicker;\r\n\tprivate readonly focusMagicsPicker: FocusMagicsPicker;\r\n\r\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parentElem, 'assignments-picker-root');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\r\n\t\tthis.innervatesPicker = new InnervatesPicker(this.rootElem, raidSimUI);\r\n\t\tthis.powerInfusionsPicker = new PowerInfusionsPicker(this.rootElem, raidSimUI);\r\n\t\t// this.tricksOfTheTradesPicker = new TricksOfTheTradesPicker(this.rootElem, raidSimUI);\r\n\t\t// this.unholyFrenzyPicker = new UnholyFrenzyPicker(this.rootElem, raidSimUI);\r\n\t\tthis.focusMagicsPicker = new FocusMagicsPicker(this.rootElem, raidSimUI);\r\n\t}\r\n}\r\n\r\ninterface AssignmentTargetPicker {\r\n\tplayer: Player<any>,\r\n\ttargetPicker: UnitReferencePicker<Player<any>>,\r\n\ttargetPlayer: Player<any> | null;\r\n};\r\n\r\nabstract class AssignedBuffPicker extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\r\n\r\n\tprivate readonly playersContainer: HTMLElement;\r\n\r\n\tprivate targetPickers: Array<AssignmentTargetPicker>;\r\n\r\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parentElem, 'assigned-buff-picker-root');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\t\tthis.targetPickers = [];\r\n\r\n\t\tthis.playersContainer = document.createElement('div');\r\n\t\tthis.playersContainer.classList.add('assigned-buff-container');\r\n\t\tthis.rootElem.appendChild(this.playersContainer);\r\n\r\n\t\tthis.raidSimUI.changeEmitter.on(eventID => this.update());\r\n\t\tthis.update();\r\n\t}\r\n\r\n\tprivate update() {\r\n\t\tthis.playersContainer.innerHTML = `\r\n\t\t\t<label class=\"assignmented-buff-label form-label\">${this.getTitle()}</label>\r\n\t\t`\r\n\r\n\t\tconst sourcePlayers = this.getSourcePlayers();\r\n\t\tif (sourcePlayers.length == 0)\r\n\t\t\tthis.rootElem.classList.add('hide');\r\n\t\telse\r\n\t\t\tthis.rootElem.classList.remove('hide');\r\n\r\n\t\tthis.targetPickers = sourcePlayers.map((sourcePlayer, sourcePlayerIndex) => {\r\n\t\t\tconst row = document.createElement('div');\r\n\t\t\trow.classList.add('assigned-buff-player', 'input-inline');\r\n\t\t\tthis.playersContainer.appendChild(row);\r\n\r\n\t\t\tlet sourceElem = document.createElement('div');\r\n\t\t\tsourceElem.classList.add('raid-target-picker-root');\r\n\t\t\tsourceElem.appendChild(\r\n\t\t\t\tUnitReferencePicker.makeOptionElem({ player: sourcePlayer, isDropdown: false })\r\n\t\t\t);\r\n\t\t\trow.appendChild(sourceElem);\r\n\r\n\t\t\tconst arrow = document.createElement('i');\r\n\t\t\tarrow.classList.add('assigned-buff-arrow', 'fa', 'fa-arrow-right');\r\n\t\t\trow.appendChild(arrow);\r\n\r\n\t\t\tconst raidTargetPicker: UnitReferencePicker<Player<any>> | null = new UnitReferencePicker<Player<any>>(row, this.raidSimUI.sim.raid, sourcePlayer, {\r\n\t\t\t\textraCssClasses: ['assigned-buff-target-picker'],\r\n\t\t\t\tnoTargetLabel: 'Unassigned',\r\n\t\t\t\tcompChangeEmitter: this.raidSimUI.sim.raid.compChangeEmitter,\r\n\r\n\t\t\t\tchangedEvent: (player: Player<any>) => player.specOptionsChangeEmitter,\r\n\t\t\t\tgetValue: (player: Player<any>) => this.getPlayerValue(player),\r\n\t\t\t\tsetValue: (eventID: EventID, player: Player<any>, newValue: UnitReference) => this.setPlayerValue(eventID, player, newValue),\r\n\t\t\t});\r\n\r\n\t\t\tconst targetPickerData = {\r\n\t\t\t\tplayer: sourcePlayer,\r\n\t\t\t\ttargetPicker: raidTargetPicker!,\r\n\t\t\t\ttargetPlayer: this.raidSimUI.sim.raid.getPlayerFromUnitReference(raidTargetPicker!.getInputValue()),\r\n\t\t\t};\r\n\r\n\t\t\traidTargetPicker!.changeEmitter.on(eventID => {\r\n\t\t\t\ttargetPickerData.targetPlayer = this.raidSimUI.sim.raid.getPlayerFromUnitReference(raidTargetPicker!.getInputValue());\r\n\t\t\t});\r\n\r\n\t\t\treturn targetPickerData;\r\n\t\t});\r\n\t}\r\n\r\n\tabstract getTitle(): string;\r\n\tabstract getSourcePlayers(): Array<Player<any>>;\r\n\r\n\tabstract getPlayerValue(player: Player<any>): UnitReference;\r\n\tabstract setPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference): void;\r\n}\r\n\r\nclass InnervatesPicker extends AssignedBuffPicker {\r\n\tgetTitle(): string {\r\n\t\treturn 'Innervate';\r\n\t}\r\n\r\n\tgetSourcePlayers(): Array<Player<any>> {\r\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassDruid));\r\n\t}\r\n\r\n\tgetPlayerValue(player: Player<any>): UnitReference {\r\n\t\treturn (player as Player<Spec.SpecBalanceDruid>).getSpecOptions().innervateTarget || emptyUnitReference();\r\n\t}\r\n\r\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\r\n\t\tconst newOptions = (player as Player<Spec.SpecBalanceDruid>).getSpecOptions();\r\n\t\tnewOptions.innervateTarget = newValue;\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t}\r\n}\r\n\r\nclass PowerInfusionsPicker extends AssignedBuffPicker {\r\n\tgetTitle(): string {\r\n\t\treturn 'Power Infusion';\r\n\t}\r\n\r\n\tgetSourcePlayers(): Array<Player<any>> {\r\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassPriest) && (player.getTalents() as PriestTalents).powerInfusion);\r\n\t}\r\n\r\n\tgetPlayerValue(player: Player<any>): UnitReference {\r\n\t\treturn (player as Player<Spec.SpecSmitePriest>).getSpecOptions().powerInfusionTarget || emptyUnitReference();\r\n\t}\r\n\r\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\r\n\t\tconst newOptions = (player as Player<Spec.SpecSmitePriest>).getSpecOptions();\r\n\t\tnewOptions.powerInfusionTarget = newValue;\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t}\r\n}\r\n\r\n// class TricksOfTheTradesPicker extends AssignedBuffPicker {\r\n// \tgetTitle(): string {\r\n// \t\treturn 'Tricks of the Trade';\r\n// \t}\r\n\r\n// \tgetSourcePlayers(): Array<Player<any>> {\r\n// \t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassRogue));\r\n// \t}\r\n\r\n// \tgetPlayerValue(player: Player<any>): UnitReference {\r\n// \t\treturn (player as Player<Spec.SpecRogue>).getSpecOptions().tricksOfTheTradeTarget || emptyUnitReference();\r\n// \t}\r\n\r\n// \tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\r\n// \t\tconst newOptions = (player as Player<Spec.SpecRogue>).getSpecOptions();\r\n// \t\tnewOptions.tricksOfTheTradeTarget = newValue;\r\n// \t\tplayer.setSpecOptions(eventID, newOptions);\r\n// \t}\r\n// }\r\n\r\n// class UnholyFrenzyPicker extends AssignedBuffPicker {\r\n// \tgetTitle(): string {\r\n// \t\treturn 'Unholy Frenzy';\r\n// \t}\r\n\r\n// \tgetSourcePlayers(): Array<Player<any>> {\r\n// \t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassDeathknight) && (player.getTalents() as DeathknightTalents).hysteria);\r\n// \t}\r\n\r\n// \tgetPlayerValue(player: Player<any>): UnitReference {\r\n// \t\treturn (player as Player<Spec.SpecDeathknight>).getSpecOptions().unholyFrenzyTarget || emptyUnitReference();\r\n// \t}\r\n\r\n// \tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\r\n// \t\tconst newOptions = (player as Player<Spec.SpecDeathknight>).getSpecOptions();\r\n// \t\tnewOptions.unholyFrenzyTarget = newValue;\r\n// \t\tplayer.setSpecOptions(eventID, newOptions);\r\n// \t}\r\n// }\r\n\r\nclass FocusMagicsPicker extends AssignedBuffPicker {\r\n\tgetTitle(): string {\r\n\t\treturn 'Focus Magic';\r\n\t}\r\n\r\n\tgetSourcePlayers(): Array<Player<any>> {\r\n\t\treturn this.raidSimUI.getActivePlayers().filter(player => player.isClass(Class.ClassMage));\r\n\t}\r\n\r\n\tgetPlayerValue(player: Player<any>): UnitReference {\r\n\t\treturn (player as Player<Spec.SpecMage>).getSpecOptions().focusMagicTarget || emptyUnitReference();\r\n\t}\r\n\r\n\tsetPlayerValue(eventID: EventID, player: Player<any>, newValue: UnitReference) {\r\n\t\tconst newOptions = (player as Player<Spec.SpecMage>).getSpecOptions();\r\n\t\tnewOptions.focusMagicTarget = newValue;\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t}\r\n}\r\n","import { Component } from '../core/components/component';\r\nimport { IconEnumPicker } from '../core/components/icon_enum_picker';\r\n\r\nimport { memeSpecs } from '../core/launched_sims';\r\nimport { EventID, TypedEvent } from '../core/typed_event';\r\n\r\nimport { Class, Spec } from '../core/proto/common';\r\nimport { Blessings } from '../core/proto/paladin';\r\nimport { BlessingsAssignments } from '../core/proto/ui';\r\nimport { ActionId } from '../core/proto_utils/action_id';\r\nimport {\r\n\tmakeDefaultBlessings,\r\n\tclassColors,\r\n\tnaturalSpecOrder,\r\n\tspecNames,\r\n\ttitleIcons,\r\n} from '../core/proto_utils/utils';\r\n\r\nimport { RaidSimUI } from './raid_sim_ui';\r\nimport { implementedSpecs } from './presets';\r\nimport { Tooltip } from 'bootstrap';\r\n\r\nconst MAX_PALADINS = 4;\r\n\r\nexport class BlessingsPicker extends Component {\r\n\treadonly simUI: RaidSimUI;\r\n\treadonly changeEmitter: TypedEvent<void> = new TypedEvent<void>();\r\n\r\n\tprivate readonly pickers: Array<Array<IconEnumPicker<this, Blessings>>> = [];\r\n\r\n\tprivate assignments: BlessingsAssignments;\r\n\r\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parentElem, 'blessings-picker-root');\r\n\t\tthis.simUI = raidSimUI;\r\n\t\tthis.assignments = BlessingsAssignments.clone(makeDefaultBlessings(4));\r\n\r\n\t\tconst specs = naturalSpecOrder\r\n\t\t\t.filter(spec => implementedSpecs.includes(spec))\r\n\t\t\t.filter(spec => !memeSpecs.includes(spec));\r\n\t\tconst paladinIndexes = [...Array(MAX_PALADINS).keys()];\r\n\r\n\t\tspecs.map(spec => {\r\n\t\t\tconst row = document.createElement('div');\r\n\t\t\trow.classList.add('blessings-picker-row');\r\n\t\t\tthis.rootElem.appendChild(row);\r\n\r\n\t\t\trow.append(this.buildSpecIcon(spec));\r\n\r\n\t\t\tconst container = document.createElement('div');\r\n\t\t\tcontainer.classList.add('blessings-picker-container');\r\n\t\t\trow.appendChild(container);\r\n\r\n\t\t\tpaladinIndexes.forEach(paladinIdx => {\r\n\t\t\t\tif (!this.pickers[paladinIdx])\r\n\t\t\t\t\tthis.pickers.push([]);\r\n\r\n\t\t\t\tconst blessingPicker = new IconEnumPicker(container, this, {\r\n\t\t\t\t\textraCssClasses: ['blessing-picker'],\r\n\t\t\t\t\tnumColumns: 1,\r\n\t\t\t\t\tvalues: [\r\n\t\t\t\t\t\t{ color: classColors[Class.ClassPaladin], value: Blessings.BlessingUnknown },\r\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25898), value: Blessings.BlessingOfKings },\r\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(27141), value: Blessings.BlessingOfMight },\r\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(27143), value: Blessings.BlessingOfWisdom },\r\n\t\t\t\t\t\t{ actionId: ActionId.fromSpellId(25899), value: Blessings.BlessingOfSanctuary },\r\n\t\t\t\t\t],\r\n\t\t\t\t\tequals: (a: Blessings, b: Blessings) => a == b,\r\n\t\t\t\t\tzeroValue: Blessings.BlessingUnknown,\r\n\t\t\t\t\tenableWhen: (_picker: BlessingsPicker) => {\r\n\t\t\t\t\t\tconst numPaladins = Math.min(this.simUI.getClassCount(Class.ClassPaladin), MAX_PALADINS);\r\n\t\t\t\t\t\treturn paladinIdx < numPaladins;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tchangedEvent: (picker: BlessingsPicker) => picker.changeEmitter,\r\n\t\t\t\t\tgetValue: (picker: BlessingsPicker) => picker.assignments.paladins[paladinIdx]?.blessings[spec] || Blessings.BlessingUnknown,\r\n\t\t\t\t\tsetValue: (eventID: EventID, picker: BlessingsPicker, newValue: number) => {\r\n\t\t\t\t\t\tconst currentValue = picker.assignments.paladins[paladinIdx].blessings[spec];\r\n\t\t\t\t\t\tif (currentValue != newValue) {\r\n\t\t\t\t\t\t\tpicker.assignments.paladins[paladinIdx].blessings[spec] = newValue;\r\n\t\t\t\t\t\t\tthis.changeEmitter.emit(eventID);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.pickers[paladinIdx].push(blessingPicker);\r\n\t\t\t});\r\n\r\n\t\t\treturn row;\r\n\t\t});\r\n\r\n\t\tthis.updatePickers()\r\n\t\tthis.simUI.compChangeEmitter.on(_eventID => this.updatePickers());\r\n\t}\r\n\r\n\tprivate updatePickers() {\r\n\t\tfor (let i = 0; i < MAX_PALADINS; i++) {\r\n\t\t\tthis.pickers[i].forEach(picker => picker.update());\r\n\t\t}\r\n\t}\r\n\r\n\tprivate buildSpecIcon(spec: Spec): HTMLElement {\r\n\t\tlet fragment = document.createElement('fragment');\r\n\t\tfragment.innerHTML = `\r\n\t\t\t<div class=\"blessings-picker-spec\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc=\"${titleIcons[spec]}\"\r\n\t\t\t\t\tclass=\"blessings-spec-icon\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t`;\r\n\r\n\t\tconst icon = fragment.querySelector('.blessings-spec-icon') as HTMLElement;\r\n\t\tTooltip.getOrCreateInstance(icon, { title: specNames[spec]});\r\n\r\n\t\treturn fragment.children[0] as HTMLElement;\r\n\t}\r\n\r\n\tgetAssignments(): BlessingsAssignments {\r\n\t\t// Defensive copy.\r\n\t\treturn BlessingsAssignments.clone(this.assignments);\r\n\t}\r\n\r\n\tsetAssignments(eventID: EventID, newAssignments: BlessingsAssignments) {\r\n\t\tthis.assignments = BlessingsAssignments.clone(newAssignments);\r\n\t\tthis.changeEmitter.emit(eventID);\r\n\t}\r\n}\r\n","import { Component } from '../core/components/component';\r\nimport { UnitReferencePicker } from '../core/components/raid_target_picker';\r\n\r\nimport { Raid } from '../core/raid';\r\nimport { EventID } from '../core/typed_event';\r\n\r\nimport { UnitReference } from '../core/proto/common';\r\nimport { emptyUnitReference } from '../core/proto_utils/utils';\r\n\r\nimport { RaidSimUI } from './raid_sim_ui';\r\n\r\nconst MAX_TANKS = 4;\r\n\r\nexport class TanksPicker extends Component {\r\n\treadonly raidSimUI: RaidSimUI;\r\n\r\n\tconstructor(parentElem: HTMLElement, raidSimUI: RaidSimUI) {\r\n\t\tsuper(parentElem, 'tanks-picker-root');\r\n\t\tthis.raidSimUI = raidSimUI;\r\n\r\n\t\tconst raid = this.raidSimUI.sim.raid;\r\n\r\n\t\tfor (let i = 0; i < MAX_TANKS; i++) {\r\n\t\t\tconst row = document.createElement('div');\r\n\t\t\trow.classList.add('tank-picker-row', 'input-inline');\r\n\t\t\tthis.rootElem.appendChild(row);\r\n\r\n\t\t\tconst labelElem = document.createElement('label');\r\n\t\t\tlabelElem.textContent = i == 0 ? 'Main Tank' : `Tank ${i + 1}`;\r\n\t\t\tlabelElem.classList.add('tank-picker-label', 'form-label');\r\n\t\t\trow.appendChild(labelElem);\r\n\r\n\t\t\tnew UnitReferencePicker<Raid>(row, raid, raid, {\r\n\t\t\t\textraCssClasses: ['tank-picker'],\r\n\t\t\t\tnoTargetLabel: 'Unassigned',\r\n\t\t\t\tcompChangeEmitter: raid.compChangeEmitter,\r\n\r\n\t\t\t\tchangedEvent: (raid: Raid) => raid.tanksChangeEmitter,\r\n\t\t\t\tgetValue: (raid: Raid) => raid.getTanks()[i] || emptyUnitReference(),\r\n\t\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: UnitReference) => {\r\n\t\t\t\t\tconst tanks = raid.getTanks();\r\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\r\n\t\t\t\t\t\tif (!tanks[j]) {\r\n\t\t\t\t\t\t\ttanks.push(emptyUnitReference());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttanks[i] = newValue;\r\n\t\t\t\t\traid.setTanks(eventID, tanks);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","import { ContentBlock } from \"../core/components/content_block\";\r\nimport { EncounterPicker } from \"../core/components/encounter_picker\";\r\nimport { IconPicker } from \"../core/components/icon_picker\";\r\nimport { SavedDataManager } from \"../core/components/saved_data_manager\";\r\nimport { SimTab } from \"../core/components/sim_tab\";\r\n\r\nimport { Encounter } from \"../core/encounter\";\r\nimport { Raid } from \"../core/raid\";\r\nimport { EventID } from \"../core/typed_event\";\r\n\r\nimport { RaidBuffs } from \"../core/proto/common\";\r\nimport { SavedEncounter } from \"../core/proto/ui\";\r\nimport { ActionId } from \"../core/proto_utils/action_id\";\r\n\r\nimport { AssignmentsPicker } from \"./assignments_picker\";\r\nimport { BlessingsPicker } from \"./blessings_picker\";\r\nimport { RaidSimUI } from \"./raid_sim_ui\";\r\nimport { TanksPicker } from \"./tanks_picker\";\r\n\r\nimport * as Tooltips from \"../core/constants/tooltips.js\";\r\n\r\nexport class SettingsTab extends SimTab {\r\n\tprotected simUI: RaidSimUI;\r\n\r\n\treadonly leftPanel: HTMLElement;\r\n\treadonly rightPanel: HTMLElement;\r\n\r\n\treadonly column1: HTMLElement = this.buildColumn(1, 'raid-settings-col');\r\n\treadonly column2: HTMLElement = this.buildColumn(2, 'raid-settings-col');\r\n\treadonly column3: HTMLElement = this.buildColumn(3, 'raid-settings-col');\r\n\r\n\tconstructor(parentElem: HTMLElement, simUI: RaidSimUI) {\r\n\t\tsuper(parentElem, simUI, { identifier: 'raid-settings-tab', title: 'Settings' });\r\n\t\tthis.simUI = simUI;\r\n\r\n\t\tthis.leftPanel = document.createElement('div');\r\n\t\tthis.leftPanel.classList.add('raid-settings-tab-left', 'tab-panel-left');\r\n\r\n\t\tthis.leftPanel.appendChild(this.column1);\r\n\t\tthis.leftPanel.appendChild(this.column2);\r\n\t\tthis.leftPanel.appendChild(this.column3);\r\n\r\n\t\tthis.rightPanel = document.createElement('div');\r\n\t\tthis.rightPanel.classList.add('raid-settings-tab-right', 'tab-panel-right', 'within-raid-sim-hide');\r\n\r\n\t\tthis.contentContainer.appendChild(this.leftPanel);\r\n\t\tthis.contentContainer.appendChild(this.rightPanel);\r\n\r\n\t\tthis.buildTabContent();\r\n\t}\r\n\r\n\tprotected buildTabContent() {\r\n\t\tthis.buildEncounterSettings();\r\n\t\tthis.buildConsumesSettings();\r\n\t\tthis.buildOtherSettings();\r\n\r\n\t\tthis.buildTankSettings();\r\n\t\tthis.buildAssignmentSettings();\r\n\r\n\t\tthis.buildBlessingsPicker();\r\n\t\tthis.buildSavedDataPickers();\r\n\t}\r\n\r\n\tprivate buildEncounterSettings() {\r\n\t\tconst contentBlock = new ContentBlock(this.column1, 'encounter-settings', {\r\n\t\t\theader: { title: 'Encounter' }\r\n\t\t});\r\n\r\n\t\tnew EncounterPicker(contentBlock.bodyElement, this.simUI.sim.encounter, { showExecuteProportion: true }, this.simUI);\r\n\t}\r\n\r\n\tprivate buildConsumesSettings() {\r\n\t\tconst contentBlock = new ContentBlock(this.column1, 'consumes-settings', {\r\n\t\t\theader: { title: 'Consumables' }\r\n\t\t});\r\n\r\n\t\tlet container = document.createElement('div');\r\n\t\tcontainer.classList.add('consumes-container');\r\n\r\n\t\tcontentBlock.bodyElement.appendChild(container);\r\n\r\n\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37094), 'scrollOfStamina'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43466), 'scrollOfStrength'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43464), 'scrollOfAgility'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37092), 'scrollOfIntellect'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(37098), 'scrollOfSpirit'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(43468), 'scrollOfProtection'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(49633), 'drumsOfForgottenKings'),\r\n\t\t\tthis.makeBooleanRaidIconBuffInput(container, ActionId.fromItemId(49634), 'drumsOfTheWild');\r\n\t}\r\n\r\n\tprivate buildOtherSettings() {\r\n\t\t// const raid = this.simUI.sim.raid;\r\n\t\t// const contentBlock = new ContentBlock(this.column1, 'other-settings', {\r\n\t\t//   header: {title: 'Other'}\r\n\t\t// });\r\n\r\n\t\t// new BooleanPicker(contentBlock.bodyElement, this.simUI.sim.raid, {\r\n\t\t// \tlabel: 'Stagger Stormstrikes',\r\n\t\t// \tlabelTooltip: 'When there are multiple Enhancement Shaman in the raid, causes them to coordinate their Stormstrike casts for optimal SS charge usage.',\r\n\t\t// \tchangedEvent: (raid: Raid) => raid.staggerStormstrikesChangeEmitter,\r\n\t\t// \tgetValue: (raid: Raid) => raid.getStaggerStormstrikes(),\r\n\t\t// \tsetValue: (eventID: EventID, raid: Raid, newValue: boolean) => {\r\n\t\t// \t\traid.setStaggerStormstrikes(eventID, newValue);\r\n\t\t// \t},\r\n\t\t// });\r\n\t}\r\n\r\n\tprivate buildTankSettings() {\r\n\t\tconst contentBlock = new ContentBlock(this.column2, 'tanks-settings', {\r\n\t\t\theader: { title: 'Tanks' }\r\n\t\t});\r\n\r\n\t\tnew TanksPicker(contentBlock.bodyElement, this.simUI);\r\n\t}\r\n\r\n\tprivate buildAssignmentSettings() {\r\n\t\tconst contentBlock = new ContentBlock(this.column2, 'assignments-settings', {\r\n\t\t\theader: { title: 'External Buffs' }\r\n\t\t});\r\n\r\n\t\tnew AssignmentsPicker(contentBlock.bodyElement, this.simUI);\r\n\t}\r\n\r\n\tprivate buildBlessingsPicker() {\r\n\t\tconst contentBlock = new ContentBlock(this.column3, 'blessings-settings', {\r\n\t\t\theader: { title: 'Blessings', tooltip: Tooltips.BLESSINGS_SECTION }\r\n\t\t});\r\n\r\n\t\tthis.simUI.blessingsPicker = new BlessingsPicker(contentBlock.bodyElement, this.simUI);\r\n\t\tthis.simUI.blessingsPicker.changeEmitter.on(eventID => this.simUI.changeEmitter.emit(eventID));\r\n\t}\r\n\r\n\tprivate buildSavedDataPickers() {\r\n\t\tconst savedEncounterManager = new SavedDataManager<Encounter, SavedEncounter>(this.rightPanel, this.simUI, this.simUI.sim.encounter, {\r\n\t\t\tlabel: 'Encounter',\r\n\t\t\theader: { title: 'Saved Encounters' },\r\n\t\t\tstorageKey: this.simUI.getSavedEncounterStorageKey(),\r\n\t\t\tgetData: (encounter: Encounter) => SavedEncounter.create({ encounter: encounter.toProto() }),\r\n\t\t\tsetData: (eventID: EventID, encounter: Encounter, newEncounter: SavedEncounter) => encounter.fromProto(eventID, newEncounter.encounter!),\r\n\t\t\tchangeEmitters: [this.simUI.sim.encounter.changeEmitter],\r\n\t\t\tequals: (a: SavedEncounter, b: SavedEncounter) => SavedEncounter.equals(a, b),\r\n\t\t\ttoJson: (a: SavedEncounter) => SavedEncounter.toJson(a),\r\n\t\t\tfromJson: (obj: any) => SavedEncounter.fromJson(obj),\r\n\t\t});\r\n\r\n\t\tthis.simUI.sim.waitForInit().then(() => {\r\n\t\t\tsavedEncounterManager.loadUserData();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate makeBooleanRaidIconBuffInput(parent: HTMLElement, id: ActionId, field: keyof RaidBuffs): IconPicker<Raid, boolean> {\r\n\t\tconst raid = this.simUI.sim.raid;\r\n\r\n\t\treturn new IconPicker<Raid, boolean>(parent, raid, {\r\n\t\t\tid: id,\r\n\t\t\tstates: 2,\r\n\t\t\tchangedEvent: (raid: Raid) => raid.buffsChangeEmitter,\r\n\t\t\tgetValue: (raid: Raid) => raid.getBuffs()[field] as unknown as boolean,\r\n\t\t\tsetValue: (eventID: EventID, raid: Raid, newValue: boolean) => {\r\n\t\t\t\tconst newBuffs = raid.getBuffs();\r\n\t\t\t\t(newBuffs[field] as unknown as boolean) = newValue;\r\n\t\t\t\traid.setBuffs(eventID, newBuffs);\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n","import { Exporter } from '../core/components/exporters';\r\nimport { Importer } from '../core/components/importers';\r\nimport { MAX_PARTY_SIZE } from '../core/party';\r\nimport { RaidSimSettings } from '../core/proto/ui';\r\nimport { EventID, TypedEvent } from '../core/typed_event';\r\nimport { Party as PartyProto, Player as PlayerProto, Raid as RaidProto } from '../core/proto/api';\r\nimport {\r\n\tClass,\r\n\tEncounter as EncounterProto,\r\n\tEquipmentSpec,\r\n\tFaction,\r\n\tItemSpec,\r\n\tMobType,\r\n\tProfession,\r\n\tRace,\r\n\tUnitReference,\r\n\tSpec,\r\n\tTarget as TargetProto,\r\n\tUnitReference_Type,\r\n} from '../core/proto/common';\r\nimport { nameToClass, professionNames, raceNames } from '../core/proto_utils/names';\r\nimport {\r\n\tDruidSpecs,\r\n\tDeathknightSpecs,\r\n\tMageSpecs,\r\n\tPriestSpecs,\r\n\tRogueSpecs,\r\n\tSpecOptions,\r\n\tgetTalentTreePoints,\r\n\tmakeDefaultBlessings,\r\n\traceToFaction,\r\n\tspecTypeFunctions,\r\n\twithSpecProto,\r\n\tisTankSpec,\r\n\tplayerToSpec,\r\n} from '../core/proto_utils/utils';\r\nimport { MAX_NUM_PARTIES } from '../core/raid';\r\nimport { Player } from '../core/player';\r\nimport { Encounter } from '../core/encounter';\r\nimport { bucket, distinct, sortByProperty } from '../core/utils';\r\n\r\nimport { playerPresets, PresetSpecSettings } from './presets';\r\nimport { RaidSimUI } from './raid_sim_ui';\r\n\r\nexport class RaidJsonImporter extends Importer {\r\n\tprivate readonly simUI: RaidSimUI;\r\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\r\n\t\tsuper(parent, simUI, 'JSON Import', true);\r\n\t\tthis.simUI = simUI;\r\n\r\n\t\tthis.descriptionElem.innerHTML = `\r\n\t\t\t<p>\r\n\t\t\t\tImport settings from a JSON text file, which can be created using the JSON Export feature of this site.\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\tTo import, paste the JSON text below and click, 'Import'.\r\n\t\t\t</p>\r\n\t\t`;\r\n\t}\r\n\r\n\tonImport(data: string) {\r\n\t\tconst settings = RaidSimSettings.fromJsonString(data, { ignoreUnknownFields: true });\r\n\t\tthis.simUI.fromProto(TypedEvent.nextEventID(), settings);\r\n\t\tthis.close();\r\n\t}\r\n}\r\n\r\nexport class RaidJsonExporter extends Exporter {\r\n\tprivate readonly simUI: RaidSimUI;\r\n\r\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\r\n\t\tsuper(parent, simUI, 'JSON Export', true);\r\n\t\tthis.simUI = simUI;\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tgetData(): string {\r\n\t\treturn JSON.stringify(RaidSimSettings.toJson(this.simUI.toProto()), null, 2);\r\n\t}\r\n}\r\n\r\nexport class RaidWCLImporter extends Importer {\r\n\r\n\tprivate queryCounter: number = 0;\r\n\r\n\tprivate readonly simUI: RaidSimUI;\r\n\tconstructor(parent: HTMLElement, simUI: RaidSimUI) {\r\n\t\tsuper(parent, simUI, 'WCL Import', false);\r\n\t\tthis.simUI = simUI;\r\n\t\tthis.textElem.classList.add('small-textarea');\r\n\t\tthis.descriptionElem.innerHTML = `\r\n\t\t\t<p>\r\n\t\t\t\tImports the entire raid from a WCL report.<br>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\tTo import, paste the WCL report and fight link (https://classic.warcraftlogs.com/reports/REPORTID#fight=FIGHTID).<br>\r\n\t\t\t\tInclude the fight ID or else the first fight in the report will be used.<br>\r\n\t\t\t</p>\r\n\t\t\t<p>\r\n\t\t\t\tThe following are imported directly from the report:\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Player Name</li>\r\n\t\t\t\t\t<li>Equipment (items, enchants, and gems)</li>\r\n\t\t\t\t\t<li>Faction (Alliance / Horde)</li>\r\n\t\t\t\t\t<li>Encounter: If the import link has a fight ID we try to match with a preset Encounter. Note that many Encounters are still unimplemented.</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\tThe following are not available directly from the report data, but we try to infer them:\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Talents: Log data only gives us the tree summary (e.g. '51/20/0') so we match this with the closest preset talent build.</li>\r\n\t\t\t\t\t<li>Glyphs: Glyphs are absent from log data, but we pair them with the inferred Talents.</li>\r\n\t\t\t\t\t<li>Race: Inferred from Race-specific abilties used in any fight if possible, or defaults to Spec-specific Race.</li>\r\n\t\t\t\t\t<li>Professions: Inferred from profession-locked items/enchants/gems.</li>\r\n\t\t\t\t\t<li>Buff assignments (Innervate, Unholy Frenzy, etc): Inferred from casts.</li>\r\n\t\t\t\t\t<li>Party Composition: Inferred from party-only effects, such as Heroic Presence, Prayer of Healing, or Vampiric Touch.</li>\r\n\t\t\t\t</ul>\r\n\r\n\t\t\t\tThe following are not imported, and instead use spec-specific defaults:\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>Rotation / Spec-specific options</li>\r\n\t\t\t\t\t<li>Consumes</li>\r\n\t\t\t\t\t<li>Paladin Blessings</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</p>\r\n\t\t`;\r\n\t}\r\n\r\n\tprivate token: string = '';\r\n\tprivate async getWCLBearerToken(): Promise<string> {\r\n\t\tif (this.token == '') {\r\n\t\t\tconst response = await fetch('https://classic.warcraftlogs.com/oauth/token', {\r\n\t\t\t\t'method': 'POST',\r\n\t\t\t\t'headers': {\r\n\t\t\t\t\t'Authorization': 'Basic ' + btoa('963d31c8-7efa-4dde-87cf-1b254a8a2f8c:lRJVhujEEnF96xfUoxVHSpnqKN9v8bTqGEjutsO3'),\r\n\t\t\t\t},\r\n\t\t\t\tbody: new URLSearchParams({\r\n\t\t\t\t\t'grant_type': 'client_credentials',\r\n\t\t\t\t}),\r\n\t\t\t})\r\n\t\t\tconst json = await response.json();\r\n\t\t\tthis.token = json.access_token;\r\n\t\t}\r\n\t\treturn this.token;\r\n\t}\r\n\r\n\tprivate async queryWCL(query: string): Promise<any> {\r\n\t\tconst token = await this.getWCLBearerToken();\r\n\t\tconst headers = {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Authorization': `Bearer ${token}`,\r\n\t\t\t'Accept': 'application/json',\r\n\t\t};\r\n\r\n\t\tconst queryURL = `https://classic.warcraftlogs.com/api/v2/client?query=${query}`;\r\n\t\tthis.queryCounter++;\r\n\r\n\t\t// Query WCL\r\n\t\tconst res = await fetch(encodeURI(queryURL), {\r\n\t\t\t'method': 'GET',\r\n\t\t\t'headers': headers,\r\n\t\t});\r\n\r\n\t\tconst result = await res.json();\r\n\t\tif (result?.errors?.length) {\r\n\t\t\tconst errorStr = result.errors.map((e: any) => e.message).join('\\n');\r\n\t\t\tthrow new Error(`GraphQL error: ${errorStr}\\n\\nQuery: ${query}`);\r\n\t\t} else {\r\n\t\t\tconsole.debug(`WCL query: ${query}\\n\\nResult: ${JSON.stringify(result)}`);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tprivate async parseURL(url: string): Promise<wclUrlData> {\r\n\t\tconst match = url.match(/classic\\.warcraftlogs\\.com\\/reports\\/([a-zA-Z0-9:]+)\\/?(#.*fight=((\\d+)|(last)))?/);\r\n\t\tif (!match) {\r\n\t\t\tthrow new Error(`Invalid WCL URL ${url}, must look like \"classic.warcraftlogs.com/reports/XXXX\"`);\r\n\t\t}\r\n\r\n\t\tconst urlData = {\r\n\t\t\treportID: match[1],\r\n\t\t\tfightID: '',\r\n\t\t}\r\n\r\n\t\t// If the URL has a Fight ID in it, use it\r\n\t\tif (match[2] && match[3] && match[3] != 'last') {\r\n\t\t\turlData.fightID = match[3];\r\n\t\t} else {\r\n\t\t\t// Make a separate query to get the corresponding ReportFights\r\n\t\t\tconst fightDataQuery = `{\r\n\t\t\t\treportData {\r\n\t\t\t\t\treport(code: \"${urlData.reportID}\") {\r\n\t\t\t\t\t\tfights(killType: Kills, translate: true) {\r\n\t\t\t\t\t\t\tid, name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}`;\r\n\r\n\t\t\tconst fightData = await this.queryWCL(fightDataQuery);\r\n\t\t\tconst fights = fightData.data.reportData.report.fights;\r\n\r\n\t\t\tif (match[3] == 'last') {\r\n\t\t\t\turlData.fightID = String(fights[fights.length - 1].id)\r\n\t\t\t} else {\r\n\t\t\t\t// Default to using the first Fight\r\n\t\t\t\turlData.fightID = String(fights[0].id);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.debug(`Importing WCL report: ${JSON.stringify(urlData)}`);\r\n\t\treturn urlData;\r\n\t}\r\n\r\n\tprivate async getRateLimit(): Promise<wclRateLimitData> {\r\n\t\tconst query = `{\r\n\t    rateLimitData {\r\n\t      limitPerHour, pointsSpentThisHour, pointsResetIn\r\n\t    }\r\n\t  }`;\r\n\t\tconst result = await this.queryWCL(query);\r\n\t\tconst data = result['data']['rateLimitData'] as wclRateLimitData;\r\n\t\treturn data;\r\n\t}\r\n\r\n\tasync onImport(importLink: string) {\r\n\t\tthis.importButton.disabled = true;\r\n\t\tthis.rootElem.style.cursor = 'wait';\r\n\t\ttry {\r\n\t\t\tawait this.doImport(importLink);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\talert('Failed import from WCL: ' + error);\r\n\t\t}\r\n\t\tthis.importButton.disabled = false\r\n\t\tthis.rootElem.style.removeProperty('cursor');\r\n\t}\r\n\r\n\tasync doImport(importLink: string) {\r\n\t\tif (!importLink.length) {\r\n\t\t\tthrow new Error('No import link provided!');\r\n\t\t}\r\n\r\n\t\tconst urlData = await this.parseURL(importLink);\r\n\t\tconst rateLimit = await this.getRateLimit();\r\n\r\n\t\t// Schema for WCL API here: https://www.warcraftlogs.com/v2-api-docs/warcraft/\r\n\t\t// WCL charges us 1 'point' for each subquery we issue within the request. So\r\n\t\t// by using filter expressions we can combine our queries together, to spend\r\n\t\t// fewer points.\r\n\t\tconst reportDataQuery = `{\r\n\t\t\treportData {\r\n\t\t\t\treport(code: \"${urlData.reportID}\") {\r\n\t\t\t\t\tguild {\r\n\t\t\t\t\t\tname faction {id}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplayerDetails: table(fightIDs: [${urlData.fightID}], dataType: Casts, killType: All, viewBy: Default)\r\n\t\t\t\t\tcombatantInfoEvents: events(fightIDs: [${urlData.fightID}], dataType:CombatantInfo, limit: 50) { data }\r\n\t\t\t\t\tfights(fightIDs: [${urlData.fightID}]) {\r\n\t\t\t\t\t\tstartTime, endTime, id, name\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treportCastEvents: events(dataType:Casts, endTime: 99999999, filterExpression: \"${[racialSpells, professionSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\r\n\t\t\t}\", limit: 10000) { data }\r\n\r\n\t\t\t\t\tfightCastEvents: events(fightIDs: [${urlData.fightID}], dataType:Casts, filterExpression: \"${[externalCDSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\r\n\t\t\t}\", limit: 10000) { data }\r\n\r\n\t\t\t\t\tfightHealEvents: events(fightIDs: [${urlData.fightID}], dataType:Healing, filterExpression: \"${[samePartyHealingSpells, otherPartyHealingSpells].flat().map(spell => spell.id).map(id => `ability.id = ${id}`).join(' OR ')\r\n\t\t\t}\", limit: 10000) { data }\r\n\r\n\t\t\t\t\tmanaTideTotem: events(fightIDs: [${urlData.fightID}], dataType:Resources, filterExpression: \"ability.id = 39609\", limit: 100) { data }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}`;\r\n\t\tconst reportData = await this.queryWCL(reportDataQuery);\r\n\r\n\t\t// Process the report data.\r\n\t\tconst wclData = reportData.data.reportData.report; // TODO: Typings?\r\n\t\tconst playerData: wclPlayer[] = wclData.playerDetails.data.entries;\r\n\r\n\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\tconst eventID = TypedEvent.nextEventID();\r\n\t\t\tconst wclPlayers = playerData.map(wclPlayer => new WCLSimPlayer(wclPlayer, this.simUI, eventID));\r\n\t\t\tthis.inferRace(eventID, wclData, wclPlayers);\r\n\t\t\tthis.inferProfessions(eventID, wclData, wclPlayers);\r\n\t\t\tthis.inferAssignments(eventID, wclData, wclPlayers);\r\n\t\t\tthis.inferPartyComposition(eventID, wclData, wclPlayers);\r\n\t\t\tconst numPaladins = wclPlayers.filter(player => player.player.getClass() == Class.ClassPaladin).length;\r\n\t\t\tconst settings = RaidSimSettings.create({\r\n\t\t\t\tencounter: this.getEncounterProto(wclData),\r\n\t\t\t\traid: this.getRaidProto(wclPlayers),\r\n\t\t\t\tblessings: makeDefaultBlessings(numPaladins),\r\n\t\t\t});\r\n\r\n\t\t\t// Clear the raid out to avoid any taint issues.\r\n\t\t\tthis.simUI.clearRaid(eventID);\r\n\t\t\tthis.simUI.fromProto(eventID, settings);\r\n\t\t});\r\n\r\n\t\tthis.close();\r\n\t}\r\n\r\n\tprivate inferRace(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\r\n\t\twclPlayers.forEach(p => p.player.setRace(eventID, Race.RaceUnknown));\r\n\r\n\t\t// If defined in log, use that faction. Otherwise default to UI setting.\r\n\t\tlet faction = (wclData.guild?.faction?.id || this.simUI.raidPicker?.getCurrentFaction() || Faction.Horde) as Faction;\r\n\r\n\t\twclData.combatantInfoEvents.data.forEach((combatantInfo: wclCombatantInfoEvent) => {\r\n\t\t\tcombatantInfo.auras\r\n\t\t\t\t.filter(aura => aura.ability == 28878)\r\n\t\t\t\t.forEach(aura => {\r\n\t\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == aura.source);\r\n\t\t\t\t\tif (sourcePlayer && sourcePlayer.player.getRace() != Race.RaceDraenei) {\r\n\t\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has race ${raceNames[Race.RaceDraenei]} from Heroic Presence aura event`);\r\n\t\t\t\t\t\tsourcePlayer.player.setRace(eventID, Race.RaceDraenei);\r\n\t\t\t\t\t\tfaction = Faction.Alliance;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst castEventsBySpellId = bucket(wclData.reportCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\r\n\t\tracialSpells.forEach(spell => {\r\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\r\n\t\t\tspellEvents.forEach(event => {\r\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\r\n\t\t\t\tif (sourcePlayer) {\r\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has race ${raceNames[spell.race]} from ${spell.name} event`);\r\n\t\t\t\t\tsourcePlayer.player.setRace(eventID, spell.race);\r\n\t\t\t\t\tfaction = raceToFaction[spell.race];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\twclPlayers.forEach(p => {\r\n\t\t\tif (p.player.getRace() == Race.RaceUnknown) {\r\n\t\t\t\tp.player.setRace(eventID, p.preset.defaultFactionRaces[faction]);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate inferProfessions(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\r\n\t\tconst castEventsBySpellId = bucket(wclData.reportCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\r\n\t\tprofessionSpells.forEach(spell => {\r\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\r\n\t\t\tspellEvents.forEach(event => {\r\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\r\n\t\t\t\tif (sourcePlayer && !sourcePlayer.inferredProfessions.includes(spell.profession)) {\r\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} has profession ${professionNames[spell.profession]} from ${spell.name} event`);\r\n\t\t\t\t\tsourcePlayer.inferredProfessions.push(spell.profession);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\twclPlayers.forEach(player => {\r\n\t\t\tlet professions = distinct(player.inferredProfessions.concat(player.player.getGear().getProfessionRequirements()));\r\n\t\t\tif (professions.length == 0) {\r\n\t\t\t\tprofessions = [Profession.Engineering, Profession.Jewelcrafting];\r\n\t\t\t} else if (professions.length == 1) {\r\n\t\t\t\tif (professions[0] != Profession.Engineering) {\r\n\t\t\t\t\tprofessions.push(Profession.Engineering);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tprofessions.push(Profession.Jewelcrafting);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tplayer.player.setProfessions(eventID, professions);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate inferAssignments(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\r\n\t\tconst castEventsBySpellId = bucket(wclData.fightCastEvents.data as Array<wclCastEvent>, event => String(event.abilityGameID));\r\n\t\texternalCDSpells.forEach(spell => {\r\n\t\t\tconst spellEvents: Array<wclCastEvent> = castEventsBySpellId[spell.id] || [];\r\n\t\t\tspellEvents.forEach(event => {\r\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\r\n\t\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == event.targetID);\r\n\t\t\t\tif (sourcePlayer && targetPlayer && sourcePlayer.player.getClass() == spell.class) {\r\n\t\t\t\t\tconst specOptions = spell.applyFunc(sourcePlayer.player, targetPlayer.toUnitReference());\r\n\t\t\t\t\tsourcePlayer.player.setSpecOptions(eventID, specOptions);\r\n\t\t\t\t\tconsole.log(`Inferring player ${sourcePlayer.name} is targeting ${targetPlayer.name} with ${spell.name} from cast event`);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t// Assigns the raidIndex field for all players.\r\n\tprivate inferPartyComposition(eventID: EventID, wclData: any, wclPlayers: WCLSimPlayer[]) {\r\n\t\tconst setPlayersInParty = (player1: WCLSimPlayer, player2: WCLSimPlayer, reason: string) => {\r\n\t\t\tif (player1.addPlayerInParty(player2) || player2.addPlayerInParty(player1)) {\r\n\t\t\t\tconsole.log(`Inferring players ${player1.name} and ${player2.name} in same party from ${reason} event`);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst healEventsBySpellId = bucket(wclData.fightHealEvents.data as Array<wclHealEvent>, event => String(event.abilityGameID));\r\n\r\n\t\t// These spells only affect players in the same party as the caster.\r\n\t\tsamePartyHealingSpells.forEach(spell => {\r\n\t\t\tconst spellEvents: Array<wclHealEvent> = healEventsBySpellId[spell.id] || [];\r\n\t\t\tspellEvents.forEach(event => {\r\n\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == event.sourceID);\r\n\t\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == event.targetID);\r\n\t\t\t\tif (sourcePlayer && targetPlayer) {\r\n\t\t\t\t\tsetPlayersInParty(sourcePlayer, targetPlayer, spell.name);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Prayer of Healing is a bit different, we can infer that players who are targeted at the same time are in a group.\r\n\t\totherPartyHealingSpells.forEach(spell => {\r\n\t\t\tconst spellEvents: Array<wclHealEvent> = healEventsBySpellId[spell.id] || [];\r\n\t\t\tconst spellEventsByTimestamp = bucket(spellEvents, event => String(event.timestamp) + String(event.sourceID));\r\n\t\t\tfor (const [timestamp, eventsAtTime] of Object.entries(spellEventsByTimestamp)) {\r\n\t\t\t\tconst spellTargets = eventsAtTime.map(event => wclPlayers.find(player => player.id == event.targetID));\r\n\t\t\t\tfor (let i = 0; i < spellTargets.length; i++) {\r\n\t\t\t\t\tfor (let j = 0; j < spellTargets.length; j++) {\r\n\t\t\t\t\t\tif (i != j && spellTargets[i] && spellTargets[j]) {\r\n\t\t\t\t\t\t\tsetPlayersInParty(spellTargets[i]!, spellTargets[j]!, spell.name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\twclData.combatantInfoEvents.data.forEach((combatantInfo: wclCombatantInfoEvent) => {\r\n\t\t\tconst targetPlayer = wclPlayers.find(player => player.id == combatantInfo.sourceID);\r\n\t\t\tcombatantInfo.auras\r\n\t\t\t\t.filter(aura => aura.ability == 28878)\r\n\t\t\t\t.forEach(aura => {\r\n\t\t\t\t\tconst sourcePlayer = wclPlayers.find(player => player.id == aura.source);\r\n\t\t\t\t\tif (sourcePlayer && targetPlayer) {\r\n\t\t\t\t\t\tsetPlayersInParty(sourcePlayer, targetPlayer, 'Heroic Presence');\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Assign players with same-group inferences.\r\n\t\tlet inferredPlayers = wclPlayers.filter(player => player.playersInParty.length > 0);\r\n\t\tlet nextEmptyPartyIdx = 0;\r\n\t\twhile (inferredPlayers.length > 0) {\r\n\t\t\t// Find all the players in the same party as the first player.\r\n\t\t\tlet partyMembers = [inferredPlayers[0]].concat(inferredPlayers[0].playersInParty);\r\n\t\t\tlet numMembers = 0;\r\n\t\t\twhile (partyMembers.length != numMembers) {\r\n\t\t\t\tnumMembers = partyMembers.length;\r\n\t\t\t\tpartyMembers = distinct(partyMembers.map(member => [member].concat(member.playersInParty)).flat());\r\n\t\t\t}\r\n\r\n\t\t\t// Assign these members to an empty party.\r\n\t\t\tconst partyIdx = nextEmptyPartyIdx;\r\n\t\t\tnextEmptyPartyIdx++;\r\n\t\t\tpartyMembers.forEach((member, i) => {\r\n\t\t\t\tmember.raidIndex = partyIdx * 5 + i;\r\n\t\t\t});\r\n\r\n\t\t\tinferredPlayers = inferredPlayers.filter(player => !partyMembers.includes(player));\r\n\t\t}\r\n\r\n\t\t// Assign remaining players into open slots.\r\n\t\tconst allRaidIndexes = [...Array(40).keys()];\r\n\t\tconst nextFreeIndex = () => allRaidIndexes.find(idx => !wclPlayers.some(p => p.raidIndex == idx)) ?? -1;\r\n\t\twclPlayers\r\n\t\t\t.filter(player => player.raidIndex == -1)\r\n\t\t\t.forEach(player => {\r\n\t\t\t\tconst nextIdx = nextFreeIndex();\r\n\t\t\t\tif (nextIdx == -1) {\r\n\t\t\t\t\tthrow new Error('Invalid next idx');\r\n\t\t\t\t}\r\n\t\t\t\tplayer.raidIndex = nextIdx;\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate getEncounterProto(wclData: any): EncounterProto {\r\n\t\tconst fight: { startTime: number, endTime: number, id: number, name: string } = wclData.fights[0];\r\n\r\n\t\tconst encounter = EncounterProto.create({\r\n\t\t\tduration: (fight.endTime - fight.startTime) / 1000,\r\n\t\t\ttargets: [],\r\n\t\t});\r\n\r\n\t\t// Use the preset encounter if it exists.\r\n\t\tlet closestEncounterPreset = this.simUI.sim.db.getAllPresetEncounters().find(enc => enc.path.includes(fight.name));\r\n\t\tif (closestEncounterPreset && closestEncounterPreset.targets.length) {\r\n\t\t\tclosestEncounterPreset.targets\r\n\t\t\t\t.map(mob => mob.target as TargetProto)\r\n\t\t\t\t.filter(target => target !== undefined)\r\n\t\t\t\t.forEach(target => encounter.targets.push(target));\r\n\t\t}\r\n\r\n\t\t// Build a manual target list if no preset encounter exists.\r\n\t\tif (encounter.targets.length === 0) {\r\n\t\t\tencounter.targets.push(Encounter.defaultTargetProto());\r\n\t\t}\r\n\r\n\t\treturn encounter;\r\n\t}\r\n\r\n\tprivate getRaidProto(wclPlayers: WCLSimPlayer[]): RaidProto {\r\n\t\tconst raid = RaidProto.create({\r\n\t\t\tparties: [...new Array(MAX_NUM_PARTIES).keys()].map(p => PartyProto.create({\r\n\t\t\t\tplayers: [...new Array(5).keys()].map(p => PlayerProto.create()),\r\n\t\t\t})),\r\n\t\t});\r\n\r\n\t\twclPlayers\r\n\t\t\t.forEach(player => {\r\n\t\t\t\tconst positionInParty = player.raidIndex % 5;\r\n\t\t\t\tconst partyIdx = (player.raidIndex - positionInParty) / 5;\r\n\t\t\t\tconst playerProto = player.player.toProto();\r\n\t\t\t\traid.parties[partyIdx].players[positionInParty] = playerProto;\r\n\r\n\t\t\t\tif (isTankSpec(playerToSpec(playerProto))) {\r\n\t\t\t\t\traid.tanks.push(player.toUnitReference());\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\treturn raid;\r\n\t}\r\n}\r\n\r\nclass WCLSimPlayer {\r\n\tpublic readonly data: wclPlayer;\r\n\tpublic readonly id: number;\r\n\tpublic readonly name: string;\r\n\tpublic readonly type: string;\r\n\tpublic raidIndex: number = -1;\r\n\r\n\tprivate readonly simUI: RaidSimUI;\r\n\tprivate readonly fullType: string;\r\n\tprivate readonly spec: Spec | null;\r\n\r\n\treadonly player: Player<any>;\r\n\treadonly preset: PresetSpecSettings<any>;\r\n\r\n\tinferredProfessions: Array<Profession> = [];\r\n\r\n\treadonly playersInParty: Array<WCLSimPlayer> = [];\r\n\r\n\tconstructor(data: wclPlayer, simUI: RaidSimUI, eventID: EventID) {\r\n\t\tthis.simUI = simUI;\r\n\t\tthis.data = data;\r\n\r\n\t\tthis.name = data.name;\r\n\t\tthis.id = data.id;\r\n\t\tthis.type = data.type;\r\n\r\n\t\tconst wclSpec = data.icon.split('-')[1];\r\n\t\tthis.fullType = this.type + wclSpec;\r\n\t\tconsole.log(`WCL spec: ${this.fullType}`);\r\n\r\n\t\tconst foundSpec = fullTypeToSpec[this.fullType] ?? null;\r\n\t\tif (foundSpec == null) {\r\n\t\t\tthrow new Error('Player type not implemented: ' + this.fullType);\r\n\t\t}\r\n\t\tthis.spec = foundSpec;\r\n\t\tthis.player = new Player(this.spec, simUI.sim);\r\n\r\n\t\tthis.preset = WCLSimPlayer.getMatchingPreset(foundSpec, data.talents);\r\n\t\tif (this.preset === undefined) {\r\n\t\t\tthrow new Error('Could not find matching preset: ' + JSON.stringify({\r\n\t\t\t\t'name': this.name,\r\n\t\t\t\t'type': this.fullType,\r\n\t\t\t\t'talents': data.talents,\r\n\t\t\t}).toString());\r\n\t\t}\r\n\r\n\t\t// Apply preset defaults.\r\n\t\tthis.player.applySharedDefaults(eventID);\r\n\t\tthis.player.setTalentsString(eventID, this.preset.talents.talentsString);\r\n\t\tthis.player.setGlyphs(eventID, this.preset.talents.glyphs!);\r\n\t\tthis.player.setConsumes(eventID, this.preset.consumes);\r\n\t\tthis.player.setRotation(eventID, this.preset.rotation);\r\n\t\tthis.player.setSpecOptions(eventID, this.preset.specOptions);\r\n\t\tthis.player.setProfessions(eventID, [Profession.Engineering, Profession.Jewelcrafting]);\r\n\r\n\t\t// Apply settings from report data.\r\n\t\tthis.player.setName(eventID, data.name);\r\n\t\tthis.player.setGear(eventID, simUI.sim.db.lookupEquipmentSpec(EquipmentSpec.create({\r\n\t\t\titems: data.gear.map(gear => ItemSpec.create({\r\n\t\t\t\tid: gear.id,\r\n\t\t\t\tenchant: gear.permanentEnchant,\r\n\t\t\t\tgems: gear.gems ? gear.gems.map(gemInfo => gemInfo.id) : [],\r\n\t\t\t})),\r\n\t\t})));\r\n\t}\r\n\r\n\tprivate static getMatchingPreset(spec: Spec, talents: wclTalents[]): PresetSpecSettings<Spec> {\r\n\t\tconst matchingPresets = playerPresets.filter((preset) => preset.spec == spec);\r\n\t\tlet presetIdx = 0;\r\n\r\n\t\tif (matchingPresets && matchingPresets.length > 1) {\r\n\t\t\tlet distance = 999;\r\n\t\t\t// Search talents and find the preset that the players talents most closely match.\r\n\t\t\tmatchingPresets.forEach((preset, i) => {\r\n\t\t\t\tconst presetTalents = getTalentTreePoints(preset.talents.talentsString);\r\n\t\t\t\t// Diff the distance to the preset.\r\n\t\t\t\tconst newDistance = presetTalents.reduce((acc, v, i) => acc += Math.abs(talents[i]?.guid - presetTalents[i]), 0);\r\n\r\n\t\t\t\t// If this is the best distance, assign this preset.\r\n\t\t\t\tif (newDistance < distance) {\r\n\t\t\t\t\tpresetIdx = i;\r\n\t\t\t\t\tdistance = newDistance;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn matchingPresets[presetIdx];\r\n\t}\r\n\r\n\tpublic toUnitReference(): UnitReference {\r\n\t\treturn UnitReference.create({\r\n\t\t\ttype: UnitReference_Type.Player,\r\n\t\t\tindex: this.raidIndex,\r\n\t\t});\r\n\t}\r\n\r\n\tpublic addPlayerInParty(other: WCLSimPlayer): boolean {\r\n\t\tif (other != this && !this.playersInParty.includes(other)) {\r\n\t\t\tthis.playersInParty.push(other);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nconst fullTypeToSpec: Record<string, Spec> = {\r\n\t'DeathKnightBlood': Spec.SpecTankDeathknight,\r\n\t'DeathKnightLichborne': Spec.SpecTankDeathknight,\r\n\t'DeathKnightRuneblade': Spec.SpecDeathknight,\r\n\t'DeathKnightBloodDPS': Spec.SpecDeathknight,\r\n\t'DeathKnightFrost': Spec.SpecDeathknight,\r\n\t'DeathKnightUnholy': Spec.SpecDeathknight,\r\n\t'DruidBalance': Spec.SpecBalanceDruid,\r\n\t'DruidFeral': Spec.SpecFeralDruid,\r\n\t'DruidWarden': Spec.SpecFeralTankDruid,\r\n\t'DruidGuardian': Spec.SpecFeralTankDruid,\r\n\t'DruidRestoration': Spec.SpecRestorationDruid,\r\n\t'HunterBeastMastery': Spec.SpecHunter,\r\n\t'HunterSurvival': Spec.SpecHunter,\r\n\t'HunterMarksmanship': Spec.SpecHunter,\r\n\t'MageArcane': Spec.SpecMage,\r\n\t'MageFire': Spec.SpecMage,\r\n\t'MageFrost': Spec.SpecMage,\r\n\t'PaladinHoly': Spec.SpecHolyPaladin,\r\n\t'PaladinJusticar': Spec.SpecProtectionPaladin,\r\n\t'PaladinProtection': Spec.SpecProtectionPaladin,\r\n\t'PaladinRetribution': Spec.SpecRetributionPaladin,\r\n\t'PriestHoly': Spec.SpecHealingPriest,\r\n\t'PriestDiscipline': Spec.SpecHealingPriest,\r\n\t'PriestShadow': Spec.SpecShadowPriest,\r\n\t'PriestSmite': Spec.SpecSmitePriest,\r\n\t'RogueAssassination': Spec.SpecRogue,\r\n\t'RogueCombat': Spec.SpecRogue,\r\n\t'RogueSubtlety': Spec.SpecRogue,\r\n\t'ShamanElemental': Spec.SpecElementalShaman,\r\n\t'ShamanEnhancement': Spec.SpecEnhancementShaman,\r\n\t'ShamanRestoration': Spec.SpecRestorationShaman,\r\n\t'WarlockDestruction': Spec.SpecWarlock,\r\n\t'WarlockAffliction': Spec.SpecWarlock,\r\n\t'WarlockDemonology': Spec.SpecWarlock,\r\n\t'WarriorArms': Spec.SpecWarrior,\r\n\t'WarriorFury': Spec.SpecWarrior,\r\n\t'WarriorChampion': Spec.SpecWarrior,\r\n\t'WarriorWarrior': Spec.SpecWarrior,\r\n\t'WarriorGladiator': Spec.SpecWarrior,\r\n\t'WarriorProtection': Spec.SpecProtectionWarrior,\r\n};\r\n\r\ninterface QuerySpell {\r\n\tid: number,\r\n\tname: string,\r\n}\r\n\r\n// Spells which imply a specific Race.\r\nconst racialSpells: Array<{ id: number, name: string, race: Race }> = [\r\n\t{ id: 25046, name: 'Arcane Torrent (Energy)', race: Race.RaceBloodElf },\r\n\t{ id: 28730, name: 'Arcane Torrent (Mana)', race: Race.RaceBloodElf },\r\n\t{ id: 50613, name: 'Arcane Torrent (Runic Power)', race: Race.RaceBloodElf },\r\n\t{ id: 26297, name: 'Berserking', race: Race.RaceTroll },\r\n\t{ id: 20572, name: 'Blood Fury (AP)', race: Race.RaceOrc },\r\n\t{ id: 33697, name: 'Blood Fury (AP+SP)', race: Race.RaceOrc },\r\n\t{ id: 33702, name: 'Blood Fury (SP)', race: Race.RaceOrc },\r\n\t{ id: 20589, name: 'Escape Artist', race: Race.RaceGnome },\r\n\t{ id: 20594, name: 'Stoneform', race: Race.RaceDwarf },\r\n\t{ id: 20549, name: 'War Stomp', race: Race.RaceTauren },\r\n\t{ id: 7744, name: 'Will of the Forsaken', race: Race.RaceUndead },\r\n\t{ id: 59752, name: 'Will to Survive', race: Race.RaceHuman },\r\n];\r\n\r\n// Spells which imply a specific Profession.\r\nconst professionSpells: Array<{ id: number, name: string, profession: Profession }> = [\r\n\t{ id: 55503, name: 'Lifeblood', profession: Profession.Herbalism },\r\n\t{ id: 50305, name: 'Skinning', profession: Profession.Skinning },\r\n];\r\n\r\nconst externalCDSpells: Array<{ id: number, name: string, class: Class, applyFunc: (player: Player<any>, raidTarget: UnitReference) => SpecOptions<any> }> = [\r\n\t{\r\n\t\tid: 29166, name: 'Innervate', class: Class.ClassDruid, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\r\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<DruidSpecs>;\r\n\t\t\toptions.innervateTarget = raidTarget;\r\n\t\t\treturn options;\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\tid: 10060, name: 'Power Infusion', class: Class.ClassPriest, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\r\n\t\t\tconst options = player.getSpecOptions() as SpecOptions<PriestSpecs>;\r\n\t\t\toptions.powerInfusionTarget = raidTarget;\r\n\t\t\treturn options;\r\n\t\t}\r\n\t},\r\n\t// {\r\n\t// \tid: 57933, name: 'Tricks of the Trade', class: Class.ClassRogue, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\r\n\t// \t\tconst options = player.getSpecOptions() as SpecOptions<RogueSpecs>;\r\n\t// \t\toptions.tricksOfTheTradeTarget = raidTarget;\r\n\t// \t\treturn options;\r\n\t// \t}\r\n\t// },\r\n\t// {\r\n\t// \tid: 49016, name: 'Unholy Frenzy', class: Class.ClassDeathknight, applyFunc: (player: Player<any>, raidTarget: UnitReference) => {\r\n\t// \t\tconst options = player.getSpecOptions() as SpecOptions<DeathknightSpecs>;\r\n\t// \t\toptions.unholyFrenzyTarget = raidTarget;\r\n\t// \t\treturn options;\r\n\t// \t}\r\n\t// },\r\n];\r\n\r\n// Healing spells which only affect the caster's party.\r\nconst samePartyHealingSpells: Array<{ id: number, name: string }> = [\r\n\t{ id: 52042, name: 'Healing Stream Totem' },\r\n\t{ id: 25329, name: 'Holy Nova' },\r\n\t{ id: 44208, name: 'Tranquility' },\r\n\t{ id: 15290, name: 'Vampiric Embrace' },\r\n];\r\n\r\n// Healing spells which only affect a single party, but not necessarily the caster's party.\r\nconst otherPartyHealingSpells: Array<{ id: number, name: string }> = [\r\n\t{ id: 25316, name: 'Prayer of Healing' },\r\n];\r\n\r\ninterface wclUrlData {\r\n\treportID: string,\r\n\tfightID: string,\r\n}\r\n\r\ninterface wclCastEvent {\r\n\ttype: 'cast',\r\n\ttimestamp: number;\r\n\tsourceID: number;\r\n\ttargetID: number;\r\n\tabilityGameID: number;\r\n\tfight: number;\r\n}\r\n\r\ninterface wclHealEvent {\r\n\ttype: 'heal',\r\n\ttimestamp: number;\r\n\tsourceID: number;\r\n\ttargetID: number;\r\n\tabilityGameID: number;\r\n\tfight: number;\r\n\tamount: number;\r\n}\r\n\r\ninterface wclCombatantInfoEvent {\r\n\ttype: 'combatantinfo';\r\n\tsourceID: number;\r\n\tauras: {\r\n\t\tsource: number;\r\n\t\tability: number;\r\n\t\tname: string;\r\n\t}[];\r\n}\r\n\r\ninterface wclRateLimitData {\r\n\tlimitPerHour: number,\r\n\tpointsSpentThisHour: number,\r\n\tpointsResetIn: number\r\n}\r\n\r\n// Typed interface for WCL talents\r\ninterface wclTalents {\r\n\tname: string;\r\n\tguid: number;\r\n\ttype: number;\r\n\tabilityIcon: string;\r\n}\r\n\r\n// Typed interface for WCL Gems\r\ninterface wclGems {\r\n\tid: number;\r\n\titemLevel: number;\r\n\ticon: string;\r\n}\r\n\r\n// Typed interface for WCL Gear\r\ninterface wclGear {\r\n\tid: number;\r\n\tslot: number;\r\n\tquality: number;\r\n\ticon: string;\r\n\tname: string;\r\n\titemLevel: number;\r\n\tpermanentEnchant: number;\r\n\tpermanentEnchantName: string;\r\n\ttemporaryEnchant: number;\r\n\tgems?: wclGems[];\r\n}\r\n\r\n// Typed interface for WCL Player Data\r\ninterface wclPlayer {\r\n\tname: string;\r\n\tid: number;\r\n\tguid?: number;\r\n\ttype: string; // Paladin, Mage, etc.\r\n\ticon: string; // Paladin-Justicar, Mage-Fire, etc.\r\n\titemLevel?: number;\r\n\ttotal?: number;\r\n\tactiveTime?: number;\r\n\tactiveTimeReduced?: number;\r\n\tabilities?: unknown[]; // Don't care about abilities.\r\n\tdamageAbilities?: unknown[];\r\n\ttargets?: unknown[];\r\n\ttalents: wclTalents[];\r\n\tgear: wclGear[];\r\n}\r\n\r\ninterface wclAura {\r\n\tname: string;\r\n\tid: number;\r\n\tguid: number;\r\n\ttype: string;\r\n\ticon: string;\r\n\ttotalUptime: number;\r\n\ttotalUses: number;\r\n\tbands: {\r\n\t\tstartTime: number,\r\n\t\tendTime: number,\r\n\t}[];\r\n}\r\n","import { EmbeddedDetailedResults } from \"../core/components/detailed_results.js\";\r\nimport { LogRunner } from \"../core/components/detailed_results/log_runner.js\";\r\nimport { addRaidSimAction, RaidSimResultsManager, ReferenceData } from \"../core/components/raid_sim_action.js\";\r\n\r\nimport { Player } from \"../core/player.js\";\r\nimport { Raid as RaidProto } from \"../core/proto/api.js\";\r\nimport { Class, Encounter as EncounterProto, RaidBuffs, TristateEffect } from \"../core/proto/common.js\";\r\nimport { Blessings } from \"../core/proto/paladin.js\";\r\nimport { BlessingsAssignments, RaidSimSettings, SavedEncounter } from \"../core/proto/ui.js\";\r\nimport { playerToSpec } from \"../core/proto_utils/utils.js\";\r\nimport { Sim } from \"../core/sim.js\";\r\nimport { SimUI } from \"../core/sim_ui.js\";\r\nimport { raidSimStatus } from '../core/launched_sims.js';\r\nimport { EventID, TypedEvent } from \"../core/typed_event.js\";\r\n\r\nimport { RaidTab } from \"./raid_tab.js\";\r\nimport { SettingsTab } from \"./settings_tab.js\";\r\n\r\nimport { BlessingsPicker } from \"./blessings_picker.js\";\r\nimport { implementedSpecs } from \"./presets.js\";\r\nimport { RaidPicker } from \"./raid_picker.js\";\r\n\r\nimport * as ImportExport from \"./import_export.js\";\r\n\r\ndeclare var pako: any;\r\n\r\nexport interface RaidSimConfig {\r\n\tknownIssues?: Array<string>,\r\n}\r\n\r\nconst extraKnownIssues: Array<string> = [\r\n\t//'We\\'re still missing implementations for many specs. If you\\'d like to help us out, check out our <a href=\"https://github.com/Tereneckla/wotlk\">Github project</a> or <a href=\"https://discord.gg/jJMPr9JWwx\">join our discord</a>!',\r\n];\r\n\r\nexport class RaidSimUI extends SimUI {\r\n\tprivate readonly config: RaidSimConfig;\r\n\tprivate raidSimResultsManager: RaidSimResultsManager | null = null;\r\n\tpublic raidPicker: RaidPicker | null = null;\r\n\tpublic blessingsPicker: BlessingsPicker | null = null;\r\n\r\n\t// Emits when the raid comp changes. Includes changes to buff bots.\r\n\treadonly compChangeEmitter = new TypedEvent<void>();\r\n\treadonly changeEmitter = new TypedEvent<void>();\r\n\r\n\treadonly referenceChangeEmitter = new TypedEvent<void>();\r\n\r\n\tconstructor(parentElem: HTMLElement, config: RaidSimConfig) {\r\n\t\tsuper(parentElem, new Sim(), {\r\n\t\t\tcssClass: 'raid-sim-ui',\r\n\t\t\tcssScheme: 'raid',\r\n\t\t\tspec: null,\r\n\t\t\tlaunchStatus: raidSimStatus,\r\n\t\t\tknownIssues: (config.knownIssues || []).concat(extraKnownIssues),\r\n\t\t});\r\n\r\n\t\tthis.config = config;\r\n\r\n\t\tthis.sim.raid.compChangeEmitter.on(eventID => this.compChangeEmitter.emit(eventID));\r\n\t\t[\r\n\t\t\tthis.compChangeEmitter,\r\n\t\t\tthis.sim.changeEmitter,\r\n\t\t].forEach(emitter => emitter.on(eventID => this.changeEmitter.emit(eventID)));\r\n\t\tthis.changeEmitter.on(() => this.recomputeSettingsLayout());\r\n\r\n\t\tthis.sim.setModifyRaidProto(raidProto => this.modifyRaidProto(raidProto));\r\n\t\tthis.sim.waitForInit().then(() => this.loadSettings());\r\n\r\n\t\tthis.addSidebarComponents();\r\n\t\tthis.addTopbarComponents();\r\n\t\tthis.addRaidTab();\r\n\t\tthis.addSettingsTab();\r\n\t\tthis.addDetailedResultsTab();\r\n\t}\r\n\r\n\tprivate loadSettings() {\r\n\t\tconst initEventID = TypedEvent.nextEventID();\r\n\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\tlet loadedSettings = false;\r\n\r\n\t\t\tconst savedSettings = window.localStorage.getItem(this.getSettingsStorageKey());\r\n\t\t\tif (savedSettings != null) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst settings = RaidSimSettings.fromJsonString(savedSettings);\r\n\t\t\t\t\tthis.fromProto(initEventID, settings);\r\n\t\t\t\t\tloadedSettings = true;\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn('Failed to parse saved settings: ' + e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!loadedSettings) {\r\n\t\t\t\tthis.applyDefaults(initEventID);\r\n\t\t\t}\r\n\r\n\t\t\t// This needs to go last so it doesn't re-store things as they are initialized.\r\n\t\t\tthis.changeEmitter.on(eventID => {\r\n\t\t\t\tconst jsonStr = RaidSimSettings.toJsonString(this.toProto());\r\n\t\t\t\twindow.localStorage.setItem(this.getSettingsStorageKey(), jsonStr);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate addSidebarComponents() {\r\n\t\tthis.raidSimResultsManager = addRaidSimAction(this);\r\n\t\tthis.raidSimResultsManager.changeEmitter.on(eventID => this.referenceChangeEmitter.emit(eventID));\r\n\t}\r\n\r\n\tprivate addTopbarComponents() {\r\n\t\tthis.simHeader.addImportLink('JSON', (parent) => new ImportExport.RaidJsonImporter(this.rootElem, this));\r\n\t\tthis.simHeader.addImportLink('WCL', (parent) => new ImportExport.RaidWCLImporter(this.rootElem, this));\r\n\r\n\t\tthis.simHeader.addExportLink('JSON', (parent) => new ImportExport.RaidJsonExporter(this.rootElem, this));\r\n\t}\r\n\r\n\tprivate addRaidTab() {\r\n\t\tnew RaidTab(this.simTabContentsContainer, this);\r\n\t}\r\n\r\n\tprivate addSettingsTab() {\r\n\t\tnew SettingsTab(this.simTabContentsContainer, this);\r\n\t}\r\n\r\n\tprivate addDetailedResultsTab() {\r\n\t\tthis.addTab('Results', 'detailed-results-tab', `\r\n\t\t\t<div class=\"detailed-results\">\r\n\t\t\t</div>\r\n\t\t`);\r\n\r\n\t\tconst detailedResults = new EmbeddedDetailedResults(this.rootElem.getElementsByClassName('detailed-results')[0] as HTMLElement, this, this.raidSimResultsManager!);\r\n\t}\r\n\r\n\tprivate recomputeSettingsLayout() {\r\n\t\twindow.dispatchEvent(new Event('resize'));\r\n\t}\r\n\r\n\tprivate modifyRaidProto(raidProto: RaidProto) {\r\n\t\t// Apply blessings.\r\n\t\tconst numPaladins = this.getClassCount(Class.ClassPaladin);\r\n\t\tconst blessingsAssignments = this.blessingsPicker!.getAssignments();\r\n\t\timplementedSpecs.forEach(spec => {\r\n\t\t\tconst playerProtos = raidProto.parties\r\n\t\t\t\t.map(party => party.players.filter(player => player.class != Class.ClassUnknown && playerToSpec(player) == spec))\r\n\t\t\t\t.flat();\r\n\r\n\t\t\tblessingsAssignments.paladins.forEach((paladin, i) => {\r\n\t\t\t\tif (i >= numPaladins) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (paladin.blessings[spec] == Blessings.BlessingOfKings) {\r\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfKings = true);\r\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfMight) {\r\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfMight = TristateEffect.TristateEffectImproved);\r\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfWisdom) {\r\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfWisdom = TristateEffect.TristateEffectImproved);\r\n\t\t\t\t} else if (paladin.blessings[spec] == Blessings.BlessingOfSanctuary) {\r\n\t\t\t\t\tplayerProtos.forEach(playerProto => playerProto.buffs!.blessingOfSanctuary = true);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tgetCurrentData(): ReferenceData | null {\r\n\t\tif (this.raidSimResultsManager) {\r\n\t\t\treturn this.raidSimResultsManager.getCurrentData();\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tgetReferenceData(): ReferenceData | null {\r\n\t\tif (this.raidSimResultsManager) {\r\n\t\t\treturn this.raidSimResultsManager.getReferenceData();\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tgetActivePlayers(): Array<Player<any>> {\r\n\t\treturn this.sim.raid.getActivePlayers();\r\n\t}\r\n\r\n\tgetClassCount(playerClass: Class): number {\r\n\t\treturn this.getActivePlayers().filter(player => player.isClass(playerClass)).length;\r\n\t}\r\n\r\n\tapplyDefaults(eventID: EventID) {\r\n\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\tthis.sim.raid.fromProto(eventID, RaidProto.create({\r\n\t\t\t\tnumActiveParties: 5,\r\n\t\t\t}));\r\n\t\t\tthis.sim.setPhase(eventID, 1);\r\n\t\t\tthis.sim.encounter.applyDefaults(eventID);\r\n\t\t\tthis.sim.applyDefaults(eventID, true, true);\r\n\t\t\tthis.sim.setShowDamageMetrics(eventID, true);\r\n\t\t});\r\n\t}\r\n\r\n\ttoProto(): RaidSimSettings {\r\n\t\treturn RaidSimSettings.create({\r\n\t\t\tsettings: this.sim.toProto(),\r\n\t\t\traid: this.sim.raid.toProto(true),\r\n\t\t\tblessings: this.blessingsPicker!.getAssignments(),\r\n\t\t\tencounter: this.sim.encounter.toProto(),\r\n\t\t});\r\n\t}\r\n\r\n\ttoLink(): string {\r\n\t\tconst proto = this.toProto();\r\n\t\t// When sharing links, people generally don't intend to share settings.\r\n\t\tproto.settings = undefined;\r\n\r\n\t\tconst protoBytes = RaidSimSettings.toBinary(proto);\r\n\t\tconst deflated = pako.deflate(protoBytes, { to: 'string' });\r\n\t\tconst encoded = btoa(String.fromCharCode(...deflated));\r\n\r\n\t\tconst linkUrl = new URL(window.location.href);\r\n\t\tlinkUrl.hash = encoded;\r\n\t\treturn linkUrl.toString();\r\n\t}\r\n\r\n\tfromProto(eventID: EventID, settings: RaidSimSettings) {\r\n\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\tif (settings.settings) {\r\n\t\t\t\tthis.sim.fromProto(eventID, settings.settings);\r\n\t\t\t}\r\n\t\t\tthis.sim.raid.fromProto(eventID, settings.raid || RaidProto.create());\r\n\t\t\tthis.sim.encounter.fromProto(eventID, settings.encounter || EncounterProto.create());\r\n\t\t\tthis.blessingsPicker!.setAssignments(eventID, settings.blessings || BlessingsAssignments.create());\r\n\t\t});\r\n\t}\r\n\r\n\tclearRaid(eventID: EventID) {\r\n\t\tthis.sim.raid.clear(eventID);\r\n\t}\r\n\r\n\t// Returns the actual key to use for local storage, based on the given key part and the site context.\r\n\tgetStorageKey(keyPart: string): string {\r\n\t\treturn '__wotlk_raid__' + keyPart;\r\n\t}\r\n\r\n\tgetSavedRaidStorageKey(): string {\r\n\t\treturn this.getStorageKey('__savedRaid__');\r\n\t}\r\n}\r\n","import { RaidSimUI } from './raid_sim_ui.js';\r\n\r\nconst ui = new RaidSimUI(document.body, {});\r\n"],"names":["specSimFactories","Spec","SpecTankDeathknight","parentElem","player","TankDeathknightSimUI","SpecDeathknight","DeathknightSimUI","SpecBalanceDruid","BalanceDruidSimUI","SpecFeralDruid","FeralDruidSimUI","SpecFeralTankDruid","FeralTankDruidSimUI","SpecRestorationDruid","RestorationDruidSimUI","SpecElementalShaman","ElementalShamanSimUI","SpecEnhancementShaman","EnhancementShamanSimUI","SpecRestorationShaman","RestorationShamanSimUI","SpecHunter","HunterSimUI","SpecMage","MageSimUI","SpecRogue","RogueSimUI","SpecHolyPaladin","HolyPaladinSimUI","SpecProtectionPaladin","ProtectionPaladinSimUI","SpecRetributionPaladin","RetributionPaladinSimUI","SpecHealingPriest","HealingPriestSimUI","SpecShadowPriest","ShadowPriestSimUI","SpecSmitePriest","SmitePriestSimUI","SpecWarrior","WarriorSimUI","SpecProtectionWarrior","ProtectionWarriorSimUI","SpecWarlock","WarlockSimUI","playerPresets","spec","rotation","BalanceDruidPresets.DefaultRotation","talents","BalanceDruidPresets.Phase1Talents","data","specOptions","BalanceDruidPresets.DefaultOptions","consumes","BalanceDruidPresets.DefaultConsumes","otherDefaults","BalanceDruidPresets.OtherDefaults","defaultName","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceNightElf","Horde","RaceTauren","defaultGear","BalanceDruidPresets.PRE_RAID_PRESET","gear","tooltip","specNames","iconUrl","getSpecIcon","Class","ClassDruid","FeralDruidPresets.DefaultRotation","FeralDruidPresets.OmenTalents","FeralDruidPresets.DefaultOptions","FeralDruidPresets.DefaultConsumes","FeralDruidPresets.PreRaid_PRESET","FeralTankDruidPresets.DefaultRotation","FeralTankDruidPresets.StandardTalents","FeralTankDruidPresets.DefaultOptions","FeralTankDruidPresets.DefaultConsumes","FeralTankDruidPresets.P1_PRESET","FeralTankDruidPresets.P2_PRESET","RestorationDruidPresets.DefaultRotation","RestorationDruidPresets.CelestialFocusTalents","RestorationDruidPresets.DefaultOptions","RestorationDruidPresets.DefaultConsumes","RestorationDruidPresets.P1_PRESET","RestorationDruidPresets.P2_PRESET","HunterPresets.DefaultRotation","HunterPresets.BeastMasteryTalents","HunterPresets.BMDefaultOptions","HunterPresets.DefaultConsumes","RaceOrc","HunterPresets.MM_P1_PRESET","HunterPresets.MM_P2_PRESET","HunterPresets.MM_P3_PRESET","HunterPresets.MM_P4_PRESET","ClassHunter","HunterPresets.MarksmanTalents","HunterPresets.DefaultOptions","HunterPresets.SurvivalTalents","HunterPresets.SV_P1_PRESET","HunterPresets.SV_P2_PRESET","HunterPresets.SV_P3_PRESET","HunterPresets.SV_P4_PRESET","MagePresets.DefaultArcaneRotation","MagePresets.ArcaneTalents","MagePresets.DefaultArcaneOptions","MagePresets.DefaultArcaneConsumes","MagePresets.OtherDefaults","RaceGnome","RaceTroll","MagePresets.ARCANE_P1_PRESET","MagePresets.ARCANE_P2_PRESET","MagePresets.ARCANE_P3_PRESET_ALLIANCE","MagePresets.ARCANE_P3_PRESET_HORDE","ClassMage","MagePresets.DefaultFireRotation","MagePresets.FireTalents","MagePresets.DefaultFireOptions","MagePresets.DefaultFireConsumes","MagePresets.FIRE_P1_PRESET","MagePresets.FIRE_P2_PRESET","MagePresets.FIRE_P3_PRESET_ALLIANCE","MagePresets.FIRE_P3_PRESET_HORDE","MagePresets.DefaultFFBRotation","MagePresets.FrostfireTalents","MagePresets.DefaultFFBOptions","MagePresets.FFB_P2_PRESET","MagePresets.FFB_P3_PRESET_ALLIANCE","MagePresets.FFB_P3_PRESET_HORDE","RoguePresets.DefaultRotation","RoguePresets.AssassinationTalents137","RoguePresets.DefaultOptions","RoguePresets.DefaultConsumes","RaceHuman","RoguePresets.P1_PRESET_ASSASSINATION","RoguePresets.P2_PRESET_ASSASSINATION","RoguePresets.P3_PRESET_ASSASSINATION","ClassRogue","RoguePresets.CombatCQCTalents","RoguePresets.P1_PRESET_COMBAT","RoguePresets.P2_PRESET_COMBAT","RoguePresets.P3_PRESET_COMBAT","ElementalShamanPresets.DefaultRotation","ElementalShamanPresets.StandardTalents","ElementalShamanPresets.DefaultOptions","ElementalShamanPresets.DefaultConsumes","RaceDraenei","ElementalShamanPresets.P1_PRESET","ElementalShamanPresets.P2_PRESET","ElementalShamanPresets.P3_PRESET_ALLI","ElementalShamanPresets.P3_PRESET_HORDE","ClassShaman","EnhancementShamanPresets.DefaultRotation","EnhancementShamanPresets.StandardTalents","EnhancementShamanPresets.DefaultOptions","EnhancementShamanPresets.DefaultConsumes","EnhancementShamanPresets.P1_PRESET","EnhancementShamanPresets.P2_PRESET_FT","EnhancementShamanPresets.P3_PRESET_ALLIANCE","EnhancementShamanPresets.P3_PRESET_HORDE","RestorationShamanPresets.DefaultRotation","RestorationShamanPresets.RaidHealingTalents","RestorationShamanPresets.DefaultOptions","RestorationShamanPresets.DefaultConsumes","RestorationShamanPresets.P1_PRESET","RestorationShamanPresets.P2_PRESET","HealingPriestPresets.DiscDefaultRotation","HealingPriestPresets.DiscTalents","HealingPriestPresets.DefaultOptions","HealingPriestPresets.DefaultConsumes","RaceDwarf","RaceUndead","HealingPriestPresets.DISC_P1_PRESET","HealingPriestPresets.DISC_P2_PRESET","ClassPriest","HealingPriestPresets.HolyDefaultRotation","HealingPriestPresets.HolyTalents","HealingPriestPresets.HOLY_P1_PRESET","HealingPriestPresets.HOLY_P2_PRESET","ShadowPriestPresets.DefaultRotation","ShadowPriestPresets.StandardTalents","ShadowPriestPresets.DefaultOptions","ShadowPriestPresets.DefaultConsumes","ShadowPriestPresets.P1_PRESET","ShadowPriestPresets.P2_PRESET","ShadowPriestPresets.P3_PRESET","SmitePriestPresets.DefaultRotation","SmitePriestPresets.StandardTalents","SmitePriestPresets.DefaultOptions","SmitePriestPresets.DefaultConsumes","SmitePriestPresets.P1_PRESET","WarriorPresets.ArmsRotation","WarriorPresets.ArmsTalents","WarriorPresets.DefaultOptions","WarriorPresets.DefaultConsumes","WarriorPresets.P1_ARMS_PRESET","WarriorPresets.P2_ARMS_PRESET","WarriorPresets.P3_ARMS_4P_PRESET_ALLIANCE","WarriorPresets.P3_ARMS_4P_PRESET_HORDE","ClassWarrior","WarriorPresets.DefaultRotation","WarriorPresets.FuryTalents","WarriorPresets.P1_FURY_PRESET","WarriorPresets.P2_FURY_PRESET","WarriorPresets.P3_FURY_PRESET_ALLIANCE","WarriorPresets.P3_FURY_PRESET_HORDE","ProtectionWarriorPresets.DefaultRotation","ProtectionWarriorPresets.StandardTalents","ProtectionWarriorPresets.DefaultOptions","ProtectionWarriorPresets.DefaultConsumes","ProtectionWarriorPresets.P1_BALANCED_PRESET","ProtectionWarriorPresets.P2_SURVIVAL_PRESET","HolyPaladinPresets.DefaultRotation","HolyPaladinPresets.StandardTalents","HolyPaladinPresets.DefaultOptions","HolyPaladinPresets.DefaultConsumes","RaceBloodElf","HolyPaladinPresets.P1_PRESET","HolyPaladinPresets.P2_PRESET","ClassPaladin","ProtectionPaladinPresets.DefaultRotation","ProtectionPaladinPresets.GenericAoeTalents","ProtectionPaladinPresets.DefaultOptions","ProtectionPaladinPresets.DefaultConsumes","ProtectionPaladinPresets.P1_PRESET","ProtectionPaladinPresets.P2_PRESET","RetributionPaladinPresets.DefaultRotation","RetributionPaladinPresets.AuraMasteryTalents","RetributionPaladinPresets.DefaultOptions","RetributionPaladinPresets.DefaultConsumes","RetributionPaladinPresets.P1_PRESET","RetributionPaladinPresets.P2_PRESET","RetributionPaladinPresets.P3_PRESET","RetributionPaladinPresets.P4_PRESET","RetributionPaladinPresets.P5_PRESET","WarlockPresets.AfflictionRotation","WarlockPresets.AfflictionTalents","WarlockPresets.AfflictionOptions","WarlockPresets.DefaultConsumes","WarlockPresets.P1_Preset_Affliction","WarlockPresets.P2_Preset_Affliction","WarlockPresets.P3_Preset_Affliction_Alliance","WarlockPresets.P3_Preset_Affliction_Horde","WarlockPresets.OtherDefaults","ClassWarlock","WarlockPresets.DemonologyRotation","WarlockPresets.DemonologyTalents","WarlockPresets.DemonologyOptions","WarlockPresets.P1_Preset_Demo_Destro","WarlockPresets.P2_Preset_Demo_Destro","WarlockPresets.P3_Preset_Demo_Alliance","WarlockPresets.P3_Preset_Demo_Horde","WarlockPresets.DestructionRotation","WarlockPresets.DestructionTalents","WarlockPresets.DestructionOptions","WarlockPresets.P3_Preset_Destro_Alliance","WarlockPresets.P3_Preset_Destro_Horde","implementedSpecs","Set","map","preset","NEW_PLAYER","RaidPicker","Component","constructor","parent","raidSimUI","super","__publicField","this","raid","sim","raidControls","document","createElement","classList","add","rootElem","appendChild","newPlayerPicker","NewPlayerPicker","EnumPicker","label","labelTooltip","values","name","value","changedEvent","numActivePartiesChangeEmitter","getValue","getNumActiveParties","setValue","eventID","newValue","setNumActiveParties","picker","factionChangeEmitter","getFaction","setFaction","latestPhaseWithAllPresets","Math","min","max","Object","keys","k","parseInt","Array","val","phase","phaseChangeEmitter","getPhase","setPhase","partiesContainer","partyPickers","getParties","party","i","PartyPicker","updateActiveParties","forEach","partyPicker","index","remove","on","ondragend","event","clearDragPlayer","clearDragParty","getCurrentFaction","getCurrentPhase","getPlayerPicker","raidIndex","floor","MAX_PARTY_SIZE","playerPickers","getPlayerPickers","setDragPlayer","fromIndex","type","currentDragPlayer","currentDragPlayerFromIndex","currentDragType","setDragParty","currentDragParty","raidPicker","setAttribute","innerHTML","playersContainer","getElementsByClassName","PlayerPicker","dpsResultElem","referenceDeltaElem","referenceChangeEmitter","currentData","getCurrentData","referenceData","getReferenceData","partyDps","simResult","raidMetrics","parties","dps","avg","referenceDps","textContent","toFixed","formatDeltaTextElem","ondragstart","target","dataTransfer","dropEffect","effectAllowed","dragEnterCounter","ondragenter","preventDefault","ondragleave","ondragover","ondrop","TypedEvent","nextEventID","freezeAllAndDo","srcPartyPicker","srcPlayerPicker","dstPlayerPicker","srcPlayer","dstPlayer","setPlayer","labelElem","iconElem","nameElem","resultsElem","compChangeEmitter","newPlayer","getPlayer","playerDps","getPlayerWithRaidIndex","dropData","getData","length","dragType","fromPlayerPicker","binary","atob","bytes","Uint8Array","charCodeAt","playerProto","PlayerProto","fromBinary","localPlayer","Player","playerToSpec","fromProto","clone","update","isTankSpec","tanks","getTanks","emptyIdx","findIndex","tank","getPlayerFromUnitReference","setTanks","concat","makeUnitReference","newOptions","getSpecOptions","innervateTarget","newUnitReference","getRaidIndex","setSpecOptions","powerInfusionTarget","focusMagicTarget","applyNewPlayerAssignments","emit","className","classCssClass","cssClassForClass","getClass","getName","querySelector","bindPlayerEvents","addEventListener","setName","emptyName","dragStart","playerDataProto","toProto","setData","btoa","String","fromCharCode","toBinary","editElem","copyElem","deleteElem","Tooltip","getOrCreateInstance","deleteTooltip","setDragImage","onclick","PlayerEditorModal","hide","BaseModal","body","closeButton","fixed","header","id","insertAdjacentHTML","editorRoot","getEnumValues","wowClass","ClassUnknown","matchingPresets","filter","specToClass","classPresetsContainer","matchingPreset","presetElemFragment","presetElem","children","dragImage","Image","src","applySharedDefaults","setRace","setRotation","setTalentsString","talentsString","setGlyphs","glyphs","Glyphs","create","setConsumes","setProfession1","profession1","Profession","Engineering","setProfession2","profession2","Jewelcrafting","setDistanceFromTarget","distanceFromTarget","waitForInit","then","setGear","db","lookupEquipmentSpec","RaidStats","categories","RAID_STATS_OPTIONS","sections","section","sectionElem","contentElem","categoryOptions","push","RaidStatsCategory","changeEmitter","c","options","counterElem","tooltipElem","effects","opt","RaidStatsEffect","playerData","class","statsLink","customClass","html","placement","title","effect","total","sum","count","curPlayers","playerCssClass","textCssClassForClass","actionId","fill","getActivePlayers","p","condition","raidData","negateIf","cond","playerClass","clazz","extraCondition","isClass","playerClassAndTalentInternal","talentName","negateTalent","Boolean","getTalents","playerClassAndTalent","playerClassAndMissingTalent","playerSpecAndTalentInternal","isSpec","playerSpecAndTalent","raidBuff","buffName","getBuffs","isHealingSpec","isMeleeDpsSpec","isRangedDpsSpec","ActionId","fromSpellId","bloodlust","fromItemId","aura","PaladinAura","DevotionAura","totems","earth","EarthTotem","StoneskinTotem","StrengthOfEarthTotem","ClassDeathknight","summon","WarlockSummon","Felhunter","shout","WarriorShout","WarriorShoutBattle","water","WaterTotem","ManaSpringTotem","air","AirTotem","WindfuryTotem","fire","FireTotem","TotemOfWrath","FlametongueTotem","WrathOfAirTotem","WarriorShoutCommanding","Imp","getRotation","sunderArmor","SunderArmor","SunderArmorMaintain","exposeArmorFrequency","ExposeFrequency","Maintain","petType","HunterPetType","Worm","maintainFaerieFire","curse","WarlockCurse","Weakness","Wasp","Bat","includes","Rhino","MageRotationType","Fire","maintainImprovedScorch","Frost","Elements","maintainDemoShout","demoShoutChoice","maintainDemoralizingRoar","CarrionBird","maintainThunderClap","thunderClapChoice","sting","HunterStingType","ScorpidSting","RaidTab","SimTab","simUI","identifier","leftPanel","rightPanel","contentContainer","buildTabContent","savedRaidManager","SavedDataManager","storageKey","getSavedRaidStorageKey","SavedRaid","blessings","blessingsPicker","getAssignments","faction","newRaid","RaidProto","setAssignments","BlessingsAssignments","changeEmitters","equals","a","b","toJson","fromJson","obj","loadUserData","UnitReferencePicker","Input","modObj","config","curPlayer","curUnitReference","getInputValue","buttonElem","dropdownElem","currentOptions","updateOptions","init","makeTargetOptions","isDropdown","getPlayers","option","makeOption","prevUnitReference","UnitReference","setInputValue","inputChanged","makeOptionElem","getInputElem","emptyUnitReference","optionData","find","outerHTML","playerFragment","AssignmentsPicker","innervatesPicker","InnervatesPicker","powerInfusionsPicker","PowerInfusionsPicker","focusMagicsPicker","FocusMagicsPicker","AssignedBuffPicker","targetPickers","getTitle","sourcePlayers","getSourcePlayers","sourcePlayer","sourcePlayerIndex","row","sourceElem","arrow","raidTargetPicker","extraCssClasses","noTargetLabel","specOptionsChangeEmitter","getPlayerValue","setPlayerValue","targetPickerData","targetPicker","targetPlayer","powerInfusion","BlessingsPicker","assignments","makeDefaultBlessings","specs","naturalSpecOrder","memeSpecs","paladinIndexes","append","buildSpecIcon","container","paladinIdx","pickers","blessingPicker","IconEnumPicker","numColumns","color","classColors","Blessings","BlessingUnknown","BlessingOfKings","BlessingOfMight","BlessingOfWisdom","BlessingOfSanctuary","zeroValue","enableWhen","_picker","numPaladins","getClassCount","paladins","updatePickers","_eventID","fragment","titleIcons","icon","newAssignments","TanksPicker","tanksChangeEmitter","j","raid2","SettingsTab","buildColumn","column1","column2","column3","buildEncounterSettings","buildConsumesSettings","buildOtherSettings","buildTankSettings","buildAssignmentSettings","buildBlessingsPicker","buildSavedDataPickers","contentBlock","ContentBlock","EncounterPicker","bodyElement","encounter","showExecuteProportion","makeBooleanRaidIconBuffInput","Tooltips.BLESSINGS_SECTION","savedEncounterManager","getSavedEncounterStorageKey","SavedEncounter","newEncounter","field","IconPicker","states","buffsChangeEmitter","newBuffs","setBuffs","RaidJsonImporter","Importer","descriptionElem","onImport","settings","RaidSimSettings","fromJsonString","ignoreUnknownFields","close","RaidJsonExporter","Exporter","JSON","stringify","RaidWCLImporter","textElem","getWCLBearerToken","token","response","fetch","method","headers","Authorization","URLSearchParams","grant_type","json","access_token","queryWCL","query","Accept","queryURL","queryCounter","res","encodeURI","result","errors","errorStr","e","message","join","Error","console","debug","parseURL","url","match","urlData","reportID","fightID","fightDataQuery","fights","reportData","report","getRateLimit","importLink","importButton","disabled","style","cursor","doImport","error","alert","removeProperty","reportDataQuery","racialSpells","professionSpells","flat","spell","externalCDSpells","samePartyHealingSpells","otherPartyHealingSpells","wclData","playerDetails","entries","wclPlayers","wclPlayer","WCLSimPlayer","inferRace","inferProfessions","inferAssignments","inferPartyComposition","getEncounterProto","getRaidProto","clearRaid","guild","combatantInfoEvents","combatantInfo","auras","ability","source","getRace","log","raceNames","castEventsBySpellId","bucket","reportCastEvents","abilityGameID","sourceID","race","raceToFaction","inferredProfessions","profession","professionNames","professions","distinct","getGear","getProfessionRequirements","setProfessions","fightCastEvents","targetID","applyFunc","toUnitReference","setPlayersInParty","player1","player2","reason","addPlayerInParty","healEventsBySpellId","fightHealEvents","spellEvents","spellEventsByTimestamp","timestamp","eventsAtTime","spellTargets","inferredPlayers","playersInParty","nextEmptyPartyIdx","partyMembers","numMembers","member","partyIdx","allRaidIndexes","nextIdx","idx","some","fight","EncounterProto","duration","endTime","startTime","targets","closestEncounterPreset","getAllPresetEncounters","enc","path","mob","Encounter","defaultTargetProto","MAX_NUM_PARTIES","PartyProto","players","positionInParty","wclSpec","split","fullType","foundSpec","fullTypeToSpec","getMatchingPreset","toString","EquipmentSpec","items","ItemSpec","enchant","permanentEnchant","gems","gemInfo","presetIdx","distance","presetTalents","getTalentTreePoints","newDistance","reduce","acc","v","abs","guid","UnitReference_Type","other","DeathKnightBlood","DeathKnightLichborne","DeathKnightRuneblade","DeathKnightBloodDPS","DeathKnightFrost","DeathKnightUnholy","DruidBalance","DruidFeral","DruidWarden","DruidGuardian","DruidRestoration","HunterBeastMastery","HunterSurvival","HunterMarksmanship","MageArcane","MageFire","MageFrost","PaladinHoly","PaladinJusticar","PaladinProtection","PaladinRetribution","PriestHoly","PriestDiscipline","PriestShadow","PriestSmite","RogueAssassination","RogueCombat","RogueSubtlety","ShamanElemental","ShamanEnhancement","ShamanRestoration","WarlockDestruction","WarlockAffliction","WarlockDemonology","WarriorArms","WarriorFury","WarriorChampion","WarriorWarrior","WarriorGladiator","WarriorProtection","Herbalism","Skinning","raidTarget","extraKnownIssues","SimUI","Sim","cssClass","cssScheme","launchStatus","raidSimStatus","knownIssues","emitter","recomputeSettingsLayout","setModifyRaidProto","raidProto","modifyRaidProto","loadSettings","addSidebarComponents","addTopbarComponents","addRaidTab","addSettingsTab","addDetailedResultsTab","initEventID","loadedSettings","savedSettings","window","localStorage","getItem","getSettingsStorageKey","warn","applyDefaults","jsonStr","toJsonString","setItem","raidSimResultsManager","addRaidSimAction","simHeader","addImportLink","ImportExport.RaidJsonImporter","ImportExport.RaidWCLImporter","addExportLink","ImportExport.RaidJsonExporter","simTabContentsContainer","addTab","EmbeddedDetailedResults","dispatchEvent","Event","blessingsAssignments","playerProtos","paladin","buffs","blessingOfKings","blessingOfMight","TristateEffect","TristateEffectImproved","blessingOfWisdom","blessingOfSanctuary","numActiveParties","setShowDamageMetrics","toLink","proto","protoBytes","deflated","pako","deflate","to","encoded","linkUrl","URL","location","href","hash","clear","getStorageKey","keyPart"],"mappings":"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"}