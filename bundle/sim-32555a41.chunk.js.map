{"version":3,"file":"sim-32555a41.chunk.js","sources":["../../../ui/healing_priest/inputs.ts","../../../ui/healing_priest/presets.ts","../../../ui/healing_priest/sim.ts"],"sourcesContent":["import { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport {\r\n\tHealingPriest,\r\n\tHealingPriest_Rotation as PriestRotation,\r\n\tHealingPriest_Rotation_RotationType as RotationType,\r\n\tHealingPriest_Rotation_SpellOption as SpellOption,\r\n} from '../core/proto/priest.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\r\n\tfieldName: 'powerInfusionTarget',\r\n\tid: ActionId.fromSpellId(10060),\r\n\textraCssClasses: [\r\n\t\t'within-raid-sim-hide',\r\n\t],\r\n\tgetValue: (player: Player<Spec.SpecHealingPriest>) => player.getSpecOptions().powerInfusionTarget?.type == UnitType.Player,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecHealingPriest>, newValue: boolean) => {\r\n\t\tconst newOptions = player.getSpecOptions();\r\n\t\tnewOptions.powerInfusionTarget = UnitReference.create({\r\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\r\n\t\t\tindex: 0,\r\n\t\t});\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t},\r\n});\r\n\r\nexport const InnerFire = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\r\n\tfieldName: 'useInnerFire',\r\n\tid: ActionId.fromSpellId(25431),\r\n});\r\n\r\nexport const Shadowfiend = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\r\n\tfieldName: 'useShadowfiend',\r\n\tid: ActionId.fromSpellId(34433),\r\n});\r\n\r\nexport const RapturesPerMinute = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHealingPriest>({\r\n\tfieldName: 'rapturesPerMinute',\r\n\tlabel: 'Raptures / Min',\r\n\tlabelTooltip: 'Number of times to proc Rapture each minute (due to a PWS being fully absorbed).',\r\n\tshowWhen: (player: Player<Spec.SpecHealingPriest>) => player.getTalents().rapture > 0,\r\n\tchangeEmitter: (player: Player<Spec.SpecHealingPriest>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const HealingPriestRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecHealingPriest, RotationType>({\r\n\t\t\tfieldName: 'type',\r\n\t\t\tlabel: 'Type',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Cycle', value: RotationType.Cycle },\r\n\t\t\t\t{ name: 'Custom', value: RotationType.Custom },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeCustomRotationInput<Spec.SpecHealingPriest, SpellOption>({\r\n\t\t\tfieldName: 'customRotation',\r\n\t\t\tnumColumns: 2,\r\n\t\t\tshowCastsPerMinute: true,\r\n\t\t\tvalues: [\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25213), value: SpellOption.GreaterHeal },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25235), value: SpellOption.FlashHeal },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25222), value: SpellOption.Renew },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25218), value: SpellOption.PowerWordShield },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(34866), value: SpellOption.CircleOfHealing },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25316), value: SpellOption.PrayerOfHealing },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(33076), value: SpellOption.PrayerOfMending },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(53005), value: SpellOption.Penance },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(32546), value: SpellOption.BindingHeal },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecHealingPriest>) => player.getRotation().type == RotationType.Custom,\r\n\t\t}),\r\n\t],\r\n};\r\n","import { Consumes } from '../core/proto/common.js';\r\nimport { CustomRotation, CustomSpell } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { RaidBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { UnitReference } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport {\r\n\tHealingPriest_Rotation as Rotation,\r\n\tHealingPriest_Rotation_RotationType as RotationType,\r\n\tHealingPriest_Rotation_SpellOption as SpellOption,\r\n\tHealingPriest_Options as Options,\r\n\tPriestMajorGlyph as MajorGlyph,\r\n\tPriestMinorGlyph as MinorGlyph,\r\n} from '../core/proto/priest.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const DiscTalents = {\r\n\tname: 'Disc',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '0503203130300512301313231251-2351010303',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfPowerWordShield,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfFlashHeal,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfPenance,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\r\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\r\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\r\n\t\t}),\r\n\t}),\r\n};\r\nexport const HolyTalents = {\r\n\tname: 'Holy',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '05032031103-234051032002152530004311051',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfPrayerOfHealing,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfRenew,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfCircleOfHealing,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\r\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\r\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DiscDefaultRotation = Rotation.create({\r\n\ttype: RotationType.Cycle,\r\n\tcustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: SpellOption.PowerWordShield, castsPerMinute: 18 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Penance, castsPerMinute: 4 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.PrayerOfMending, castsPerMinute: 2 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.GreaterHeal, castsPerMinute: 1 }),\r\n\t\t],\r\n\t}),\r\n});\r\n\r\nexport const HolyDefaultRotation = Rotation.create({\r\n\ttype: RotationType.Cycle,\r\n\tcustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: SpellOption.GreaterHeal, castsPerMinute: 10 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.CircleOfHealing, castsPerMinute: 5 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Renew, castsPerMinute: 10 }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.PrayerOfMending, castsPerMinute: 2 }),\r\n\t\t],\r\n\t}),\r\n});\r\n\r\nexport const ROTATION_PRESET_DISC = {\r\n\tname: 'Disc',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: Rotation.toJsonString(Rotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48066}}},\"rhs\":{\"const\":{\"val\":\"18\"}}}},\"multishield\":{\"spellId\":{\"spellId\":48066},\"maxShields\":10,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":53007}}},\"rhs\":{\"const\":{\"val\":\"4\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":53007}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48113}}},\"rhs\":{\"const\":{\"val\":\"2\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48113}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48063}}},\"rhs\":{\"const\":{\"val\":\"1\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48063}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_PRESET_HOLY = {\r\n\tname: 'Holy',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: Rotation.toJsonString(Rotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48063}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48063}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48089}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48089}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48068}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},\"multidot\":{\"spellId\":{\"spellId\":48068},\"maxDots\":10,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"spellCpm\":{\"spellId\":{\"spellId\":48113}}},\"rhs\":{\"const\":{\"val\":\"2\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48113}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const DefaultOptions = Options.create({\r\n\tuseInnerFire: true,\r\n\tuseShadowfiend: true,\r\n\trapturesPerMinute: 5,\r\n\r\n\tpowerInfusionTarget: UnitReference.create(),\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfTheFrostWyrm,\r\n\tfood: Food.FoodFishFeast,\r\n\tdefaultPotion: Potions.RunicManaInjector,\r\n\tprepopPotion: Potions.PotionOfWildMagic,\r\n});\r\n\r\nexport const DefaultRaidBuffs = RaidBuffs.create({\r\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\tarcaneBrilliance: true,\r\n\tdivineSpirit: true,\r\n\ttrueshotAura: true,\r\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\ticyTalons: true,\r\n\ttotemOfWrath: true,\r\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\twrathOfAirTotem: true,\r\n\tsanctifiedRetribution: true,\r\n\tbloodlust: true,\r\n});\r\n\r\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\r\n\tblessingOfKings: true,\r\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\tvampiricTouch: true,\r\n});\r\n\r\nexport const DefaultDebuffs = Debuffs.create({\r\n});\r\n\r\nexport const DISC_PRERAID_PRESET = {\r\n\tname: 'Disc Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":37294,\"enchant\":3819,\"gems\":[41401,39998]},\r\n\t\t{\"id\":40681},\r\n\t\t{\"id\":37691,\"enchant\":3809},\r\n\t\t{\"id\":37630,\"enchant\":3859},\r\n\t\t{\"id\":39515,\"enchant\":3832,\"gems\":[42144,42144]},\r\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":39519,\"enchant\":3246,\"gems\":[42144,0]},\r\n\t\t{\"id\":40697,\"enchant\":3601,\"gems\":[39998,39998]},\r\n\t\t{\"id\":37622,\"enchant\":3719},\r\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40027]},\r\n\t\t{\"id\":44283},\r\n\t\t{\"id\":37195},\r\n\t\t{\"id\":37660},\r\n\t\t{\"id\":42413,\"gems\":[40012,40012]},\r\n\t\t{\"id\":37360,\"enchant\":3854},\r\n\t\t{},\r\n\t\t{\"id\":37238}\r\n\t]}`),\r\n};\r\n\r\nexport const DISC_P1_PRESET = {\r\n\tname: 'Disc P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40456,\"enchant\":3819,\"gems\":[41401,39998]},\r\n\t\t{\"id\":44657,\"gems\":[40047]},\r\n\t\t{\"id\":40450,\"enchant\":3809,\"gems\":[42144]},\r\n\t\t{\"id\":40724,\"enchant\":3859},\r\n\t\t{\"id\":40194,\"enchant\":3832,\"gems\":[42144]},\r\n\t\t{\"id\":40741,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":40445,\"enchant\":3246,\"gems\":[42144,0]},\r\n\t\t{\"id\":40271,\"enchant\":3601,\"gems\":[40027,39998]},\r\n\t\t{\"id\":40398,\"enchant\":3719,\"gems\":[39998,39998]},\r\n\t\t{\"id\":40236,\"enchant\":3606},\r\n\t\t{\"id\":40108},\r\n\t\t{\"id\":40433},\r\n\t\t{\"id\":37835},\r\n\t\t{\"id\":40258},\r\n\t\t{\"id\":40395,\"enchant\":3834},\r\n\t\t{\"id\":40350},\r\n\t\t{\"id\":40245}\r\n\t]}`),\r\n};\r\n\r\nexport const HOLY_PRERAID_PRESET = {\r\n\tname: 'Holy Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42553,\"enchant\":3819,\"gems\":[41401,42148]},\r\n\t\t{\"id\":40681},\r\n\t\t{\"id\":37655,\"enchant\":3809},\r\n\t\t{\"id\":37291,\"enchant\":3831},\r\n\t\t{\"id\":39515,\"enchant\":3832,\"gems\":[40012,40012]},\r\n\t\t{\"id\":37361,\"enchant\":1119,\"gems\":[0]},\r\n\t\t{\"id\":39519,\"enchant\":3604,\"gems\":[40012,0]},\r\n\t\t{\"id\":40697,\"enchant\":3601,\"gems\":[42148,42148]},\r\n\t\t{\"id\":37189,\"enchant\":3719,\"gems\":[40047,49110]},\r\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40092]},\r\n\t\t{\"id\":44283},\r\n\t\t{\"id\":37694},\r\n\t\t{\"id\":37111},\r\n\t\t{\"id\":42413,\"gems\":[40012,40012]},\r\n\t\t{\"id\":37360,\"enchant\":3854},\r\n\t\t{},\r\n\t\t{\"id\":37619}\r\n\t]}`),\r\n};\r\n\r\nexport const HOLY_P1_PRESET = {\r\n\tname: 'Holy P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40447,\"enchant\":3819,\"gems\":[41401,40051]},\r\n\t\t{\"id\":44657,\"gems\":[40012]},\r\n\t\t{\"id\":40450,\"enchant\":3809,\"gems\":[40012]},\r\n\t\t{\"id\":40723,\"enchant\":3831},\r\n\t\t{\"id\":40381,\"enchant\":3832,\"gems\":[40012,49110]},\r\n\t\t{\"id\":40741,\"enchant\":1119,\"gems\":[0]},\r\n\t\t{\"id\":40454,\"enchant\":3604,\"gems\":[40051,0]},\r\n\t\t{\"id\":40271,\"enchant\":3601,\"gems\":[40012,40012]},\r\n\t\t{\"id\":40398,\"enchant\":3719,\"gems\":[42148,42148]},\r\n\t\t{\"id\":40326,\"enchant\":3606,\"gems\":[42148]},\r\n\t\t{\"id\":40719},\r\n\t\t{\"id\":40375},\r\n\t\t{\"id\":37111},\r\n\t\t{\"id\":42413,\"gems\":[40012,40012]},\r\n\t\t{\"id\":40395,\"enchant\":3834},\r\n\t\t{\"id\":40350},\r\n\t\t{\"id\":40245}\r\n\t]}`),\r\n};\r\n\r\nexport const DISC_P2_PRESET = {\r\n\tname: 'Disc P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":46197,\"enchant\":3819,\"gems\":[41401,45883]},\r\n\t\t{\"id\":45933,\"gems\":[39998]},\r\n\t\t{\"id\":45390,\"enchant\":3809,\"gems\":[39998]},\r\n\t\t{\"id\":45486,\"enchant\":3859,\"gems\":[39998]},\r\n\t\t{\"id\":46193,\"enchant\":3832,\"gems\":[39998,39998]},\r\n\t\t{\"id\":45146,\"enchant\":3758,\"gems\":[0]},\r\n\t\t{\"id\":45520,\"enchant\":3246,\"gems\":[39998,39998,0]},\r\n\t\t{\"id\":45558,\"gems\":[39998,40047,39998]},\r\n\t\t{\"id\":45388,\"enchant\":3721,\"gems\":[39998,39998]},\r\n\t\t{\"id\":46050,\"enchant\":3606,\"gems\":[39998,39998]},\r\n\t\t{\"id\":45946,\"gems\":[39998]},\r\n\t\t{\"id\":46096,\"gems\":[39998]},\r\n\t\t{\"id\":40432},\r\n\t\t{\"id\":45535},\r\n\t\t{\"id\":45612,\"enchant\":3834,\"gems\":[40027]},\r\n\t\t{\"id\":45314},\r\n\t\t{\"id\":45294,\"gems\":[39998]}\r\n\t]}`),\r\n};\r\n\r\nexport const HOLY_P2_PRESET = {\r\n\tname: 'Holy P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":46197,\"enchant\":3819,\"gems\":[41401,45883]},\r\n\t\t{\"id\":45447,\"gems\":[40017]},\r\n\t\t{\"id\":45390,\"enchant\":3809,\"gems\":[40051]},\r\n\t\t{\"id\":45486,\"enchant\":3859,\"gems\":[40017]},\r\n\t\t{\"id\":46193,\"enchant\":3832,\"gems\":[40051,40017]},\r\n\t\t{\"id\":44008,\"enchant\":3758,\"gems\":[40051,0]},\r\n\t\t{\"id\":45520,\"enchant\":3246,\"gems\":[40017,40017,0]},\r\n\t\t{\"id\":45558,\"gems\":[40051,40017,40017]},\r\n\t\t{\"id\":45388,\"enchant\":3721,\"gems\":[40026,40017]},\r\n\t\t{\"id\":46050,\"enchant\":3606,\"gems\":[40026,40017]},\r\n\t\t{\"id\":45946,\"gems\":[40017]},\r\n\t\t{\"id\":46323,\"gems\":[40017]},\r\n\t\t{\"id\":46051},\r\n\t\t{\"id\":45535},\r\n\t\t{\"id\":46035,\"enchant\":3834,\"gems\":[40017]},\r\n\t\t{\"id\":45271},\r\n\t\t{\"id\":45511}\r\n\t]}`),\r\n};\r\n","import { PartyBuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat } from '../core/proto/common.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\n\r\nimport {\r\n\tHealingPriest,\r\n\tHealingPriest_Rotation as Rotation,\r\n\tHealingPriest_Options as Options,\r\n} from '../core/proto/priest.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nimport * as HealingPriestInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class HealingPriestSimUI extends IndividualSimUI<Spec.SpecHealingPriest> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHealingPriest>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'healing-priest-sim-ui',\r\n\t\t\tcssScheme: 'priest',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t\t'Talents that apply to, \"friendly targets at or below 50% health\" are not implemented.',\r\n\t\t\t\t'Prayer of Mending always bounces the maximum number of times.',\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatSpellPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatMana,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.DISC_P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 2.73,\r\n\t\t\t\t\t[Stat.StatSpirit]: 1.63,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.75,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.28,\r\n\t\t\t\t\t[Stat.StatMP5]: 2.05,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DiscDefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.DiscTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\r\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\r\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tHealingPriestInputs.SelfPowerInfusion,\r\n\t\t\t\tHealingPriestInputs.InnerFire,\r\n\t\t\t\tHealingPriestInputs.Shadowfiend,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: HealingPriestInputs.HealingPriestRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tHealingPriestInputs.RapturesPerMinute,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.DiscTalents,\r\n\t\t\t\t\tPresets.HolyTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_PRESET_DISC,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_HOLY,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.DISC_PRERAID_PRESET,\r\n\t\t\t\t\tPresets.DISC_P1_PRESET,\r\n\t\t\t\t\tPresets.DISC_P2_PRESET,\r\n\t\t\t\t\tPresets.HOLY_PRERAID_PRESET,\r\n\t\t\t\t\tPresets.HOLY_P1_PRESET,\r\n\t\t\t\t\tPresets.HOLY_P2_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","powerInfusionTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","InnerFire","Shadowfiend","RapturesPerMinute","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","showWhen","getTalents","rapture","changeEmitter","TypedEvent","onAny","specOptionsChangeEmitter","talentsChangeEmitter","HealingPriestRotationConfig","inputs","InputHelpers.makeRotationEnumInput","values","name","value","RotationType","Cycle","Custom","InputHelpers.makeCustomRotationInput","numColumns","showCastsPerMinute","actionId","SpellOption","GreaterHeal","FlashHeal","Renew","PowerWordShield","CircleOfHealing","PrayerOfHealing","PrayerOfMending","Penance","BindingHeal","getRotation","DiscTalents","data","SavedTalents","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfPowerWordShield","major2","GlyphOfFlashHeal","major3","GlyphOfPenance","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowfiend","minor3","GlyphOfFading","HolyTalents","GlyphOfPrayerOfHealing","GlyphOfRenew","GlyphOfCircleOfHealing","DiscDefaultRotation","Rotation","customRotation","CustomRotation","spells","CustomSpell","spell","castsPerMinute","HolyDefaultRotation","ROTATION_PRESET_DISC","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","fromJsonString","ROTATION_PRESET_HOLY","DefaultOptions","Options","useInnerFire","useShadowfiend","rapturesPerMinute","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","RunicManaInjector","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","DefaultDebuffs","Debuffs","DISC_PRERAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","getTalentTree","gear","EquipmentSpec","DISC_P1_PRESET","HOLY_PRERAID_PRESET","HOLY_P1_PRESET","DISC_P2_PRESET","HOLY_P2_PRESET","HealingPriestSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","Presets.DISC_P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","Presets.DiscDefaultRotation","talents","Presets.DiscTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","HealingPriestInputs.SelfPowerInfusion","HealingPriestInputs.InnerFire","HealingPriestInputs.Shadowfiend","rotationInputs","HealingPriestInputs.HealingPriestRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","HealingPriestInputs.RapturesPerMinute","encounterPicker","showExecuteProportion","presets","Presets.HolyTalents","rotations","Presets.ROTATION_PRESET_DISC","Presets.ROTATION_PRESET_HOLY","Presets.DISC_PRERAID_PRESET","Presets.DISC_P2_PRESET","Presets.HOLY_PRERAID_PRESET","Presets.HOLY_P1_PRESET","Presets.HOLY_P2_PRESET"],"mappings":"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"}