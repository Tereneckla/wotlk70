{"version":3,"file":"sim-72744bc3.chunk.js","sources":["../../../ui/shadow_priest/presets.ts","../../../ui/shadow_priest/inputs.ts","../../../ui/shadow_priest/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { ItemSpec } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { Faction } from '../core/proto/common.js';\r\nimport { RaidBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { Player } from '../core/player.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\nimport {\r\n\tShadowPriest_Rotation as Rotation,\r\n\tShadowPriest_Options as Options,\r\n\tShadowPriest_Rotation_RotationType,\r\n\tPriestMajorGlyph as MajorGlyph,\r\n\tPriestMinorGlyph as MinorGlyph,\r\n} from '../core/proto/priest.js';\r\n\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const StandardTalents = {\r\n\tname: 'Standard',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '05032031--325023051223010323151301351',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfShadow,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfMindFlay,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfDispersion,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\r\n\t\t\tminor2: MinorGlyph.GlyphOfShadowProtection,\r\n\t\t\tminor3: MinorGlyph.GlyphOfShadowfiend,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = Rotation.create({\r\n\trotationType: ShadowPriest_Rotation_RotationType.Ideal,\r\n});\r\n\r\nexport const DefaultOptions = Options.create({\r\n\tuseShadowfiend: true,\r\n\tuseMindBlast: true,\r\n\tuseShadowWordDeath: true,\r\n\tlatency: 100,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfTheFrostWyrm,\r\n\tfood: Food.FoodFishFeast,\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tprepopPotion: Potions.PotionOfWildMagic,\r\n});\r\n\r\nexport const DefaultRaidBuffs = RaidBuffs.create({\r\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\tarcaneBrilliance: true,\r\n\tdivineSpirit: true,\r\n\ttrueshotAura: true,\r\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\ticyTalons: true,\r\n\ttotemOfWrath: true,\r\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\twrathOfAirTotem: true,\r\n\tsanctifiedRetribution: true,\r\n\tbloodlust: true,\r\n});\r\n\r\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\r\n\tblessingOfKings: true,\r\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\tvampiricTouch: true,\r\n});\r\n\r\nexport const DefaultDebuffs = Debuffs.create({\r\n\tsunderArmor: true,\r\n\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\tbloodFrenzy: true,\r\n\tebonPlaguebringer: true,\r\n\theartOfTheCrusader: true,\r\n\tjudgementOfWisdom: true,\r\n});\r\n\r\nexport const PreBis_PRESET = {\r\n\tname: 'PreBis Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42553,\"enchant\":3820,\"gems\":[41285,40049]},\r\n\t\t{\"id\":40680},\r\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[39998,40026]},\r\n\t\t{\"id\":41610,\"enchant\":3722},\r\n\t\t{\"id\":43792,\"enchant\":1144,\"gems\":[39998,40051]},\r\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":39530,\"enchant\":3604,\"gems\":[40049,0]},\r\n\t\t{\"id\":40696,\"gems\":[40049,39998]},\r\n\t\t{\"id\":37854,\"enchant\":3719},\r\n\t\t{\"id\":44202,\"enchant\":3826,\"gems\":[40026]},\r\n\t\t{\"id\":40585},\r\n\t\t{\"id\":37694},\r\n\t\t{\"id\":37835},\r\n\t\t{\"id\":37873},\r\n\t\t{\"id\":41384,\"enchant\":3834},\r\n\t\t{\"id\":40698},\r\n\t\t{\"id\":37177}\r\n  ]}`),\r\n};\r\nexport const P1_PRESET = {\r\n\tname: 'P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(` {\"items\": [\r\n\t\t{\"id\":40562,\"enchant\":3820,\"gems\":[41285,39998]},\r\n\t\t{\"id\":44661,\"gems\":[40026]},\r\n\t\t{\"id\":40459,\"enchant\":3810,\"gems\":[39998]},\r\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40026]},\r\n\t\t{\"id\":44002,\"enchant\":1144,\"gems\":[39998,39998]},\r\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":40454,\"enchant\":3604,\"gems\":[40049,0]},\r\n\t\t{\"id\":40561,\"gems\":[39998]},\r\n\t\t{\"id\":40560,\"enchant\":3719},\r\n\t\t{\"id\":40558,\"enchant\":3606},\r\n\t\t{\"id\":40719},\r\n\t\t{\"id\":40399},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":40432},\r\n\t\t{\"id\":40395,\"enchant\":3834},\r\n\t\t{\"id\":40273},\r\n\t\t{\"id\":39712}\r\n  ]}`),\r\n};\r\nexport const P2_PRESET = {\r\n\tname: 'P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n        {\"id\":46172,\"enchant\":3820,\"gems\":[41285,45883]},\r\n        {\"id\":45243,\"gems\":[39998]},\r\n        {\"id\":46165,\"enchant\":3810,\"gems\":[39998]},\r\n        {\"id\":45242,\"enchant\":3722,\"gems\":[40049]},\r\n        {\"id\":46168,\"enchant\":1144,\"gems\":[39998,39998]},\r\n        {\"id\":45446,\"enchant\":2332,\"gems\":[39998,0]},\r\n        {\"id\":45665,\"enchant\":3604,\"gems\":[39998,39998,0]},\r\n        {\"id\":45619,\"enchant\":3601,\"gems\":[39998,39998,39998]},\r\n        {\"id\":46170,\"enchant\":3719,\"gems\":[39998,40049]},\r\n        {\"id\":45135,\"enchant\":3606,\"gems\":[39998,40049]},\r\n        {\"id\":45495,\"gems\":[40026]},\r\n        {\"id\":46046,\"gems\":[39998]},\r\n        {\"id\":45518},\r\n        {\"id\":45466},\r\n        {\"id\":45620,\"enchant\":3834,\"gems\":[40026]},\r\n        {\"id\":45617},\r\n        {\"id\":45294,\"gems\":[39998]}\r\n      ]\r\n    }`),\r\n};\r\nexport const P3_PRESET = {\r\n\tname: 'P3 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":48088,\"enchant\":3820,\"gems\":[41285,40133]},\r\n        {\"id\":47468,\"gems\":[40155]},\r\n        {\"id\":48091,\"enchant\":3810,\"gems\":[40155]},\r\n        {\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\r\n        {\"id\":48090,\"enchant\":1144,\"gems\":[40113,40133]},\r\n        {\"id\":47467,\"enchant\":2332,\"gems\":[40155,0]},\r\n        {\"id\":45665,\"enchant\":3604,\"gems\":[40113,40113,0]},\r\n        {\"id\":47419,\"enchant\":3601,\"gems\":[40133,40113,40113]},\r\n        {\"id\":48089,\"enchant\":3719,\"gems\":[40113,40133]},\r\n        {\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\r\n        {\"id\":47489,\"gems\":[40155]},\r\n        {\"id\":45495,\"gems\":[40113]},\r\n        {\"id\":45518},\r\n        {\"id\":47477},\r\n        {\"id\":47483,\"enchant\":3834},\r\n        {\"id\":47437},\r\n        {\"id\":47995}\r\n      ]\r\n    }`),\r\n};\r\nexport const ROTATION_PRESET_BASIC_APL = {\r\n\tname: 'Basic APL',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: Rotation.toJsonString(DefaultRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"priorityList\": [\r\n\t\t\t]\r\n\t\t  }`),\r\n\t}),\r\n\t};","import { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { Player } from '../core/player.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport {\r\n\tShadowPriest_Options_Armor as Armor,\r\n\tShadowPriest_Rotation_RotationType as RotationType,\r\n\tShadowPriest_Rotation_PreCastOption as precastType\r\n} from '../core/proto/priest.js';\r\nimport { EventID } from '../core/typed_event.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecShadowPriest, Armor>({\r\n\tfieldName: 'armor',\r\n\tvalues: [\r\n\t\t{ value: Armor.NoArmor, tooltip: 'No Inner Fire' },\r\n\t\t{ actionId: ActionId.fromSpellId(48168), value: Armor.InnerFire },\r\n\t],\r\n});\r\n\r\nexport const MindBlastInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\r\n\tfieldName: 'useMindBlast',\r\n\tid: ActionId.fromSpellId(25375),\r\n});\r\n\r\nexport const ShadowWordDeathInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\r\n\tfieldName: 'useShadowWordDeath',\r\n\tid: ActionId.fromSpellId(32996),\r\n});\r\n\r\nexport const ShadowfiendInput = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecShadowPriest>({\r\n\tfieldName: 'useShadowfiend',\r\n\tid: ActionId.fromSpellId(34433),\r\n});\r\n\r\nexport const ShadowPriestRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecShadowPriest, RotationType>({\r\n\t\t\tfieldName: 'rotationType',\r\n\t\t\tlabel: 'Rotation Type',\r\n\t\t\tlabelTooltip: 'Choose how to clip your mindflay. Basic will never clip. Clipping will clip for other spells and use a 2xMF2 when there is time for 4 ticks. Ideal will evaluate the DPS gain of every action to determine MF actions.',\r\n\t\t\tvalues: [\r\n\t\t\t\t//{ name: 'Basic', value: RotationType.Basic },\r\n\t\t\t\t//{ name: 'Clipping', value: RotationType.Clipping },\r\n\t\t\t\t{ name: 'Ideal', value: RotationType.Ideal },\r\n\t\t\t\t{ name: 'AoE', value: RotationType.AoE },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecShadowPriest, precastType>({\r\n\t\t\tfieldName: 'precastType',\r\n\t\t\tlabel: 'PreCast Spell',\r\n\t\t\tlabelTooltip: 'Choose which spell you want to Precast',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"None\", value: precastType.Nothing },\r\n\t\t\t\t{ name: 'Vampiric Touch', value: precastType.PrecastVt },\r\n\t\t\t\t{ name: 'Mind Blast', value: precastType.PrecastMb },\r\n\t\t\t],\r\n\t\t}),\r\n\t],\r\n};\r\n","import { RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { Class } from '../core/proto/common.js';\r\nimport { Consumes } from '../core/proto/common.js';\r\nimport { Encounter } from '../core/proto/common.js';\r\nimport { ItemSlot } from '../core/proto/common.js';\r\nimport { MobType } from '../core/proto/common.js';\r\nimport { UnitReference } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { Sim } from '../core/sim.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\n\r\nimport { ShadowPriest, ShadowPriest_Rotation as Rotation, ShadowPriest_Options as Options, ShadowPriest_Rotation, ShadowPriest_Rotation_RotationType } from '../core/proto/priest.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nimport * as ShadowPriestInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class ShadowPriestSimUI extends IndividualSimUI<Spec.SpecShadowPriest> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecShadowPriest>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'shadow-priest-sim-ui',\r\n\t\t\tcssScheme: 'priest',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatSpellPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecShadowPriest>) => {\r\n\t\t\t\tlet stats = new Stats();\r\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttalents: stats,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P3_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 0.11,\r\n\t\t\t\t\t[Stat.StatSpirit]: 0.47,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0.87,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.74,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 1.65,\r\n\t\t\t\t\t[Stat.StatMP5]: 0.00,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.StandardTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\r\n\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\r\n\r\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\r\n\r\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tShadowPriestInputs.ArmorInput,\r\n\t\t\t],\r\n\t\t\trotationIconInputs: [\r\n\t\t\t\tShadowPriestInputs.MindBlastInput,\r\n\t\t\t\tShadowPriestInputs.ShadowWordDeathInput,\r\n\t\t\t\tShadowPriestInputs.ShadowfiendInput,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: ShadowPriestInputs.ShadowPriestRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.ReplenishmentBuff,\r\n\t\t\t\tIconInputs.MeleeHasteBuff,\r\n\t\t\t\tIconInputs.MeleeCritBuff,\r\n\t\t\t\tIconInputs.MP5Buff,\r\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\r\n\t\t\t\tIconInputs.AttackPowerBuff,\r\n\t\t\t\tIconInputs.StaminaBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.ChannelClipDelay,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.StandardTalents,\r\n\t\t\t\t],\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_PRESET_BASIC_APL,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PreBis_PRESET,\r\n\t\t\t\t\tPresets.P1_PRESET,\r\n\t\t\t\t\tPresets.P2_PRESET,\r\n\t\t\t\t\tPresets.P3_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["StandardTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfShadow","major2","GlyphOfMindFlay","major3","GlyphOfDispersion","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowProtection","minor3","GlyphOfShadowfiend","DefaultRotation","Rotation","rotationType","ShadowPriest_Rotation_RotationType","Ideal","DefaultOptions","Options","useShadowfiend","useMindBlast","useShadowWordDeath","latency","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","PotionOfSpeed","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","sunderArmor","faerieFire","bloodFrenzy","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","PreBis_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","P3_PRESET","ROTATION_PRESET_BASIC_APL","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","Armor","NoArmor","actionId","ActionId","fromSpellId","InnerFire","MindBlastInput","InputHelpers.makeSpecOptionsBooleanIconInput","id","ShadowWordDeathInput","ShadowfiendInput","ShadowPriestRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","RotationType","AoE","precastType","Nothing","PrecastVt","PrecastMb","ShadowPriestSimUI","IndividualSimUI","constructor","parentElem","player","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","Presets.P3_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","ShadowPriestInputs.ArmorInput","rotationIconInputs","ShadowPriestInputs.MindBlastInput","ShadowPriestInputs.ShadowWordDeathInput","ShadowPriestInputs.ShadowfiendInput","rotationInputs","ShadowPriestInputs.ShadowPriestRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.MP5Buff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_BASIC_APL","Presets.PreBis_PRESET","Presets.P1_PRESET","Presets.P2_PRESET"],"mappings":"uYAiCO,MAAMA,EAAkB,CAC9BC,KAAM,WACNC,KAAMC,EAAaC,OAAO,CACzBC,cAAe,wCACfC,OAAQC,EAAOH,OAAO,CACrBI,OAAQC,EAAWC,cACnBC,OAAQF,EAAWG,gBACnBC,OAAQJ,EAAWK,kBACnBC,OAAQC,EAAWC,iBACnBC,OAAQF,EAAWG,wBACnBC,OAAQJ,EAAWK,wBAKTC,EAAkBC,EAASnB,OAAO,CAC9CoB,aAAcC,EAAmCC,QAGrCC,EAAiBC,EAAQxB,OAAO,CAC5CyB,gBAAgB,EAChBC,cAAc,EACdC,oBAAoB,EACpBC,QAAS,MAGGC,EAAkBC,EAAS9B,OAAO,CAC9C+B,MAAOC,EAAMC,oBACbC,KAAMC,EAAKC,cACXC,cAAeC,EAAQC,cACvBC,aAAcF,EAAQG,oBAGVC,EAAmBC,EAAU3C,OAAO,CAChD4C,cAAeC,EAAeC,uBAC9BC,mBAAoBF,EAAeC,uBACnCE,qBAAsBH,EAAeC,uBACrCG,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,gBAAiBP,EAAeC,uBAChCO,WAAW,EACXC,cAAc,EACdC,YAAaV,EAAeC,uBAC5BU,iBAAiB,EACjBC,uBAAuB,EACvBC,WAAW,IAGCC,EAAyBC,EAAgB5D,OAAO,CAC5D6D,iBAAiB,EACjBC,iBAAkBjB,EAAeC,uBACjCiB,gBAAiBlB,EAAeC,uBAChCkB,eAAe,IAGHC,EAAiBC,EAAQlE,OAAO,CAC5CmE,aAAa,EACbC,WAAYvB,EAAeC,uBAC3BuB,aAAa,EACbC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,IAGPC,EAAgB,CAC5B5E,KAAM,gBACN6E,QAASC,EACTC,KAAMC,EAAcC,eAAe,8lBAoBvBC,EAAY,CACxBlF,KAAM,YACN6E,QAASC,EACTC,KAAMC,EAAcC,eAAe,wmBAoBvBE,EAAY,CACxBnF,KAAM,YACN6E,QAASC,EACTC,KAAMC,EAAcC,eAAe,6zBAqBvBG,EAAY,CACxBpF,KAAM,YACN6E,QAASC,EACTC,KAAMC,EAAcC,eAAe,8xBAqBvBI,EAA4B,CACxCrF,KAAM,YACNsF,SAAUC,EAAcpF,OAAO,CAC9BqF,wBAAyBlE,EAASmE,aAAapE,GAC/CiE,SAAUI,EAAYT,eAAe,6ECpL1BU,EAAaC,EAAwE,CACjGC,UAAW,QACXC,OAAQ,CACP,CAAEC,MAAOC,EAAMC,QAASpB,QAAS,iBACjC,CAAEqB,SAAUC,EAASC,YAAY,OAAQL,MAAOC,EAAMK,cAI3CC,EAAiBC,EAAoE,CACjGV,UAAW,eACXW,GAAIL,EAASC,YAAY,SAGbK,EAAuBF,EAAoE,CACvGV,UAAW,qBACXW,GAAIL,EAASC,YAAY,SAGbM,GAAmBH,EAAoE,CACnGV,UAAW,iBACXW,GAAIL,EAASC,YAAY,SAGbO,GAA6B,CACzCC,OAAQ,CACPC,EAAwE,CACvEhB,UAAW,eACXiB,MAAO,gBACPC,aAAc,yNACdjB,OAAQ,CAGP,CAAE9F,KAAM,QAAS+F,MAAOiB,EAAavF,OACrC,CAAEzB,KAAM,MAAO+F,MAAOiB,EAAaC,QAGrCJ,EAAuE,CACtEhB,UAAW,cACXiB,MAAO,gBACPC,aAAc,yCACdjB,OAAQ,CACP,CAAE9F,KAAM,OAAQ+F,MAAOmB,EAAYC,SACnC,CAAEnH,KAAM,iBAAkB+F,MAAOmB,EAAYE,WAC7C,CAAEpH,KAAM,aAAc+F,MAAOmB,EAAYG,gBC/BtC,MAAMC,WAA0BC,EACtC,WAAAC,CAAYC,EAAyBC,GACpCC,MAAMF,EAAYC,EAAQ,CACzBE,SAAU,uBACVC,UAAW,SAEXC,YAAa,GAIbC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAGNC,gBAAiBR,EAAKG,eAEtBM,aAAc,CACbT,EAAKU,WACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,aACLJ,EAAKK,cACLL,EAAKM,eACLN,EAAKO,SAENK,mBAAqBlB,IAChB,IAAAmB,EAAQ,IAAIC,EAGT,OAFCD,EAAAA,EAAME,QAAQf,EAAKI,aAAgD,EAAlCV,EAAOsB,aAAaC,YAAkBC,GAExE,CACNC,QAASN,EAAA,EAIXO,SAAU,CAETrE,KAAMsE,EAAkBtE,KAExBuE,UAAWR,EAAMS,QAAQ,CACxB,CAACvB,EAAKC,eAAgB,IACtB,CAACD,EAAKE,YAAa,IACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,cAAe,IACrB,CAACJ,EAAKK,eAAgB,IACtB,CAACL,EAAKM,gBAAiB,KACvB,CAACN,EAAKO,SAAU,IAGjBiB,SAAUC,EAEVnE,SAAUoE,EAEVP,QAASQ,EAAwB1J,KAEjC2J,YAAaC,EAEbC,UAAWC,EAEXC,WAAYC,EAAW9J,OAAO,IAE9B+J,gBAAiBC,EAEjBC,QAASC,GAIVC,iBAAkB,CACjBC,GAEDC,mBAAoB,CACnBC,EACAC,EACAC,IAGDC,eAAgBC,GAEhBC,wBAAyB,CACxBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEDC,wBAAyB,GAGzBC,YAAa,CACZ3E,OAAQ,CACP4E,EACAC,IAGFC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERzC,QAAS,CACRQ,GAEDkC,UAAW,CACVC,GAGD/G,KAAM,CACLgH,EACAC,EACAC,EACA5C,KAIJ"}