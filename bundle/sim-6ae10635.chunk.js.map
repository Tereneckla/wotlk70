{"version":3,"file":"sim-6ae10635.chunk.js","sources":["../../../ui/smite_priest/presets.ts","../../../ui/smite_priest/inputs.ts","../../../ui/smite_priest/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { RaidBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { UnitReference } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\n\r\nimport {\r\n\tSmitePriest_Rotation as Rotation,\r\n\tSmitePriest_Options as Options,\r\n\tPriestMajorGlyph as MajorGlyph,\r\n\tPriestMinorGlyph as MinorGlyph,\r\n} from '../core/proto/priest.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const StandardTalents = {\r\n\tname: 'Standard',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '05332031013005023310001-005551002020152-00502',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfSmite,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfShadowWordPain,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfShadowWordDeath,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFortitude,\r\n\t\t\tminor2: MinorGlyph.GlyphOfShadowfiend,\r\n\t\t\tminor3: MinorGlyph.GlyphOfFading,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = Rotation.create({\r\n\tuseDevouringPlague: true,\r\n\tuseShadowWordDeath: false,\r\n\tuseMindBlast: false,\r\n});\r\nexport const ROTATION_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Legacy Default',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: Rotation.toJsonString(DefaultRotation),\r\n\t}),\r\n}\r\nexport const ROTATION_PRESET_APL = {\r\n\tname: 'APL',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: Rotation.toJsonString(Rotation.create()),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n      \t\t\"type\": \"TypeAPL\",\r\n      \t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n      \t\t],\r\n      \t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"dotIsActive\":{\"spellId\":{\"spellId\":48135}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellCastTime\":{\"spellId\":{\"spellId\":48123}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":48135}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":14751}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"dotIsActive\":{\"spellId\":{\"spellId\":48135}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellCastTime\":{\"spellId\":{\"spellId\":48123}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":48135}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":48123}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":48300}}}}},\"castSpell\":{\"spellId\":{\"spellId\":48300}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":48125}}}}},\"castSpell\":{\"spellId\":{\"spellId\":48125}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48135}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":48135}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48135}}},\"rhs\":{\"const\":{\"val\":\"50ms\"}}}}]}},\"wait\":{\"duration\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":48135}}}}}},\r\n\t\t\t\t{\"hide\":true,\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":59000}}},\"castSpell\":{\"spellId\":{\"spellId\":48123}}}},\r\n\t\t\t\t{\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":53007}}}},\r\n\t\t\t\t{\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48158}}}},\r\n\t\t\t\t{\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48127}}}},\r\n\t\t\t\t{\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"tag\":3,\"spellId\":48156}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48123}}}}\r\n      \t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const DefaultOptions = Options.create({\r\n\tuseInnerFire: true,\r\n\tuseShadowfiend: true,\r\n\r\n\tpowerInfusionTarget: UnitReference.create(),\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfTheFrostWyrm,\r\n\tfood: Food.FoodFishFeast,\r\n\tdefaultPotion: Potions.RunicManaInjector,\r\n\tprepopPotion: Potions.PotionOfWildMagic,\r\n});\r\n\r\nexport const DefaultRaidBuffs = RaidBuffs.create({\r\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\tarcaneBrilliance: true,\r\n\tdivineSpirit: true,\r\n\ttotemOfWrath: true,\r\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\twrathOfAirTotem: true,\r\n\tsanctifiedRetribution: true,\r\n\tbloodlust: true,\r\n});\r\n\r\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\r\n\tblessingOfKings: true,\r\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\tvampiricTouch: true,\r\n});\r\n\r\nexport const DefaultDebuffs = Debuffs.create({\r\n\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\tebonPlaguebringer: true,\r\n\theartOfTheCrusader: true,\r\n\tjudgementOfWisdom: true,\r\n});\r\n\r\nexport const PRERAID_PRESET = {\r\n\tname: 'Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42553,\"enchant\":3820,\"gems\":[41333,40014]},\r\n\t\t{\"id\":40680},\r\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[42144,40014]},\r\n\t\t{\"id\":41610,\"enchant\":3859},\r\n\t\t{\"id\":43792,\"enchant\":1144,\"gems\":[42144,40049]},\r\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":39285,\"enchant\":3246,\"gems\":[40014,0]},\r\n\t\t{\"id\":40696,\"gems\":[40049,39998]},\r\n\t\t{\"id\":37854,\"enchant\":3719},\r\n\t\t{\"id\":44202,\"enchant\":3826,\"gems\":[40026]},\r\n\t\t{\"id\":43253,\"gems\":[42144]},\r\n\t\t{\"id\":39250},\r\n\t\t{\"id\":37835},\r\n\t\t{\"id\":37873},\r\n\t\t{\"id\":41384,\"enchant\":3834},\r\n\t\t{\"id\":40698},\r\n\t\t{\"id\":37177}\r\n\t]}`),\r\n};\r\n\r\nexport const P1_PRESET = {\r\n\tname: 'P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40562,\"enchant\":3820,\"gems\":[41333,42144]},\r\n\t\t{\"id\":44661,\"gems\":[39998]},\r\n\t\t{\"id\":40459,\"enchant\":3810,\"gems\":[42144]},\r\n\t\t{\"id\":44005,\"enchant\":3859,\"gems\":[42144]},\r\n\t\t{\"id\":40234,\"enchant\":1144,\"gems\":[39998,39998]},\r\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":40454,\"enchant\":3604,\"gems\":[40049,0]},\r\n\t\t{\"id\":40561,\"enchant\":3601,\"gems\":[39998]},\r\n\t\t{\"id\":40560,\"enchant\":3719},\r\n\t\t{\"id\":40558,\"enchant\":3826},\r\n\t\t{\"id\":40719},\r\n\t\t{\"id\":40399},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":40432},\r\n\t\t{\"id\":40395,\"enchant\":3834},\r\n\t\t{\"id\":40273},\r\n\t\t{\"id\":39712}\r\n\t]}`),\r\n};\r\n","import { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\r\n\tfieldName: 'powerInfusionTarget',\r\n\tid: ActionId.fromSpellId(10060),\r\n\textraCssClasses: [\r\n\t\t'within-raid-sim-hide',\r\n\t],\r\n\tgetValue: (player: Player<Spec.SpecSmitePriest>) => player.getSpecOptions().powerInfusionTarget?.type == UnitType.Player,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecSmitePriest>, newValue: boolean) => {\r\n\t\tconst newOptions = player.getSpecOptions();\r\n\t\tnewOptions.powerInfusionTarget = UnitReference.create({\r\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\r\n\t\t\tindex: 0,\r\n\t\t});\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t},\r\n});\r\n\r\nexport const InnerFire = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\r\n\tfieldName: 'useInnerFire',\r\n\tid: ActionId.fromSpellId(48168),\r\n});\r\n\r\nexport const Shadowfiend = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecSmitePriest>({\r\n\tfieldName: 'useShadowfiend',\r\n\tid: ActionId.fromSpellId(34433),\r\n});\r\n\r\nexport const SmitePriestRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\r\n\t\t\tfieldName: 'useDevouringPlague',\r\n\t\t\tlabel: 'Use Devouring Plague',\r\n\t\t\tlabelTooltip: 'Use Devouring Plague whenever its not active.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\r\n\t\t\tfieldName: 'useShadowWordDeath',\r\n\t\t\tlabel: 'Use Shadow Word: Death',\r\n\t\t\tlabelTooltip: 'Use Shadow Word: Death whenever off CD.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\r\n\t\t\tfieldName: 'useMindBlast',\r\n\t\t\tlabel: 'Use Mind Blast',\r\n\t\t\tlabelTooltip: 'Use Mind Blast whenever off CD.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecSmitePriest>({\r\n\t\t\tfieldName: 'memeDream',\r\n\t\t\tlabel: 'Meme Dream',\r\n\t\t\tlabelTooltip: 'Assumes 2nd Smite Priest in raid, so just spams HF + Smite with permanent HF uptime.',\r\n\t\t\textraCssClasses: ['within-raid-sim-hide'],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecSmitePriest>({\r\n\t\t\tfieldName: 'allowedHolyFireDelayMs',\r\n\t\t\tlabel: 'Allowed Delay for HF',\r\n\t\t\tlabelTooltip: 'Time, in milliseconds, the player is allowed to wait for Holy Fire if it is about to come off CD.',\r\n\t\t}),\r\n\t],\r\n};\r\n","import { PartyBuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat } from '../core/proto/common.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\n\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\n\r\nimport * as SmitePriestInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class SmitePriestSimUI extends IndividualSimUI<Spec.SpecSmitePriest> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecSmitePriest>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'smite-priest-sim-ui',\r\n\t\t\tcssScheme: 'priest',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatSpellPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecSmitePriest>) => {\r\n\t\t\t\tlet stats = new Stats();\r\n\t\t\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttalents: stats,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 0.38,\r\n\t\t\t\t\t[Stat.StatSpirit]: 0.38,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 1.65,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.32,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.78,\r\n\t\t\t\t\t[Stat.StatMP5]: 0.35,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.StandardTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\r\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\r\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tSmitePriestInputs.SelfPowerInfusion,\r\n\t\t\t\tSmitePriestInputs.InnerFire,\r\n\t\t\t\tSmitePriestInputs.Shadowfiend,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: SmitePriestInputs.SmitePriestRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.StandardTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_APL,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PRERAID_PRESET,\r\n\t\t\t\t\tPresets.P1_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["StandardTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfSmite","major2","GlyphOfShadowWordPain","major3","GlyphOfShadowWordDeath","minor1","MinorGlyph","GlyphOfFortitude","minor2","GlyphOfShadowfiend","minor3","GlyphOfFading","DefaultRotation","Rotation","useDevouringPlague","useShadowWordDeath","useMindBlast","ROTATION_PRESET_LEGACY_DEFAULT","rotation","SavedRotation","specRotationOptionsJson","toJsonString","ROTATION_PRESET_APL","APLRotation","fromJsonString","DefaultOptions","Options","useInnerFire","useShadowfiend","powerInfusionTarget","UnitReference","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","defaultPotion","Potions","RunicManaInjector","prepopPotion","PotionOfWildMagic","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","arcaneBrilliance","divineSpirit","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","faerieFire","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","PRERAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","P1_PRESET","SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","type","UnitType","Player","setValue","eventID","newValue","newOptions","Unknown","index","setSpecOptions","InnerFire","Shadowfiend","SmitePriestRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","label","labelTooltip","InputHelpers.makeRotationNumberInput","SmitePriestSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","SmitePriestInputs.SelfPowerInfusion","SmitePriestInputs.InnerFire","SmitePriestInputs.Shadowfiend","rotationInputs","SmitePriestInputs.SmitePriestRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_LEGACY_DEFAULT","Presets.ROTATION_PRESET_APL","Presets.PRERAID_PRESET"],"mappings":"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"}