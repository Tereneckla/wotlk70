{"version":3,"file":"sim-e2b94d29.chunk.js","sources":["../../../ui/restoration_shaman/presets.ts","../../../ui/restoration_shaman/inputs.ts","../../../ui/restoration_shaman/sim.ts"],"sourcesContent":["import { Consumes } from '../core/proto/common.js';\r\n\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { SavedTalents } from '../core/proto/ui.js';\r\n\r\nimport {\r\n\tRestorationShaman_Rotation as RestorationShamanRotation,\r\n\tRestorationShaman_Options as RestorationShamanOptions,\r\n\tShamanShield,\r\n\tShamanMajorGlyph,\r\n\tShamanMinorGlyph,\r\n\tShamanHealSpell,\r\n} from '../core/proto/shaman.js';\r\n\r\nimport {\r\n\tAirTotem,\r\n\tEarthTotem,\r\n\tFireTotem,\r\n\tWaterTotem,\r\n\tShamanTotems,\r\n} from '../core/proto/shaman.js';\r\n\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const TankHealingTalents = {\r\n\tname: 'Tank Healing',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-30205033-05005331335010501122331251',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\r\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\r\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfLesserHealingWave,\r\n\t\t\tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\r\n\t\t\tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\r\n\t\t\tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\r\n\t\t}),\r\n\t}),\r\n};\r\nexport const RaidHealingTalents = {\r\n\tname: 'Raid Healing',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-3020503-50005331335310501122331251',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfChainHeal,\r\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfEarthShield,\r\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfEarthlivingWeapon,\r\n\t\t\tminor2: ShamanMinorGlyph.GlyphOfWaterShield,\r\n\t\t\tminor1: ShamanMinorGlyph.GlyphOfRenewedLife,\r\n\t\t\tminor3: ShamanMinorGlyph.GlyphOfGhostWolf,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = RestorationShamanRotation.create({\r\n\ttotems: ShamanTotems.create({\r\n\t\tearth: EarthTotem.StrengthOfEarthTotem,\r\n\t\tair: AirTotem.WrathOfAirTotem,\r\n\t\tfire: FireTotem.FlametongueTotem,\r\n\t\twater: WaterTotem.HealingStreamTotem,\r\n\t}),\r\n\tuseEarthShield: true,\r\n\tuseRiptide: true,\r\n});\r\n\r\nexport const DefaultOptions = RestorationShamanOptions.create({\r\n\tshield: ShamanShield.WaterShield,\r\n\tbloodlust: true,\r\n\tearthShieldPPM: 0,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tdefaultPotion: Potions.RunicManaInjector,\r\n\tflask: Flask.FlaskOfTheFrostWyrm,\r\n\tfood: Food.FoodFishFeast,\r\n});\r\n\r\nexport const PRE_RAID_PRESET = {\r\n\tname: 'Pre-raid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42555,\"enchant\":3820,\"gems\":[41401,40017]},\r\n\t\t{\"id\":40681},\r\n\t\t{\"id\":37875,\"enchant\":3838,\"gems\":[40017]},\r\n\t\t{\"id\":37291,\"enchant\":3859},\r\n\t\t{\"id\":44180,\"enchant\":2381},\r\n\t\t{\"id\":37788,\"enchant\":3758,\"gems\":[0]},\r\n\t\t{\"id\":37623,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40693,\"gems\":[40051,0]},\r\n\t\t{\"id\":37791,\"enchant\":3721},\r\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40105]},\r\n\t\t{\"id\":44283},\r\n\t\t{\"id\":37694},\r\n\t\t{\"id\":37111},\r\n\t\t{\"id\":37657},\r\n\t\t{\"id\":37169,\"enchant\":3834},\r\n\t\t{\"id\":40700,\"enchant\":1128},\r\n\t\t{\"id\":40709}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_PRESET = {\r\n\tname: 'P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":40510,\"enchant\":3820,\"gems\":[41401,39998]},\r\n        {\"id\":44662,\"gems\":[40051]},\r\n        {\"id\":40513,\"enchant\":3810,\"gems\":[39998]},\r\n        {\"id\":44005,\"enchant\":3831,\"gems\":[40027]},\r\n        {\"id\":40508,\"enchant\":2381,\"gems\":[39998,40051]},\r\n        {\"id\":40209,\"enchant\":2332,\"gems\":[0]},\r\n        {\"id\":40564,\"enchant\":3246,\"gems\":[0]},\r\n        {\"id\":40327,\"gems\":[39998]},\r\n        {\"id\":40512,\"enchant\":3721,\"gems\":[39998,40027]},\r\n        {\"id\":39734,\"enchant\":3244},\r\n        {\"id\":40399},\r\n        {\"id\":40375},\r\n        {\"id\":37111},\r\n        {\"id\":40685},\r\n        {\"id\":40395,\"enchant\":3834},\r\n        {\"id\":40401,\"enchant\":1128},\r\n        {\"id\":40709}\r\n      ]}`),\r\n};\r\n\r\nexport const P2_PRESET = {\r\n\tname: 'P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":46201,\"enchant\":3820,\"gems\":[41401,40027]},\r\n        {\"id\":45443,\"gems\":[40027]},\r\n        {\"id\":46204,\"enchant\":3810,\"gems\":[45883]},\r\n        {\"id\":45486,\"enchant\":3831,\"gems\":[40051]},\r\n        {\"id\":45867,\"enchant\":2381,\"gems\":[40051,39998]},\r\n        {\"id\":45460,\"enchant\":2332,\"gems\":[40027,0]},\r\n        {\"id\":46199,\"enchant\":3246,\"gems\":[40051,0]},\r\n        {\"id\":45151,\"gems\":[39998]},\r\n        {\"id\":46202,\"enchant\":3721,\"gems\":[39998,40027]},\r\n        {\"id\":45615,\"enchant\":3232,\"gems\":[39998,40027]},\r\n        {\"id\":45614,\"gems\":[40051]},\r\n        {\"id\":46046,\"gems\":[40051]},\r\n        {\"id\":45535},\r\n        {\"id\":45466},\r\n        {\"id\":46017,\"enchant\":3834},\r\n        {\"id\":45470,\"enchant\":1128,\"gems\":[40027]},\r\n        {\"id\":45114}\r\n      ]}`),\r\n};\r\n","import { Spec } from '../core/proto/common.js';\r\nimport { Player } from '../core/player.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport {\r\n\tAirTotem,\r\n\tRestorationShaman_Options as ShamanOptions,\r\n\tShamanHealSpell,\r\n\tShamanShield,\r\n} from '../core/proto/shaman.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const Bloodlust = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecRestorationShaman>({\r\n\tfieldName: 'bloodlust',\r\n\tid: ActionId.fromSpellId(2825),\r\n});\r\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRestorationShaman, ShamanShield>({\r\n\tfieldName: 'shield',\r\n\tvalues: [\r\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\r\n\t\t{ actionId: ActionId.fromSpellId(33736), value: ShamanShield.WaterShield },\r\n\t\t{ actionId: ActionId.fromSpellId(25472), value: ShamanShield.LightningShield },\r\n\t],\r\n});\r\n\r\n\r\nexport const PrimaryHealInput = InputHelpers.makeRotationEnumInput<Spec.SpecRestorationShaman, ShamanHealSpell>({\r\n\tfieldName: 'primaryHeal',\r\n\tlabel: 'Primary Heal',\r\n\tlabelTooltip: 'Set to \\'AutoHeal\\', to automatically swap based on best heal.',\r\n\tvalues: [\r\n\t\t{\r\n\t\t\tname: \"Auto Heal\",\r\n\t\t\tvalue: ShamanHealSpell.AutoHeal\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Lesser Healing Wave\",\r\n\t\t\tvalue: ShamanHealSpell.LesserHealingWave // actionId: ActionId.fromSpellId(49276),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Healing Wave\",\r\n\t\t\tvalue: ShamanHealSpell.HealingWave // actionId: ActionId.fromSpellId(49273),\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Chain Heal\",\r\n\t\t\tvalue: ShamanHealSpell.ChainHeal // actionId: ActionId.fromSpellId(55459),\r\n\t\t},\r\n\t]\r\n});\r\n\r\n\r\nexport const UseRiptide = InputHelpers.makeRotationBooleanInput<Spec.SpecRestorationShaman>({\r\n\tfieldName: 'useRiptide',\r\n\tlabel: 'Use Riptide',\r\n\tlabelTooltip: 'Causes riptide to be cast on primary target when CD is available and not already on.',\r\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().riptide,\r\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const UseEarthShield = InputHelpers.makeRotationBooleanInput<Spec.SpecRestorationShaman>({\r\n\tfieldName: 'useEarthShield',\r\n\tlabel: 'Use Earth Shield',\r\n\tlabelTooltip: 'Causes earth shield to be cast on healing target.',\r\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().earthShield,\r\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const TriggerEarthShield = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRestorationShaman>({\r\n\tfieldName: 'earthShieldPPM',\r\n\tlabel: 'Earth Shield PPM',\r\n\tlabelTooltip: 'How many times Earth Shield should be triggered per minute.',\r\n\tshowWhen: (player: Player<Spec.SpecRestorationShaman>) => player.getTalents().earthShield && player.getRotation().useEarthShield,\r\n\tchangeEmitter: (player: Player<Spec.SpecRestorationShaman>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const RestorationShamanRotationConfig = {\r\n\tinputs: [\r\n\t\tPrimaryHealInput,\r\n\t\tUseRiptide,\r\n\t\tUseEarthShield,\r\n\t\tTriggerEarthShield,\r\n\t],\r\n};\r\n\r\n","import { RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\nimport { TotemsSection } from '../core/components/totem_inputs.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\n\r\nimport * as ShamanInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\nimport { shamanGlyphsConfig } from '../core/talents/shaman.js';\r\n\r\nexport class RestorationShamanSimUI extends IndividualSimUI<Spec.SpecRestorationShaman> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationShaman>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'restoration-shaman-sim-ui',\r\n\t\t\tcssScheme: 'shaman',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\t\t\twarnings: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatSpellPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatMana,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecRestorationShaman>) => {\r\n\t\t\t\tlet stats = new Stats();\r\n\t\t\t\tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttalents: stats,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 0.22,\r\n\t\t\t\t\t[Stat.StatSpirit]: 0.05,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.67,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 1.29,\r\n\t\t\t\t\t[Stat.StatMP5]: 0.08,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.RaidHealingTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tarcaneBrilliance: true,\r\n\t\t\t\t\tdivineSpirit: true,\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfWisdom: 2,\r\n\t\t\t\t\tvampiricTouch: true,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tjudgementOfWisdom: true,\r\n\t\t\t\t\tmisery: true,\r\n\t\t\t\t\tcurseOfElements: true,\r\n\t\t\t\t\tshadowMastery: true,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tShamanInputs.ShamanShieldInput,\r\n\t\t\t\tShamanInputs.Bloodlust,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: ShamanInputs.RestorationShamanRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tcustomSections: [\r\n\t\t\t\tTotemsSection,\r\n\t\t\t],\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.RaidHealingTalents,\r\n\t\t\t\t\tPresets.TankHealingTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PRE_RAID_PRESET,\r\n\t\t\t\t\tPresets.P1_PRESET,\r\n\t\t\t\t\tPresets.P2_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["TankHealingTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfEarthlivingWeapon","major2","GlyphOfEarthShield","major3","GlyphOfLesserHealingWave","minor2","ShamanMinorGlyph","GlyphOfWaterShield","minor1","GlyphOfRenewedLife","minor3","GlyphOfGhostWolf","RaidHealingTalents","GlyphOfChainHeal","DefaultRotation","RestorationShamanRotation","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WrathOfAirTotem","fire","FireTotem","FlametongueTotem","water","WaterTotem","HealingStreamTotem","useEarthShield","useRiptide","DefaultOptions","RestorationShamanOptions","shield","ShamanShield","WaterShield","bloodlust","earthShieldPPM","DefaultConsumes","Consumes","defaultPotion","Potions","RunicManaInjector","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","PRE_RAID_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","fromJsonString","P1_PRESET","P2_PRESET","Bloodlust","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","NoShield","actionId","LightningShield","RestorationShamanRotationConfig","inputs","InputHelpers.makeRotationEnumInput","label","labelTooltip","ShamanHealSpell","AutoHeal","LesserHealingWave","HealingWave","ChainHeal","InputHelpers.makeRotationBooleanInput","showWhen","player","getTalents","riptide","changeEmitter","TypedEvent","onAny","specOptionsChangeEmitter","rotationChangeEmitter","talentsChangeEmitter","earthShield","InputHelpers.makeSpecOptionsNumberInput","getRotation","RestorationShamanSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","Presets.P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","rotation","Presets.DefaultRotation","Presets.RaidHealingTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","sanctifiedRetribution","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","vampiricTouch","debuffs","Debuffs","faerieFire","judgementOfWisdom","misery","curseOfElements","shadowMastery","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.Bloodlust","rotationInputs","ShamanInputs.RestorationShamanRotationConfig","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.TankHealingTalents","Presets.PRE_RAID_PRESET","Presets.P2_PRESET"],"mappings":"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"}