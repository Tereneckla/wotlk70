import{dY as e,L as t,m as a,n,fu as i,et as s,eu as l,ev as r,ew as o,ex as d,fv as h,eq as m,E as c,co as p,cj as g,cm as S,bD as f,A as u,fw as y,T as b,a2 as E,F as v,be as O,aD as P,bn as T,w as W,B as w,aE as H}from"./detailed_results-7b150079.chunk.js";import{B as C,m as I,u as G,a as j,b as M,j as R,I as k,T as A}from"./individual_sim_ui-7ca50b32.chunk.js";import{T as B}from"./totem_inputs-27ceb772.chunk.js";const F={name:"Tank Healing",data:e.create({talentsString:"-30205033-05005331335010501122331251",glyphs:t.create({major1:a.GlyphOfEarthlivingWeapon,major2:a.GlyphOfEarthShield,major3:a.GlyphOfLesserHealingWave,minor2:n.GlyphOfWaterShield,minor1:n.GlyphOfRenewedLife,minor3:n.GlyphOfGhostWolf})})},N={name:"Raid Healing",data:e.create({talentsString:"-3020503-50005331335310501122331251",glyphs:t.create({major1:a.GlyphOfChainHeal,major2:a.GlyphOfEarthShield,major3:a.GlyphOfEarthlivingWeapon,minor2:n.GlyphOfWaterShield,minor1:n.GlyphOfRenewedLife,minor3:n.GlyphOfGhostWolf})})},D=i.create({totems:s.create({earth:l.StrengthOfEarthTotem,air:r.WrathOfAirTotem,fire:o.FlametongueTotem,water:d.HealingStreamTotem}),useEarthShield:!0,useRiptide:!0}),L=h.create({shield:m.WaterShield,bloodlust:!0,earthShieldPPM:0}),x=c.create({defaultPotion:p.RunicManaInjector,flask:g.FlaskOfTheFrostWyrm,food:S.FoodFishFeast}),_={name:"Pre-raid Preset",tooltip:C,gear:f.fromJsonString('{"items": [\n\t\t{"id":42555,"enchant":3820,"gems":[41401,40017]},\n\t\t{"id":40681},\n\t\t{"id":37875,"enchant":3838,"gems":[40017]},\n\t\t{"id":37291,"enchant":3859},\n\t\t{"id":44180,"enchant":2381},\n\t\t{"id":37788,"enchant":3758,"gems":[0]},\n\t\t{"id":37623,"enchant":3604,"gems":[0]},\n\t\t{"id":40693,"gems":[40051,0]},\n\t\t{"id":37791,"enchant":3721},\n\t\t{"id":44202,"enchant":3606,"gems":[40105]},\n\t\t{"id":44283},\n\t\t{"id":37694},\n\t\t{"id":37111},\n\t\t{"id":37657},\n\t\t{"id":37169,"enchant":3834},\n\t\t{"id":40700,"enchant":1128},\n\t\t{"id":40709}\n  ]}')},J={name:"P1 Preset",tooltip:C,gear:f.fromJsonString('{"items": [\n        {"id":40510,"enchant":3820,"gems":[41401,39998]},\n        {"id":44662,"gems":[40051]},\n        {"id":40513,"enchant":3810,"gems":[39998]},\n        {"id":44005,"enchant":3831,"gems":[40027]},\n        {"id":40508,"enchant":2381,"gems":[39998,40051]},\n        {"id":40209,"enchant":2332,"gems":[0]},\n        {"id":40564,"enchant":3246,"gems":[0]},\n        {"id":40327,"gems":[39998]},\n        {"id":40512,"enchant":3721,"gems":[39998,40027]},\n        {"id":39734,"enchant":3244},\n        {"id":40399},\n        {"id":40375},\n        {"id":37111},\n        {"id":40685},\n        {"id":40395,"enchant":3834},\n        {"id":40401,"enchant":1128},\n        {"id":40709}\n      ]}')},U={name:"P2 Preset",tooltip:C,gear:f.fromJsonString('{"items": [\n        {"id":46201,"enchant":3820,"gems":[41401,40027]},\n        {"id":45443,"gems":[40027]},\n        {"id":46204,"enchant":3810,"gems":[45883]},\n        {"id":45486,"enchant":3831,"gems":[40051]},\n        {"id":45867,"enchant":2381,"gems":[40051,39998]},\n        {"id":45460,"enchant":2332,"gems":[40027,0]},\n        {"id":46199,"enchant":3246,"gems":[40051,0]},\n        {"id":45151,"gems":[39998]},\n        {"id":46202,"enchant":3721,"gems":[39998,40027]},\n        {"id":45615,"enchant":3232,"gems":[39998,40027]},\n        {"id":45614,"gems":[40051]},\n        {"id":46046,"gems":[40051]},\n        {"id":45535},\n        {"id":45466},\n        {"id":46017,"enchant":3834},\n        {"id":45470,"enchant":1128,"gems":[40027]},\n        {"id":45114}\n      ]}')},q=I({fieldName:"bloodlust",id:u.fromSpellId(2825)}),K=G({fieldName:"shield",values:[{value:m.NoShield,tooltip:"No Shield"},{actionId:u.fromSpellId(33736),value:m.WaterShield},{actionId:u.fromSpellId(25472),value:m.LightningShield}]}),Y={inputs:[j({fieldName:"primaryHeal",label:"Primary Heal",labelTooltip:"Set to 'AutoHeal', to automatically swap based on best heal.",values:[{name:"Auto Heal",value:y.AutoHeal},{name:"Lesser Healing Wave",value:y.LesserHealingWave},{name:"Healing Wave",value:y.HealingWave},{name:"Chain Heal",value:y.ChainHeal}]}),M({fieldName:"useRiptide",label:"Use Riptide",labelTooltip:"Causes riptide to be cast on primary target when CD is available and not already on.",showWhen:e=>e.getTalents().riptide,changeEmitter:e=>b.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])}),M({fieldName:"useEarthShield",label:"Use Earth Shield",labelTooltip:"Causes earth shield to be cast on healing target.",showWhen:e=>e.getTalents().earthShield,changeEmitter:e=>b.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])}),R({fieldName:"earthShieldPPM",label:"Earth Shield PPM",labelTooltip:"How many times Earth Shield should be triggered per minute.",showWhen:e=>e.getTalents().earthShield&&e.getRotation().useEarthShield,changeEmitter:e=>b.onAny([e.specOptionsChangeEmitter,e.rotationChangeEmitter,e.talentsChangeEmitter])})]};class z extends k{constructor(e,t){super(e,t,{cssClass:"restoration-shaman-sim-ui",cssScheme:"shaman",knownIssues:[],warnings:[],epStats:[E.StatIntellect,E.StatSpirit,E.StatSpellPower,E.StatSpellCrit,E.StatSpellHaste,E.StatMP5],epReferenceStat:E.StatSpellPower,displayStats:[E.StatHealth,E.StatMana,E.StatStamina,E.StatIntellect,E.StatSpirit,E.StatSpellPower,E.StatSpellCrit,E.StatSpellHaste,E.StatMP5],modifyDisplayStats:e=>{let t=new v;return t=t.addStat(E.StatSpellCrit,1*e.getTalents().tidalMastery*O),{talents:t}},defaults:{gear:J.gear,epWeights:v.fromMap({[E.StatIntellect]:.22,[E.StatSpirit]:.05,[E.StatSpellPower]:1,[E.StatSpellCrit]:.67,[E.StatSpellHaste]:1.29,[E.StatMP5]:.08}),consumes:x,rotation:D,talents:N.data,specOptions:L,raidBuffs:P.create({arcaneBrilliance:!0,divineSpirit:!0,giftOfTheWild:T.TristateEffectImproved,moonkinAura:T.TristateEffectImproved,sanctifiedRetribution:!0}),partyBuffs:W.create({}),individualBuffs:w.create({blessingOfKings:!0,blessingOfWisdom:2,vampiricTouch:!0}),debuffs:H.create({faerieFire:T.TristateEffectImproved,judgementOfWisdom:!0,misery:!0,curseOfElements:!0,shadowMastery:!0})},playerIconInputs:[K,q],rotationInputs:Y,includeBuffDebuffInputs:[],excludeBuffDebuffInputs:[],otherInputs:{inputs:[A]},customSections:[B],encounterPicker:{showExecuteProportion:!1},presets:{talents:[N,F],gear:[_,J,U]}})}}export{D,J as P,z as R,N as a,L as b,x as c,U as d};
//# sourceMappingURL=sim-e2b94d29.chunk.js.map
