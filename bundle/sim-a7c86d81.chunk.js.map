{"version":3,"file":"sim-a7c86d81.chunk.js","sources":["../../../ui/rogue/presets.ts","../../../ui/rogue/inputs.ts","../../../ui/rogue/sim.ts"],"sourcesContent":["import { Conjured, Consumes, EquipmentSpec, Flask, Food, Glyphs, Potions } from '../core/proto/common.js';\r\nimport { Player } from '../core/player.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\n\r\nimport {\r\n\tRogue_Options as RogueOptions,\r\n\tRogue_Options_PoisonImbue as Poison,\r\n\tRogue_Rotation as RogueRotation,\r\n\tRogue_Rotation_AssassinationPriority,\r\n\tRogue_Rotation_CombatBuilder,\r\n\tRogue_Rotation_CombatPriority,\r\n\tRogue_Rotation_Frequency,\r\n\tRogue_Rotation_SubtletyBuilder,\r\n\tRogue_Rotation_SubtletyPriority,\r\n\tRogueMajorGlyph,\r\n} from '../core/proto/rogue.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const CombatHackTalents = {\r\n\tname: 'Combat Axes/Swords',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '00532010414-0252051000035015223100501251',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfKillingSpree,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfRupture,\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const CombatCQCTalents = {\r\n\tname: 'Combat Fists',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '00532010414-0252051050035010223100501251',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfKillingSpree,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfRupture,\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const AssassinationTalents137 = {\r\n\tname: 'Assassination 13/7',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005303104352100520103331051-005005003-502',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfHungerForBlood,\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const AssassinationTalents182 = {\r\n\tname: 'Assassination 18/2',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005303104352100520103331051-005005005003-2',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfHungerForBlood,\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const AssassinationTalentsBF = {\r\n\tname: 'Assassination Blade Flurry',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005303104352100520103231-005205005003001-501',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfMutilate,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfBladeFlurry,\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const SubtletyTalents = {\r\n\tname: 'Subtlety',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '30532010114--5022012030321121350115031151',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfEviscerate,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfRupture,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t})\r\n\t}),\r\n}\r\n\r\nexport const HemoSubtletyTalents = {\r\n\tname: 'Hemo Sub',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '30532010135--502201203032112135011503122',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: RogueMajorGlyph.GlyphOfEviscerate,\r\n\t\t\tmajor2: RogueMajorGlyph.GlyphOfRupture,\r\n\t\t\tmajor3: RogueMajorGlyph.GlyphOfTricksOfTheTrade,\r\n\t\t})\r\n\t}),\r\n}\r\n\r\nexport const DefaultRotation = RogueRotation.create({\r\n\texposeArmorFrequency: Rogue_Rotation_Frequency.Never,\r\n\tminimumComboPointsExposeArmor: 2,\r\n\ttricksOfTheTradeFrequency: Rogue_Rotation_Frequency.Maintain,\r\n\tassassinationFinisherPriority: Rogue_Rotation_AssassinationPriority.EnvenomRupture,\r\n\tcombatBuilder: Rogue_Rotation_CombatBuilder.SinisterStrike,\r\n\tcombatFinisherPriority: Rogue_Rotation_CombatPriority.RuptureEviscerate,\r\n\tsubtletyBuilder: Rogue_Rotation_SubtletyBuilder.Hemorrhage,\r\n\tsubtletyFinisherPriority: Rogue_Rotation_SubtletyPriority.SubtletyEviscerate,\r\n\tminimumComboPointsPrimaryFinisher: 4,\r\n\tminimumComboPointsSecondaryFinisher: 4,\r\n});\r\n\r\nexport const DefaultOptions = RogueOptions.create({\r\n\tmhImbue: Poison.DeadlyPoison,\r\n\tohImbue: Poison.InstantPoison,\r\n\tapplyPoisonsManually: false,\r\n\tstartingOverkillDuration: 20,\r\n\tvanishBreakTime: 0.1,\r\n\thonorOfThievesCritRate: 400,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tprepopPotion: Potions.PotionOfSpeed,\r\n\tdefaultConjured: Conjured.ConjuredRogueThistleTea,\r\n\tflask: Flask.FlaskOfEndlessRage,\r\n\tfood: Food.FoodMegaMammothMeal,\r\n});\r\n\r\nexport const ROTATION_APL_PRESET  = {\r\n\tname: 'Basic APL',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: RogueRotation.toJsonString(DefaultRotation),\r\n\t\trotation: APLRotation.fromJsonString('{ \"type\": \"TypeAPL\", \"priorityList\": [] }')\r\n\t}),\r\n};\r\n\r\nexport const P2_PRESET_ASSASSINATION = {\r\n\tname: 'P2 Assassination',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":46125,\"enchant\":3817,\"gems\":[41398,39999]},\r\n\t\t  {\"id\":45517,\"gems\":[39999]},\r\n\t\t  {\"id\":45245,\"enchant\":3808,\"gems\":[39999,39999]},\r\n\t\t  {\"id\":45461,\"enchant\":3605,\"gems\":[40053]},\r\n\t\t  {\"id\":45473,\"enchant\":3832,\"gems\":[40053,42702,39999]},\r\n\t\t  {\"id\":45611,\"enchant\":3845,\"gems\":[40053,0]},\r\n\t\t  {\"id\":46124,\"enchant\":3604,\"gems\":[40003,0]},\r\n\t\t  {\"id\":46095,\"enchant\":3599,\"gems\":[39999,39999,39999]},\r\n\t\t  {\"id\":45536,\"enchant\":3823,\"gems\":[39999,39999,39999]},\r\n\t\t  {\"id\":45564,\"enchant\":3606,\"gems\":[39999,39999]},\r\n\t\t  {\"id\":45608,\"gems\":[39999]},\r\n\t\t  {\"id\":45456,\"gems\":[39999]},\r\n\t\t  {\"id\":45609},\r\n\t\t  {\"id\":46038},\r\n\t\t  {\"id\":45484,\"enchant\":3789,\"gems\":[40003]},\r\n\t\t  {\"id\":45484,\"enchant\":3789,\"gems\":[40003]},\r\n\t\t  {\"id\":45570,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const P2_PRESET_COMBAT = {\r\n\tname: 'P2 Combat',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":46125,\"enchant\":3817,\"gems\":[41398,39999]},\r\n\t\t  {\"id\":45517,\"gems\":[39999]},\r\n\t\t  {\"id\":46127,\"enchant\":3808,\"gems\":[39999]},\r\n\t\t  {\"id\":45461,\"enchant\":3605,\"gems\":[40053]},\r\n\t\t  {\"id\":45473,\"enchant\":3832,\"gems\":[40053,42702,39999]},\r\n\t\t  {\"id\":45611,\"enchant\":3845,\"gems\":[40044,0]},\r\n\t\t  {\"id\":46043,\"enchant\":3604,\"gems\":[39999,40053,0]},\r\n\t\t  {\"id\":46095,\"enchant\":3599,\"gems\":[39999,39999,39999]},\r\n\t\t  {\"id\":45536,\"enchant\":3823,\"gems\":[39999,39999,39999]},\r\n\t\t  {\"id\":45564,\"enchant\":3606,\"gems\":[39999,39999]},\r\n\t\t  {\"id\":45608,\"gems\":[39999]},\r\n\t\t  {\"id\":46048,\"gems\":[39999]},\r\n\t\t  {\"id\":45609},\r\n\t\t  {\"id\":45931},\r\n\t\t  {\"id\":45132,\"enchant\":3789,\"gems\":[40053]},\r\n\t\t  {\"id\":45484,\"enchant\":3789,\"gems\":[40003]},\r\n\t\t  {\"id\":45296,\"gems\":[40053]}\r\n\t]}`),\r\n};\r\n\r\nexport const P3_PRESET_ASSASSINATION = {\r\n\tname: 'P3 Assassination',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t  {\"id\":48230,\"enchant\":3817,\"gems\":[41398,49110]},\r\n\t\t  {\"id\":47060,\"gems\":[40114]},\r\n\t\t  {\"id\":48228,\"enchant\":3808,\"gems\":[40114]},\r\n\t\t  {\"id\":47545,\"enchant\":3605,\"gems\":[40114]},\r\n\t\t  {\"id\":48232,\"enchant\":3832,\"gems\":[40114,40114]},\r\n\t\t  {\"id\":47155,\"enchant\":3845,\"gems\":[40114,40114,0]},\r\n\t\t  {\"id\":48231,\"enchant\":3604,\"gems\":[40114,0]},\r\n\t\t  {\"id\":47112,\"enchant\":3599,\"gems\":[40156,40114,40114]},\r\n\t\t  {\"id\":46975,\"enchant\":3823,\"gems\":[40118,40118,40118]},\r\n\t\t  {\"id\":47077,\"enchant\":3606,\"gems\":[40156,40114]},\r\n\t\t  {\"id\":47075,\"gems\":[40114]},\r\n\t\t  {\"id\":45608,\"gems\":[40114]},\r\n\t\t  {\"id\":47131},\r\n\t\t  {\"id\":45609},\r\n\t\t  {\"id\":46969,\"enchant\":3789,\"gems\":[40156]},\r\n\t\t  {\"id\":46969,\"enchant\":3789,\"gems\":[40156]},\r\n\t\t  {\"id\":47521,\"gems\":[40156]}\r\n\t\t]}`),\r\n};\r\n\r\nexport const P3_PRESET_COMBAT = {\r\n\tname: 'P3 Combat',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":48230,\"enchant\":3817,\"gems\":[41398,49110]},\r\n        {\"id\":47060,\"gems\":[40114]},\r\n        {\"id\":48228,\"enchant\":3808,\"gems\":[40114]},\r\n        {\"id\":47545,\"enchant\":3605,\"gems\":[40114]},\r\n        {\"id\":48232,\"enchant\":3832,\"gems\":[40114,40114]},\r\n        {\"id\":47155,\"enchant\":3845,\"gems\":[40114,40114,0]},\r\n        {\"id\":48231,\"enchant\":3604,\"gems\":[40114,0]},\r\n        {\"id\":47112,\"enchant\":3599,\"gems\":[40157,40114,40114]},\r\n        {\"id\":46975,\"enchant\":3823,\"gems\":[40114,40114,40114]},\r\n        {\"id\":47077,\"enchant\":3606,\"gems\":[40157,40114]},\r\n        {\"id\":47075,\"gems\":[40114]},\r\n        {\"id\":47934,\"gems\":[40157]},\r\n        {\"id\":47131},\r\n        {\"id\":45609},\r\n        {\"id\":47156,\"enchant\":3789,\"gems\":[40157]},\r\n        {\"id\":47001,\"enchant\":3789,\"gems\":[40157]},\r\n        {\"id\":47521,\"gems\":[40157]}\r\n\t]}`),\r\n};\r\n\r\nexport const PRERAID_PRESET_ASSASSINATION = {\r\n\tname: 'Pre-Raid Assassination',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42550,\"enchant\":3817,\"gems\":[41398,40058]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":43481,\"enchant\":3808},\r\n\t\t{\"id\":38614,\"enchant\":3605},\r\n\t\t{\"id\":39558,\"enchant\":3832,\"gems\":[40003,42702]},\r\n\t\t{\"id\":34448,\"enchant\":3845,\"gems\":[40003,0]},\r\n\t\t{\"id\":39560,\"enchant\":3604,\"gems\":[40058,0]},\r\n\t\t{\"id\":40694,\"gems\":[40003,40003]},\r\n\t\t{\"id\":37644,\"enchant\":3823},\r\n\t\t{\"id\":34575,\"enchant\":3606,\"gems\":[40003]},\r\n\t\t{\"id\":40586},\r\n\t\t{\"id\":37642},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":37856,\"enchant\":3789},\r\n\t\t{\"id\":37667,\"enchant\":3789},\r\n\t\t{\"id\":43612}\r\n  ]}`),\r\n};\r\n\r\nexport const PRERAID_PRESET_COMBAT = {\r\n\tname: 'Pre-Raid Combat',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42550,\"enchant\":3817,\"gems\":[41398,40014]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":37139,\"enchant\":3808,\"gems\":[39999]},\r\n\t\t{\"id\":34241,\"enchant\":3605,\"gems\":[40014]},\r\n\t\t{\"id\":39558,\"enchant\":3832,\"gems\":[39999,40014]},\r\n\t\t{\"id\":34448,\"enchant\":3845,\"gems\":[39999,0]},\r\n\t\t{\"id\":39560,\"enchant\":3604,\"gems\":[40014,0]},\r\n\t\t{\"id\":40694,\"gems\":[42702,39999]},\r\n\t\t{\"id\":37644,\"enchant\":3823},\r\n\t\t{\"id\":34575,\"enchant\":3606,\"gems\":[39999]},\r\n\t\t{\"id\":40586},\r\n\t\t{\"id\":37642},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":37693,\"enchant\":3789},\r\n\t\t{\"id\":37856,\"enchant\":3789},\r\n\t\t{\"id\":44504,\"gems\":[40053]}\r\n  ]}`),\r\n}\r\n\r\nexport const P1_PRESET_ASSASSINATION = {\r\n\tname: 'P1 Assassination',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":40499,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":44664,\"gems\":[40003]},\r\n\t\t{\"id\":40502,\"enchant\":3808,\"gems\":[40003]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":40539,\"enchant\":3832,\"gems\":[40003]},\r\n\t\t{\"id\":39765,\"enchant\":3845,\"gems\":[40003,0]},\r\n\t\t{\"id\":40496,\"enchant\":3604,\"gems\":[40053,0]},\r\n\t\t{\"id\":40260,\"gems\":[39999]},\r\n\t\t{\"id\":40500,\"enchant\":3823,\"gems\":[40003,40003]},\r\n\t\t{\"id\":39701,\"enchant\":3606},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":39714,\"enchant\":3789},\r\n\t\t{\"id\":40386,\"enchant\":3789},\r\n\t\t{\"id\":40385}\r\n  ]}`),\r\n}\r\n\r\nexport const P1_PRESET_HEMO_SUB = {\r\n\tname: \"P1 Hemo Sub\",\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":40499,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":44664,\"gems\":[40029]},\r\n\t\t{\"id\":40502,\"enchant\":3808,\"gems\":[40003]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":40539,\"enchant\":3832,\"gems\":[39999]},\r\n\t\t{\"id\":40186,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":40541,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40205,\"gems\":[40003]},\r\n\t\t{\"id\":44011,\"enchant\":3823,\"gems\":[40003,40034]},\r\n\t\t{\"id\":39701,\"enchant\":3606},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40256},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":40383,\"enchant\":3789},\r\n\t\t{\"id\":39714,\"enchant\":3789},\r\n\t\t{\"id\":40385}\r\n  ]}`),\r\n}\r\n\r\nexport const P1_PRESET_COMBAT = {\r\n\tname: 'P1 Combat',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40499,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":44664,\"gems\":[39999]},\r\n\t\t{\"id\":40502,\"enchant\":3808,\"gems\":[39999]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":40539,\"enchant\":3832,\"gems\":[39999]},\r\n\t\t{\"id\":39765,\"enchant\":3845,\"gems\":[39999,0]},\r\n\t\t{\"id\":40541,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40205,\"gems\":[39999]},\r\n\t\t{\"id\":44011,\"enchant\":3823,\"gems\":[39999,39999]},\r\n\t\t{\"id\":39701,\"enchant\":3606},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":40383,\"enchant\":3789},\r\n\t\t{\"id\":39714,\"enchant\":3789},\r\n\t\t{\"id\":40385}\r\n  ]}`),\r\n}\r\n\r\nexport const P2_PRESET_HEMO_SUB = {\r\n\tname: \"P2 Hemo Sub\",\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":46125,\"enchant\":3817,\"gems\":[41398,42143]},\r\n\t\t{\"id\":45517,\"gems\":[49110]},\r\n\t\t{\"id\":45245,\"enchant\":3808,\"gems\":[40023,40003]},\r\n\t\t{\"id\":45461,\"enchant\":3605,\"gems\":[40044]},\r\n\t\t{\"id\":45473,\"enchant\":3832,\"gems\":[40044,40023,40003]},\r\n\t\t{\"id\":45611,\"enchant\":3845,\"gems\":[40044,0]},\r\n\t\t{\"id\":46124,\"enchant\":3604,\"gems\":[39997,0]},\r\n\t\t{\"id\":46095,\"enchant\":3599,\"gems\":[42143,42143,39997]},\r\n\t\t{\"id\":45536,\"enchant\":3823,\"gems\":[40044,39997,40023]},\r\n\t\t{\"id\":45564,\"enchant\":3606,\"gems\":[40023,40003]},\r\n\t\t{\"id\":45608,\"gems\":[39997]},\r\n\t\t{\"id\":46048,\"gems\":[39997]},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":45931},\r\n\t\t{\"id\":45132,\"enchant\":3789,\"gems\":[40044]},\r\n\t\t{\"id\":45484,\"enchant\":3789,\"gems\":[39997]},\r\n\t\t{\"id\":45296,\"gems\":[39997]}\r\n  ]}`),\r\n}\r\n\r\nexport const P3_PRESET_HEMO_SUB = {\r\n\tname: \"P3 Hemo Sub\",\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\":[\r\n\t\t{\"id\":48235,\"enchant\":3817,\"gems\":[41398,49110]},\r\n\t\t{\"id\":47060,\"gems\":[40112]},\r\n\t\t{\"id\":48237,\"enchant\":3808,\"gems\":[40112]},\r\n\t\t{\"id\":47546,\"enchant\":3605,\"gems\":[40112]},\r\n\t\t{\"id\":47431,\"enchant\":3832,\"gems\":[40148,40130,40112]},\r\n\t\t{\"id\":45611,\"enchant\":3845,\"gems\":[40148,0]},\r\n\t\t{\"id\":48234,\"enchant\":3604,\"gems\":[40112,0]},\r\n\t\t{\"id\":47460,\"gems\":[40148,40112,40162]},\r\n\t\t{\"id\":47420,\"enchant\":3823,\"gems\":[40112,40112,40148]},\r\n\t\t{\"id\":47445,\"enchant\":3606,\"gems\":[40148,40112]},\r\n\t\t{\"id\":47443,\r\n\t\t\t\"gems\": [40112]},\r\n\t\t{\"id\":46048,\"gems\":[40112]},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":47131},\r\n\t\t{\"id\":47475,\"enchant\":3789,\"gems\":[40148]},\r\n\t\t{\"id\":47416,\"enchant\":3789,\"gems\":[40148]},\r\n\t\t{\"id\":45296,\"gems\":[40112]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_PRESET_DANCE_SUB = {\r\n\tname: \"P3 Dance Sub\",\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\":[\r\n\t\t{\"id\":48235,\"enchant\":3817,\"gems\":[41398,49110]},\r\n\t\t{\"id\":47060,\"gems\":[40112]},\r\n\t\t{\"id\":48237,\"enchant\":3808,\"gems\":[40112]},\r\n\t\t{\"id\":47546,\"enchant\":3605,\"gems\":[40112]},\r\n\t\t{\"id\":47431,\"enchant\":3832,\"gems\":[40148,40130,40112]},\r\n\t\t{\"id\":45611,\"enchant\":3845,\"gems\":[40148,0]},\r\n\t\t{\"id\":48234,\r\n\t\t\t\"enchant\" :3604,\r\n\t\t\t\"gems\": [\r\n\t\t\t\t40112,\r\n\t\t\t\t0\r\n\t\t\t]\r\n\t\t},\r\n\t\t{\"id\":47460,\"gems\":[40148,40112,40162]},\r\n\t\t{\"id\":47420,\"enchant\":3823,\"gems\":[40112,40112,40148]},\r\n\t\t{\"id\":47445,\"enchant\":3606,\"gems\":[40148,40112]},\r\n\t\t{\"id\":47443,\"gems\":[40112]},\r\n\t\t{\"id\":46048,\"gems\":[40112]},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":47131},\r\n\t\t{\"id\":47416,\"enchant\":3789,\"gems\":[40148]},\r\n\t\t{\"id\":47416,\"enchant\":3789,\"gems\":[40148]},\r\n\t\t{\"id\":45296,\"gems\":[40112]}\r\n\t]}`),\r\n}\r\n","import { Spec } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\nimport {\r\n\tRogue_Rotation_AssassinationPriority as AssassinationPriority,\r\n\tRogue_Rotation_CombatPriority as CombatPriority,\r\n\tRogue_Rotation_CombatBuilder as CombatBuilder,\r\n\tRogue_Rotation_SubtletyBuilder as SubtletyBuilder,\r\n\tRogue_Rotation_SubtletyPriority as SubtletyPriority,\r\n\tRogue_Rotation_Frequency as Frequency,\r\n\tRogue_Options_PoisonImbue as Poison,\r\n} from '../core/proto/rogue.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const MainHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\r\n\tfieldName: 'mhImbue',\r\n\tnumColumns: 1,\r\n\tvalues: [\r\n\t\t{ value: Poison.NoPoison, tooltip: 'No Main Hand Poison' },\r\n\t\t{ actionId: ActionId.fromItemId(22054), value: Poison.DeadlyPoison },\r\n\t\t{ actionId: ActionId.fromItemId(21927), value: Poison.InstantPoison },\r\n\t\t{ actionId: ActionId.fromItemId(22055), value: Poison.WoundPoison },\r\n\t],\r\n});\r\n\r\nexport const OffHandImbue = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecRogue, Poison>({\r\n\tfieldName: 'ohImbue',\r\n\tnumColumns: 1,\r\n\tvalues: [\r\n\t\t{ value: Poison.NoPoison, tooltip: 'No Off Hand Poison' },\r\n\t\t{ actionId: ActionId.fromItemId(22054), value: Poison.DeadlyPoison },\r\n\t\t{ actionId: ActionId.fromItemId(21927), value: Poison.InstantPoison },\r\n\t\t{ actionId: ActionId.fromItemId(22055), value: Poison.WoundPoison },\r\n\t],\r\n});\r\n\r\nexport const StartingOverkillDuration = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\r\n\tfieldName: 'startingOverkillDuration',\r\n\tlabel: 'Starting Overkill duration',\r\n\tlabelTooltip: 'Initial Overkill buff duration at the start of each iteration.',\r\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().overkill || player.getTalents().masterOfSubtlety > 0\r\n});\r\n\r\nexport const VanishBreakTime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\r\n\tfieldName: 'vanishBreakTime',\r\n\tlabel: 'Vanish Break Time',\r\n\tlabelTooltip: 'Time it takes to start attacking after casting Vanish.',\r\n\textraCssClasses: ['experimental'],\r\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().overkill || player.getTalents().masterOfSubtlety > 0\r\n})\r\n\r\nexport const AssumeBleedActive = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecRogue>({\r\n\tfieldName: 'assumeBleedActive',\r\n\tlabel: 'Assume Bleed Always Active',\r\n\tlabelTooltip: 'Assume bleed always exists for \\'Hunger for Blood\\' activation. Otherwise will only calculate based on own garrote/rupture.',\r\n\textraCssClasses: ['within-raid-sim-hide'],\r\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().hungerForBlood\r\n})\r\n\r\nexport const HonorOfThievesCritRate = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecRogue>({\r\n\tfieldName: 'honorOfThievesCritRate',\r\n\tlabel: 'Honor of Thieves Crit Rate',\r\n\tlabelTooltip: 'Number of crits other group members generate within 100 seconds',\r\n\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\r\n});\r\n\r\nexport const ApplyPoisonsManually = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecRogue>({\r\n\tfieldName: 'applyPoisonsManually',\r\n\tlabel: 'Configure poisons manually',\r\n\tlabelTooltip: 'Prevent automatic poison configuration that is based on equipped weapons.',\r\n});\r\n\r\nexport const RogueRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\r\n\t\t\tfieldName: 'exposeArmorFrequency',\r\n\t\t\tlabel: 'Expose Armor',\r\n\t\t\tlabelTooltip: 'Frequency of Expose Armor casts.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\r\n\t\t\t\t{ name: 'Cast Once', value: Frequency.Once },\r\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'minimumComboPointsExposeArmor',\r\n\t\t\tlabel: 'Minimum CP (Expose Armor)',\r\n\t\t\tlabelTooltip: 'Minimum number of combo points for Expose Armor when only cast once.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().exposeArmorFrequency == Frequency.Once,\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\r\n\t\t\tfieldName: 'tricksOfTheTradeFrequency',\r\n\t\t\tlabel: 'Tricks of the Trade',\r\n\t\t\tlabelTooltip: 'Frequency of Tricks of the Trade usage.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\r\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, CombatBuilder>({\r\n\t\t\tfieldName: 'combatBuilder',\r\n\t\t\tlabel: \"Builder\",\r\n\t\t\tlabelTooltip: 'Use Sinister Strike, Backstab, or Hemorrhage as builder.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"Sinister Strike\", value: CombatBuilder.SinisterStrike },\r\n\t\t\t\t{ name: \"Backstab\", value: CombatBuilder.Backstab },\r\n\t\t\t\t{ name: \"Hemorrhage\", value: CombatBuilder.HemorrhageCombat },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().combatPotency > 0\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, CombatPriority>({\r\n\t\t\tfieldName: 'combatFinisherPriority',\r\n\t\t\tlabel: 'Finisher Priority',\r\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Rupture', value: CombatPriority.RuptureEviscerate },\r\n\t\t\t\t{ name: 'Eviscerate', value: CombatPriority.EviscerateRupture },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().combatPotency > 0\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, AssassinationPriority>({\r\n\t\t\tfieldName: 'assassinationFinisherPriority',\r\n\t\t\tlabel: 'Finisher Priority',\r\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Rupture', value: AssassinationPriority.RuptureEnvenom },\r\n\t\t\t\t{ name: 'Envenom', value: AssassinationPriority.EnvenomRupture },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().mutilate\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, SubtletyBuilder>({\r\n\t\t\tfieldName: 'subtletyBuilder',\r\n\t\t\tlabel: \"Builder\",\r\n\t\t\tlabelTooltip: 'Use Hemorrhage or Backstab as builder.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"Hemorrhage\", value: SubtletyBuilder.Hemorrhage },\r\n\t\t\t\t{ name: \"Backstab\", value: SubtletyBuilder.BackstabSub },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, SubtletyPriority>({\r\n\t\t\tfieldName: 'subtletyFinisherPriority',\r\n\t\t\tlabel: \"Finisher Priority\",\r\n\t\t\tlabelTooltip: 'The finisher that will be cast with highest priority.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"Eviscerate\", value: SubtletyPriority.SubtletyEviscerate },\r\n\t\t\t\t{ name: \"Envenom\", value: SubtletyPriority.SubtletyEnvenom },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().honorAmongThieves > 0\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecRogue, Frequency>({\r\n\t\t\tfieldName: 'multiTargetSliceFrequency',\r\n\t\t\tlabel: 'Multi-Target S&D',\r\n\t\t\tlabelTooltip: 'Frequency of Slice and Dice cast in multi-target scenarios.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Never', value: Frequency.Never },\r\n\t\t\t\t{ name: 'Once', value: Frequency.Once },\r\n\t\t\t\t{ name: 'Maintain', value: Frequency.Maintain },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().multiTargetSliceFrequency != Frequency.FrequencyUnknown\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'minimumComboPointsMultiTargetSlice',\r\n\t\t\tlabel: 'Minimum CP (Slice)',\r\n\t\t\tlabelTooltip: 'Minimum number of combo points spent if Slice and Dice has frequency: Once',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getRotation().multiTargetSliceFrequency == Frequency.Once\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'openWithGarrote',\r\n\t\t\tlabel: 'Open with Garrote',\r\n\t\t\tlabelTooltip: 'Open the encounter by casting Garrote.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'openWithShadowstep',\r\n\t\t\tlabel: 'Open with Shadowstep',\r\n\t\t\tlabelTooltip: 'Open the encounter by casting Shadowstep.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().shadowstep\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'openWithPremeditation',\r\n\t\t\tlabel: 'Open with Premeditation',\r\n\t\t\tlabelTooltip: 'Open the encounter by casting Premeditation.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().premeditation\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'useFeint',\r\n\t\t\tlabel: 'Use Feint',\r\n\t\t\tlabelTooltip: 'Cast Feint on cooldown. Mainly useful when using the associate glyph.'\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: \"useGhostlyStrike\",\r\n\t\t\tlabel: 'Use Ghostly Strike',\r\n\t\t\tlabelTooltip: 'Use Ghostly Strike on cooldown. Mainly useful when using the associate glyph.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().ghostlyStrike\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecRogue>({\r\n\t\t\tfieldName: 'ruptureForBleed',\r\n\t\t\tlabel: 'Rupture for Bleed',\r\n\t\t\tlabelTooltip: 'Cast Rupture as needed to apply a bleed effect for Hunger for Blood',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecRogue>) => player.getTalents().hungerForBlood\r\n\t\t}),\r\n\t],\r\n};\r\n","import {\r\n\tDebuffs,\r\n\tIndividualBuffs,\r\n\tItemSlot,\r\n\tPartyBuffs,\r\n\tPseudoStat,\r\n\tRaidBuffs,\r\n\tSpec,\r\n\tStat,\r\n\tTristateEffect,\r\n\tWeaponType\r\n} from '../core/proto/common.js';\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\n\r\nimport {\r\n\tRogue_Options_PoisonImbue,\r\n\tRogue_Rotation_AssassinationPriority as AssassinationPriority,\r\n\tRogue_Rotation_CombatBuilder as CombatBuilder,\r\n\tRogue_Rotation_CombatPriority as CombatPriority,\r\n\tRogue_Rotation_Frequency as Frequency,\r\n\tRogue_Rotation_SubtletyPriority as SubtletyPriority,\r\n\tRogueMajorGlyph,\r\n} from '../core/proto/rogue.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\n\r\nimport * as RogueInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\nimport { DefaultOptions } from './presets.js';\r\n\r\nexport class RogueSimUI extends IndividualSimUI<Spec.SpecRogue> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRogue>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'rogue-sim-ui',\r\n\t\t\tcssScheme: 'rogue',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t\t'Rotations are not fully optimized, especially for non-standard setups.',\r\n\t\t\t],\r\n\t\t\twarnings: [\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.sim.encounter.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tlet hasNoArmor = false\r\n\t\t\t\t\t\t\tfor (const target of simUI.sim.encounter.targets) {\r\n\t\t\t\t\t\t\t\tif (new Stats(target.stats).getStat(Stat.StatArmor) <= 0) {\r\n\t\t\t\t\t\t\t\t\thasNoArmor = true\r\n\t\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (hasNoArmor) {\r\n\t\t\t\t\t\t\t\treturn 'One or more targets have no armor. Check advanced encounter settings.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tsimUI.player.getTalents().mutilate &&\r\n\t\t\t\t\t\t\t\t(simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType != WeaponType.WeaponTypeDagger ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType != WeaponType.WeaponTypeDagger)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\treturn '\"Mutilate\" talent selected, but daggers not equipped in both hands.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getRotation().combatBuilder == CombatBuilder.Backstab &&\r\n\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType != WeaponType.WeaponTypeDagger) {\r\n\t\t\t\t\t\t\t\treturn 'Builder \"Backstab\" selected, but no dagger equipped.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getTalents().hackAndSlash) {\r\n\t\t\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeSword ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeAxe ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeSword ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeAxe) {\r\n\t\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn '\"Hack and Slash\" talent selected, but swords or axes not equipped.';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getTalents().closeQuartersCombat) {\r\n\t\t\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeFist ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeDagger ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeFist ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeDagger) {\r\n\t\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn '\"Close Quarters Combat\" talent selected, but fists or daggers not equipped.';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getTalents().maceSpecialization) {\r\n\t\t\t\t\t\t\t\tif (simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponType == WeaponType.WeaponTypeMace ||\r\n\t\t\t\t\t\t\t\t\tsimUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponType == WeaponType.WeaponTypeMace) {\r\n\t\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn '\"Mace Specialization\" talent selected, but maces not equipped.';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getInFrontOfTarget() && (simUI.player.getRotation().combatBuilder == CombatBuilder.Backstab ||\r\n\t\t\t\t\t\t\t\tsimUI.player.getRotation().openWithGarrote)) {\r\n\t\t\t\t\t\t\t\treturn 'Option \"In Front of Target\" selected, but using Backstab or Garrote as builder or opener.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getRotation().combatBuilder == CombatBuilder.HemorrhageCombat && !simUI.player.getTalents().hemorrhage) {\r\n\t\t\t\t\t\t\t\treturn 'Builder \"Hemorrhage\" selected, but Hemorrhage is not talented.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getRotation().useGhostlyStrike && !simUI.player.getMajorGlyphs().includes(RogueMajorGlyph.GlyphOfGhostlyStrike)) {\r\n\t\t\t\t\t\t\t\treturn '\"Use Ghostly Strike\" selected, but missing Glyph of Ghostly Strike.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getRotation().useFeint && !simUI.player.getMajorGlyphs().includes(RogueMajorGlyph.GlyphOfFeint)) {\r\n\t\t\t\t\t\t\t\treturn '\"Use Feint\" selected, but missing Glyph of Feint.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tif (simUI.player.getRotation().exposeArmorFrequency == 2 && !simUI.player.getMajorGlyphs().includes(RogueMajorGlyph.GlyphOfExposeArmor) && simUI.player.getTalentTree() == 1) {\r\n\t\t\t\t\t\t\t\treturn '\"Maintain Expose Armor\" selected, but missing Glyph of Expose Armor.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecRogue>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: simUI.player.changeEmitter,\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tconst mhWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\r\n\t\t\t\t\t\t\tconst ohWeaponSpeed = simUI.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\r\n\t\t\t\t\t\t\tconst mhImbue = simUI.player.getSpecOptions().mhImbue;\r\n\t\t\t\t\t\t\tconst ohImbue = simUI.player.getSpecOptions().ohImbue;\r\n\t\t\t\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined' || !simUI.player.getSpecOptions().applyPoisonsManually) {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (mhWeaponSpeed < ohWeaponSpeed && ohImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\r\n\t\t\t\t\t\t\t\treturn 'Deadly poison applied to slower (off hand) weapon.';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (ohWeaponSpeed < mhWeaponSpeed && mhImbue == Rogue_Options_PoisonImbue.DeadlyPoison) {\r\n\t\t\t\t\t\t\t\treturn 'Deadly poison applied to slower (main hand) weapon.';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t],\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.PRERAID_PRESET_ASSASSINATION.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatAgility]: 1.86,\r\n\t\t\t\t\t[Stat.StatStrength]: 1.14,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.28,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0.08,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.39,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 1.32,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.48,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.84,\r\n\t\t\t\t\t[Stat.StatExpertise]: 0.98,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 2.94,\r\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.45,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.AssassinationTalents137.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\ticyTalons: true,\r\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tabominationsMight: true,\r\n\t\t\t\t\tswiftRetribution: true,\r\n\t\t\t\t\telementalOath: true,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\theartOfTheCrusader: true,\r\n\t\t\t\t\tmangle: true,\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tshadowMastery: true,\r\n\t\t\t\t\tearthAndMoon: true,\r\n\t\t\t\t\tbloodFrenzy: true,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\tplayerInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tRogueInputs.ApplyPoisonsManually\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tRogueInputs.MainHandImbue,\r\n\t\t\t\tRogueInputs.OffHandImbue,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: RogueInputs.RogueRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.SpellCritBuff,\r\n\t\t\t\tIconInputs.SpellCritDebuff,\r\n\t\t\t\tIconInputs.SpellHitDebuff,\r\n\t\t\t\tIconInputs.SpellDamageDebuff\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tRogueInputs.StartingOverkillDuration,\r\n\t\t\t\t\tRogueInputs.VanishBreakTime,\r\n\t\t\t\t\tRogueInputs.AssumeBleedActive,\r\n\t\t\t\t\tRogueInputs.HonorOfThievesCritRate,\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.AssassinationTalents137,\r\n\t\t\t\t\tPresets.AssassinationTalents182,\r\n\t\t\t\t\tPresets.AssassinationTalentsBF,\r\n\t\t\t\t\tPresets.CombatHackTalents,\r\n\t\t\t\t\tPresets.CombatCQCTalents,\r\n\t\t\t\t\tPresets.SubtletyTalents,\r\n\t\t\t\t\tPresets.HemoSubtletyTalents,\r\n\t\t\t\t],\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_APL_PRESET,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PRERAID_PRESET_ASSASSINATION,\r\n\t\t\t\t\tPresets.PRERAID_PRESET_COMBAT,\r\n\t\t\t\t\tPresets.P1_PRESET_ASSASSINATION,\r\n\t\t\t\t\tPresets.P1_PRESET_COMBAT,\r\n\t\t\t\t\tPresets.P1_PRESET_HEMO_SUB,\r\n\t\t\t\t\tPresets.P2_PRESET_ASSASSINATION,\r\n\t\t\t\t\tPresets.P2_PRESET_COMBAT,\r\n\t\t\t\t\tPresets.P3_PRESET_ASSASSINATION,\r\n\t\t\t\t\tPresets.P3_PRESET_COMBAT,\r\n\t\t\t\t\tPresets.P2_PRESET_HEMO_SUB,\r\n\t\t\t\t\tPresets.P3_PRESET_HEMO_SUB,\r\n\t\t\t\t\tPresets.P3_PRESET_DANCE_SUB,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t})\r\n\t\tthis.player.changeEmitter.on((c) => {\r\n\t\t\tconst rotation = this.player.getRotation()\r\n\t\t\tconst options = this.player.getSpecOptions()\r\n\t\t\tconst encounter = this.sim.encounter\r\n\t\t\tif (this.player.getTalentTree() == 0) {\r\n\t\t\t\tif (rotation.assassinationFinisherPriority == AssassinationPriority.AssassinationPriorityUnknown) {\r\n\t\t\t\t\trotation.assassinationFinisherPriority = Presets.DefaultRotation.assassinationFinisherPriority;\r\n\t\t\t\t}\r\n\t\t\t\trotation.combatFinisherPriority = CombatPriority.CombatPriorityUnknown;\r\n\t\t\t\trotation.combatBuilder = CombatBuilder.SinisterStrike;\r\n\t\t\t\trotation.subtletyFinisherPriority = SubtletyPriority.SubtletyPriorityUnknown;\r\n\t\t\t\toptions.honorOfThievesCritRate = -1;\r\n\t\t\t} else if (this.player.getTalentTree() == 1) {\r\n\t\t\t\tif (rotation.combatFinisherPriority == CombatPriority.CombatPriorityUnknown) {\r\n\t\t\t\t\trotation.combatFinisherPriority = Presets.DefaultRotation.combatFinisherPriority;\r\n\t\t\t\t\trotation.combatBuilder = Presets.DefaultRotation.combatBuilder;\r\n\t\t\t\t}\r\n\t\t\t\trotation.assassinationFinisherPriority = AssassinationPriority.AssassinationPriorityUnknown;\r\n\t\t\t\trotation.subtletyFinisherPriority = SubtletyPriority.SubtletyPriorityUnknown;\r\n\t\t\t\toptions.honorOfThievesCritRate = -1;\r\n\t\t\t} else {\r\n\t\t\t\tif (rotation.subtletyFinisherPriority == SubtletyPriority.SubtletyPriorityUnknown) {\r\n\t\t\t\t\trotation.subtletyFinisherPriority = Presets.DefaultRotation.subtletyFinisherPriority;\r\n\t\t\t\t}\r\n\t\t\t\trotation.assassinationFinisherPriority = AssassinationPriority.AssassinationPriorityUnknown;\r\n\t\t\t\trotation.combatFinisherPriority = CombatPriority.CombatPriorityUnknown;\r\n\t\t\t\trotation.combatBuilder = CombatBuilder.SinisterStrike;\r\n\t\t\t\tif (options.honorOfThievesCritRate == -1) {\r\n\t\t\t\t\toptions.honorOfThievesCritRate = DefaultOptions.honorOfThievesCritRate\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.player.setRotation(c, rotation)\r\n\t\t\tif (!options.applyPoisonsManually) {\r\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\r\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\r\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (encounter.targets.length > 3) {\r\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\r\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison\r\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.player.setSpecOptions(c, options)\r\n\t\t});\r\n\t\tthis.sim.encounter.changeEmitter.on((c) => {\r\n\t\t\tconst rotation = this.player.getRotation()\r\n\t\t\tconst options = this.player.getSpecOptions()\r\n\t\t\tconst encounter = this.sim.encounter\r\n\t\t\tif (this.sim.encounter.targets.length >= 3) {\r\n\t\t\t\tif (rotation.multiTargetSliceFrequency == Frequency.FrequencyUnknown) {\r\n\t\t\t\t\trotation.multiTargetSliceFrequency = Presets.DefaultRotation.multiTargetSliceFrequency;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trotation.multiTargetSliceFrequency = Frequency.FrequencyUnknown;\r\n\t\t\t}\r\n\t\t\tthis.player.setRotation(c, rotation)\r\n\t\t\tif (!options.applyPoisonsManually) {\r\n\t\t\t\tconst mhWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotMainHand)?.item.weaponSpeed;\r\n\t\t\t\tconst ohWeaponSpeed = this.player.getGear().getEquippedItem(ItemSlot.ItemSlotOffHand)?.item.weaponSpeed;\r\n\t\t\t\tif (typeof mhWeaponSpeed == 'undefined' || typeof ohWeaponSpeed == 'undefined') {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (encounter.targets.length > 3) {\r\n\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (mhWeaponSpeed <= ohWeaponSpeed) {\r\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.DeadlyPoison\r\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toptions.mhImbue = Rogue_Options_PoisonImbue.InstantPoison\r\n\t\t\t\t\t\toptions.ohImbue = Rogue_Options_PoisonImbue.DeadlyPoison\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.player.setSpecOptions(c, options)\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["CombatHackTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","RogueMajorGlyph","GlyphOfKillingSpree","major2","GlyphOfTricksOfTheTrade","major3","GlyphOfRupture","CombatCQCTalents","AssassinationTalents137","GlyphOfMutilate","GlyphOfHungerForBlood","AssassinationTalents182","AssassinationTalentsBF","GlyphOfBladeFlurry","SubtletyTalents","GlyphOfEviscerate","HemoSubtletyTalents","DefaultRotation","RogueRotation","exposeArmorFrequency","Rogue_Rotation_Frequency","Never","minimumComboPointsExposeArmor","tricksOfTheTradeFrequency","Maintain","assassinationFinisherPriority","Rogue_Rotation_AssassinationPriority","EnvenomRupture","combatBuilder","Rogue_Rotation_CombatBuilder","SinisterStrike","combatFinisherPriority","Rogue_Rotation_CombatPriority","RuptureEviscerate","subtletyBuilder","Rogue_Rotation_SubtletyBuilder","Hemorrhage","subtletyFinisherPriority","Rogue_Rotation_SubtletyPriority","SubtletyEviscerate","minimumComboPointsPrimaryFinisher","minimumComboPointsSecondaryFinisher","DefaultOptions","RogueOptions","mhImbue","Poison","DeadlyPoison","ohImbue","InstantPoison","applyPoisonsManually","startingOverkillDuration","vanishBreakTime","honorOfThievesCritRate","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","prepopPotion","defaultConjured","Conjured","ConjuredRogueThistleTea","flask","Flask","FlaskOfEndlessRage","food","Food","FoodMegaMammothMeal","ROTATION_APL_PRESET","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","fromJsonString","P2_PRESET_ASSASSINATION","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","player","getTalentTree","gear","EquipmentSpec","P2_PRESET_COMBAT","P3_PRESET_ASSASSINATION","P3_PRESET_COMBAT","PRERAID_PRESET_ASSASSINATION","PRERAID_PRESET_COMBAT","P1_PRESET_ASSASSINATION","P1_PRESET_HEMO_SUB","P1_PRESET_COMBAT","P2_PRESET_HEMO_SUB","P3_PRESET_HEMO_SUB","P3_PRESET_DANCE_SUB","MainHandImbue","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","numColumns","values","value","NoPoison","actionId","ActionId","fromItemId","WoundPoison","OffHandImbue","StartingOverkillDuration","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","showWhen","getTalents","overkill","masterOfSubtlety","VanishBreakTime","extraCssClasses","AssumeBleedActive","InputHelpers.makeSpecOptionsBooleanInput","hungerForBlood","HonorOfThievesCritRate","honorAmongThieves","ApplyPoisonsManually","RogueRotationConfig","inputs","InputHelpers.makeRotationEnumInput","Frequency","Once","InputHelpers.makeRotationNumberInput","getRotation","CombatBuilder","Backstab","HemorrhageCombat","combatPotency","CombatPriority","EviscerateRupture","AssassinationPriority","RuptureEnvenom","mutilate","SubtletyBuilder","BackstabSub","SubtletyPriority","SubtletyEnvenom","multiTargetSliceFrequency","FrequencyUnknown","InputHelpers.makeRotationBooleanInput","shadowstep","premeditation","ghostlyStrike","RogueSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","sim","encounter","changeEmitter","getContent","hasNoArmor","target","targets","Stats","stats","getStat","Stat","StatArmor","getGear","getEquippedItem","ItemSlot","ItemSlotMainHand","item","weaponType","WeaponType","WeaponTypeDagger","ItemSlotOffHand","hackAndSlash","WeaponTypeSword","WeaponTypeAxe","closeQuartersCombat","WeaponTypeFist","maceSpecialization","WeaponTypeMace","getInFrontOfTarget","openWithGarrote","hemorrhage","useGhostlyStrike","getMajorGlyphs","includes","GlyphOfGhostlyStrike","useFeint","GlyphOfFeint","GlyphOfExposeArmor","mhWeaponSpeed","weaponSpeed","ohWeaponSpeed","getSpecOptions","Rogue_Options_PoisonImbue","epStats","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatSpellHit","StatSpellCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.PRERAID_PRESET_ASSASSINATION","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","talents","Presets.AssassinationTalents137","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","bloodlust","strengthOfEarthTotem","icyTalons","leaderOfThePack","abominationsMight","swiftRetribution","elementalOath","sanctifiedRetribution","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","heartOfTheCrusader","mangle","sunderArmor","faerieFire","shadowMastery","earthAndMoon","bloodFrenzy","playerInputs","RogueInputs.ApplyPoisonsManually","playerIconInputs","RogueInputs.MainHandImbue","RogueInputs.OffHandImbue","rotationInputs","RogueInputs.RogueRotationConfig","includeBuffDebuffInputs","IconInputs.SpellCritBuff","IconInputs.SpellCritDebuff","IconInputs.SpellHitDebuff","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","RogueInputs.StartingOverkillDuration","RogueInputs.VanishBreakTime","RogueInputs.AssumeBleedActive","RogueInputs.HonorOfThievesCritRate","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.AssassinationTalents182","Presets.AssassinationTalentsBF","Presets.CombatHackTalents","Presets.CombatCQCTalents","Presets.SubtletyTalents","Presets.HemoSubtletyTalents","rotations","Presets.ROTATION_APL_PRESET","Presets.PRERAID_PRESET_COMBAT","Presets.P1_PRESET_ASSASSINATION","Presets.P1_PRESET_COMBAT","Presets.P1_PRESET_HEMO_SUB","Presets.P2_PRESET_ASSASSINATION","Presets.P2_PRESET_COMBAT","Presets.P3_PRESET_ASSASSINATION","Presets.P3_PRESET_COMBAT","Presets.P2_PRESET_HEMO_SUB","Presets.P3_PRESET_HEMO_SUB","Presets.P3_PRESET_DANCE_SUB","this","on","c","options","AssassinationPriorityUnknown","CombatPriorityUnknown","SubtletyPriorityUnknown","setRotation","length","setSpecOptions"],"mappings":"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"}