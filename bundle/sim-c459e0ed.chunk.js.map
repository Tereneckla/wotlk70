{"version":3,"file":"sim-c459e0ed.chunk.js","sources":["../../../ui/enhancement_shaman/inputs.ts","../../../ui/enhancement_shaman/presets.ts","../../../ui/core/components/fire_elemental_inputs.ts","../../../ui/enhancement_shaman/sim.ts"],"sourcesContent":["import { BooleanPicker } from '../core/components/boolean_picker.js';\r\nimport { EnumPicker } from '../core/components/enum_picker.js';\r\nimport { IconEnumPicker, IconEnumPickerConfig } from '../core/components/icon_enum_picker.js';\r\nimport { IconPickerConfig } from '../core/components/icon_picker.js';\r\nimport {\r\n\tAirTotem,\r\n\tEarthTotem,\r\n\tFireTotem,\r\n\tWaterTotem,\r\n\tEnhancementShaman_Options as ShamanOptions,\r\n\tShamanTotems,\r\n\tShamanShield,\r\n\tShamanImbue,\r\n\tShamanSyncType,\r\n\tEnhancementShaman_Rotation_PrimaryShock as PrimaryShock,\r\n\tEnhancementShaman_Rotation_RotationType as RotationType,\r\n\tEnhancementShaman_Rotation_CustomRotationSpell as CustomRotationSpell\r\n} from '../core/proto/shaman.js';\r\nimport { CustomSpell, Spec, ItemSwap, ItemSlot } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const Bloodlust = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecEnhancementShaman>({\r\n\tfieldName: 'bloodlust',\r\n\tid: ActionId.fromSpellId(2825),\r\n});\r\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanShield>({\r\n\tfieldName: 'shield',\r\n\tvalues: [\r\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\r\n\t\t{ actionId: ActionId.fromSpellId(33736), value: ShamanShield.WaterShield },\r\n\t\t{ actionId: ActionId.fromSpellId(25472), value: ShamanShield.LightningShield },\r\n\t],\r\n});\r\n\r\nexport const ShamanImbueMH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\r\n\tfieldName: 'imbueMh',\r\n\tvalues: [\r\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Main Hand Enchant' },\r\n\t\t{ actionId: ActionId.fromSpellId(25505), value: ShamanImbue.WindfuryWeapon },\r\n\t\t{ actionId: ActionId.fromSpellId(25489), value: ShamanImbue.FlametongueWeapon, text: 'R10'},\r\n\t\t{ actionId: ActionId.fromSpellId(16342), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9'},\r\n\t\t{ actionId: ActionId.fromSpellId(25500), value: ShamanImbue.FrostbrandWeapon },\r\n\t],\r\n});\r\n\r\nexport const ShamanImbueOH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\r\n\tfieldName: 'imbueOh',\r\n\tvalues: [\r\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Off Hand Enchant' },\r\n\t\t{ actionId: ActionId.fromSpellId(25505), value: ShamanImbue.WindfuryWeapon },\r\n\t\t{ actionId: ActionId.fromSpellId(25489), value: ShamanImbue.FlametongueWeapon, text: 'R10'},\r\n\t\t{ actionId: ActionId.fromSpellId(16342), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9'},\r\n\t\t{ actionId: ActionId.fromSpellId(25500), value: ShamanImbue.FrostbrandWeapon },\r\n\t],\r\n});\r\n\r\nexport const SyncTypeInput = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecEnhancementShaman, ShamanSyncType>({\r\n\tfieldName: 'syncType',\r\n\tlabel: 'Sync/Stagger Setting',\r\n\tlabelTooltip:\r\n\t\t`Choose your sync or stagger option Perfect\r\n\t\t<ul>\r\n\t\t\t<li><div>Auto: Will auto pick sync options based on your weapons attack speeds</div></li>\r\n\t\t\t<li><div>None: No Sync or Staggering, used for mismatched weapon speeds</div></li>\r\n\t\t\t<li><div>Perfect Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\r\n\t\t\t<li><div>Delayed Offhand: Adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window</div></li>\r\n\t\t</ul>`,\r\n\tvalues: [\r\n\t\t{ name: \"Automatic\", value: ShamanSyncType.Auto },\r\n\t\t{ name: 'None', value: ShamanSyncType.NoSync },\r\n\t\t{ name: 'Perfect Sync', value: ShamanSyncType.SyncMainhandOffhandSwings },\r\n\t\t{ name: 'Delayed Offhand', value: ShamanSyncType.DelayOffhandSwings },\r\n\t],\r\n});\r\n\r\nexport const EnhancmentItemSwapInputs = InputHelpers.MakeItemSwapInput<Spec.SpecEnhancementShaman>({\r\n\tfieldName: 'itemSwap',\r\n\tvalues: [\r\n\t\tItemSlot.ItemSlotMainHand,\r\n\t\tItemSlot.ItemSlotOffHand,\r\n\t\t//ItemSlot.ItemSlotRanged, Not support yet\r\n\t],\r\n\tlabelTooltip: 'Start with the swapped items until Fire Elemntal has been summoned, swap back to normal gear set. Weapons come pre enchanted with FT9 and FT10. If a slot is empty it will not be used in the swap',\r\n\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => (player.getSpecOptions().totems?.useFireElemental && player.getRotation().enableItemSwap) || false\r\n})\r\n\r\nexport const EnhancementShamanRotationConfig = {\r\n\tinputs:\r\n\t\t[\r\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'enableItemSwap',\r\n\t\t\t\tlabel: 'Enable Item Swapping',\r\n\t\t\t\tlabelTooltip: 'Toggle on/off item swapping',\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getSpecOptions().totems?.useFireElemental || false\r\n\t\t\t}),\r\n\t\t\tEnhancmentItemSwapInputs,\r\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, RotationType>({\r\n\t\t\t\tfieldName: 'rotationType',\r\n\t\t\t\tlabel: 'Type',\r\n\t\t\t\tlabelTooltip:\r\n\t\t\t\t\t`<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div>Standard: Priority Rotation</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<div>Custom: Highest spell that is ready will be cast.</div>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>`,\r\n\t\t\t\tvalues: [\r\n\t\t\t\t\t{ name: 'Standard', value: RotationType.Priority },\r\n\t\t\t\t\t{ name: 'Custom', value: RotationType.Custom },\r\n\t\t\t\t],\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeCustomRotationInput<Spec.SpecEnhancementShaman, CustomRotationSpell>({\r\n\t\t\t\tfieldName: 'customRotation',\r\n\t\t\t\tnumColumns: 2,\r\n\t\t\t\tvalues: [\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25449), value: CustomRotationSpell.LightningBolt},\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25449), value: CustomRotationSpell.LightningBoltWeave, text: \"Weave\" },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25449), value: CustomRotationSpell.LightningBoltDelayedWeave, text: \"Delay\" },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25442), value: CustomRotationSpell.ChainLightning },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(17364), value: CustomRotationSpell.StormstrikeDebuffMissing, text: \"Debuff\" },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(17364), value: CustomRotationSpell.Stormstrike },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25457), value: CustomRotationSpell.FlameShock },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25454), value: CustomRotationSpell.EarthShock },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25552), value: CustomRotationSpell.MagmaTotem },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25547), value: CustomRotationSpell.FireNova },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(60103), value: CustomRotationSpell.LavaLash },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25472), value: CustomRotationSpell.LightningShield },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(60043), value: CustomRotationSpell.LavaBurst, text: \"Weave\" },\r\n\t\t\t\t\t{ actionId: ActionId.fromSpellId(25464), value: CustomRotationSpell.FrostShock },\r\n\t\t\t\t],\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType == RotationType.Custom,\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, PrimaryShock>({\r\n\t\t\t\tfieldName: 'primaryShock',\r\n\t\t\t\tlabel: 'Primary Shock',\r\n\t\t\t\tvalues: [\r\n\t\t\t\t\t{ name: 'None', value: PrimaryShock.None },\r\n\t\t\t\t\t{ name: 'Earth Shock', value: PrimaryShock.Earth },\r\n\t\t\t\t\t{ name: 'Frost Shock', value: PrimaryShock.Frost },\r\n\t\t\t\t],\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'weaveFlameShock',\r\n\t\t\t\tlabel: 'Weave Flame Shock',\r\n\t\t\t\tlabelTooltip: 'Use Flame Shock whenever the target does not already have the DoT.',\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'flameShockClipTicks',\r\n\t\t\t\tlabel: 'Refresh Flame Shock at ticks remaining',\r\n\t\t\t\tlabelTooltip: 'Set to 0 to require the debuff be missing. A tick is 3s, affected by spell haste',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().weaveFlameShock,\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.FlameShock) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn player.getRotation().weaveFlameShock\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'lightningboltWeave',\r\n\t\t\t\tlabel: 'Enable Weaving Lightning Bolt',\r\n\t\t\t\tlabelTooltip: 'Will provide a DPS increase, but is harder to execute',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getTalents().maelstromWeapon > 0,\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationEnumInput<Spec.SpecEnhancementShaman, number>({\r\n\t\t\t\tfieldName: 'maelstromweaponMinStack',\r\n\t\t\t\tlabel: 'Minimum Maelstrom Stacks to Weave',\r\n\t\t\t\tlabelTooltip: '3 stacks is the most realistic, however there are cases where lower might be possible, just much harder to do in practice',\r\n\t\t\t\tvalues: [\r\n\t\t\t\t\t{ name: '1', value: 1 },\r\n\t\t\t\t\t{ name: '2', value: 2 },\r\n\t\t\t\t\t{ name: '3', value: 3 },\r\n\t\t\t\t\t{ name: '4', value: 4 },\r\n\t\t\t\t],\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\r\n\t\t\t\t},\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'autoWeaveDelay',\r\n\t\t\t\tlabel: 'Weaving Delay After Auto Attack',\r\n\t\t\t\tlabelTooltip: 'The amount of time to wait after an auto attack before weaveing, in milliseconds',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\r\n\t\t\t\t},\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true\r\n\t\t\t\t},\r\n\t\t\t}), InputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'delayGcdWeave',\r\n\t\t\t\tlabel: 'Delay LL to Weave',\r\n\t\t\t\tlabelTooltip: 'The amount of time to hold Lava Lash to weave in milliseconds. Setting to 0 will disable delaying',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn player.getRotation().lightningboltWeave\r\n\t\t\t\t},\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'delayGcdWeave',\r\n\t\t\t\tlabel: 'Delay Weave Time',\r\n\t\t\t\tlabelTooltip: 'The amount of time to hold a GCD to weave in milliseconds. Setting to 0 will disable delaying',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltDelayedWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false\r\n\t\t\t\t},\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.LightningBoltDelayedWeave) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'lavaburstWeave',\r\n\t\t\t\tlabel: 'Enable Weaving Lava Burst',\r\n\t\t\t\tlabelTooltip: 'Not particularily useful for dual wield, mostly a 2h option',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().lightningboltWeave,\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getRotation().rotationType != RotationType.Custom\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'firenovaManaThreshold',\r\n\t\t\t\tlabel: 'Minimum mana to cast Fire Nova',\r\n\t\t\t\tlabelTooltip: 'Fire Nova will not be cast when mana is below this value. Set this medium-low, it has a bad mana-to-damage ratio',\r\n\t\t\t\tshowWhen: (player: Player<Spec.SpecEnhancementShaman>) => {\r\n\t\t\t\t\tif (player.getRotation().rotationType == RotationType.Custom) {\r\n\t\t\t\t\t\treturn player.getRotation().customRotation?.spells.find(customSpell => customSpell.spell == CustomRotationSpell.FireNova) != undefined\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn true\r\n\t\t\t\t},\r\n\t\t\t}),\r\n\t\t\tInputHelpers.makeRotationNumberInput<Spec.SpecEnhancementShaman>({\r\n\t\t\t\tfieldName: 'shamanisticRageManaThreshold',\r\n\t\t\t\tlabel: 'Mana % to use Shamanistic Rage',\r\n\t\t\t\tenableWhen: (player: Player<Spec.SpecEnhancementShaman>) => player.getTalents().shamanisticRage,\r\n\t\t\t}),\r\n\t\t],\r\n};\r\n\r\n\r\n","import {\r\n\tConsumes,\r\n\tFlask,\r\n\tFood,\r\n\tGlyphs,\r\n\tEquipmentSpec,\r\n\tPotions,\r\n\tRaidBuffs,\r\n\tTristateEffect,\r\n\tDebuffs,\r\n\tCustomRotation,\r\n\tCustomSpell,\r\n\tSpec,\r\n\tFaction,\r\n} from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\nimport { EnhancementShaman_Rotation as EnhancementShamanRotation, EnhancementShaman_Options as EnhancementShamanOptions, ShamanShield } from '../core/proto/shaman.js';\r\nimport {\r\n\tAirTotem,\r\n\tEarthTotem,\r\n\tFireTotem,\r\n\tWaterTotem,\r\n\tShamanTotems,\r\n\tShamanImbue,\r\n\tShamanSyncType,\r\n\tShamanMajorGlyph,\r\n\tEnhancementShaman_Rotation_PrimaryShock as PrimaryShock,\r\n\tEnhancementShaman_Rotation_RotationType as RotationType,\r\n\tEnhancementShaman_Rotation_CustomRotationSpell as CustomRotationSpell\r\n} from '../core/proto/shaman.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\nimport { Player } from 'ui/core/player.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const StandardTalents = {\r\n\tname: 'Standard',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '053030152-3040500310984633031131031051',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: ShamanMajorGlyph.GlyphOfFireNova,\r\n\t\t\tmajor2: ShamanMajorGlyph.GlyphOfFlametongueWeapon,\r\n\t\t\tmajor3: ShamanMajorGlyph.GlyphOfFeralSpirit,\r\n\t\t\t//minor glyphs dont affect damage done, all convenience/QoL\r\n\t\t})\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = EnhancementShamanRotation.create({\r\n\ttotems: ShamanTotems.create({\r\n\t\tearth: EarthTotem.StrengthOfEarthTotem,\r\n\t\tair: AirTotem.WindfuryTotem,\r\n\t\tfire: FireTotem.MagmaTotem,\r\n\t\twater: WaterTotem.ManaSpringTotem,\r\n\t\tuseFireElemental: true,\r\n\t}),\r\n\tmaelstromweaponMinStack: 3,\r\n\tlightningboltWeave: true,\r\n\tautoWeaveDelay: 500,\r\n\tdelayGcdWeave: 750,\r\n\tlavaburstWeave: false,\r\n\tfirenovaManaThreshold: 3000,\r\n\tshamanisticRageManaThreshold: 25,\r\n\tprimaryShock: PrimaryShock.Earth,\r\n\tweaveFlameShock: true,\r\n\trotationType: RotationType.Priority,\r\n\tcustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBolt }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.StormstrikeDebuffMissing }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBoltWeave }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.Stormstrike }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.FlameShock }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.EarthShock }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.MagmaTotem }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningShield }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.FireNova }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LightningBoltDelayedWeave }),\r\n\t\t\tCustomSpell.create({ spell: CustomRotationSpell.LavaLash }),\r\n\t\t],\r\n\t}),\r\n});\r\n\r\nexport const ROTATION_FT_DEFAULT = {\r\n\tname: 'Default FT',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: EnhancementShamanRotation.toJsonString(EnhancementShamanRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":66842}}},\"doAtValue\":{\"const\":{\"val\":\"-3s\"}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":53817}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49238}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":17364}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":49233}}},\"rhs\":{\"const\":{\"val\":\"0s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49233}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"sourceUnit\":{\"type\":\"CurrentTarget\"},\"auraId\":{\"spellId\":17364}}}}},\"castSpell\":{\"spellId\":{\"spellId\":17364}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49231}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"totemRemainingTime\":{\"totemType\":\"Water\"}},\"rhs\":{\"const\":{\"val\":\"20s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":66842}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":58734}}},\"rhs\":{\"const\":{\"val\":\"100ms\"}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":2894}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":58734}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":61657}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49281}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49281}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":60103}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_WF_DEFAULT = {\r\n\tname: 'Default WF',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: EnhancementShamanRotation.toJsonString(EnhancementShamanRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":66842}}},\"doAtValue\":{\"const\":{\"val\":\"-3s\"}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":53817}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49238}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":53817}}},\"rhs\":{\"const\":{\"val\":\"3\"}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"const\":{\"val\":\"300ms\"}},\"rhs\":{\"spellCastTime\":{\"spellId\":{\"spellId\":49238}}}}},\"rhs\":{\"autoTimeToNext\":{}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49238}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":17364}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":49233}}},\"rhs\":{\"const\":{\"val\":\"0s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49233}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49231}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"totemRemainingTime\":{\"totemType\":\"Water\"}},\"rhs\":{\"const\":{\"val\":\"20s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":66842}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":58734}}},\"rhs\":{\"const\":{\"val\":\"100ms\"}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":2894}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":58734}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":61657}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49281}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49281}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":60103}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_PHASE_3 = {\r\n\tname: 'Phase 3',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: EnhancementShamanRotation.toJsonString(EnhancementShamanRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":66842}}},\"doAtValue\":{\"const\":{\"val\":\"-3s\"}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":49233}}},\"rhs\":{\"const\":{\"val\":\"0s\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49233}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"auraNumStacks\":{\"auraId\":{\"spellId\":53817}}},\"rhs\":{\"const\":{\"val\":\"5\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49238}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"sourceUnit\":{\"type\":\"CurrentTarget\"},\"auraId\":{\"spellId\":17364}}}}},\"castSpell\":{\"spellId\":{\"spellId\":17364}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49231}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"totemRemainingTime\":{\"totemType\":\"Water\"}},\"rhs\":{\"const\":{\"val\":\"20s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":66842}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":17364}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":58734}}},\"rhs\":{\"const\":{\"val\":\"100ms\"}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":2894}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":58734}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":61657}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49281}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49281}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":60103}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const DefaultOptions = EnhancementShamanOptions.create({\r\n\tshield: ShamanShield.LightningShield,\r\n\tbloodlust: true,\r\n\timbueMh: ShamanImbue.WindfuryWeapon,\r\n\timbueOh: ShamanImbue.FlametongueWeapon,\r\n\tsyncType: ShamanSyncType.Auto,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tflask: Flask.FlaskOfEndlessRage,\r\n\tfood: Food.FoodFishFeast,\r\n});\r\n\r\nexport const DefaultRaidBuffs = RaidBuffs.create({\r\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\tarcaneBrilliance: true,\r\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\ttotemOfWrath: true,\r\n\twrathOfAirTotem: true,\r\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\tsanctifiedRetribution: true,\r\n\tdivineSpirit: true,\r\n\tbattleShout: TristateEffect.TristateEffectImproved,\r\n});\r\n\r\nexport const DefaultDebuffs = Debuffs.create({\r\n\tbloodFrenzy: true,\r\n\tsunderArmor: true,\r\n\tcurseOfWeakness: TristateEffect.TristateEffectRegular,\r\n\tcurseOfElements: true,\r\n\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\tjudgementOfWisdom: true,\r\n\tmisery: true,\r\n\ttotemOfWrath: true,\r\n\tshadowMastery: true,\r\n});\r\n\r\n\r\nexport const PreRaid_PRESET = {\r\n\tname: 'Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":43311,\"enchant\":3817,\"gems\":[41398,42156]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":37373,\"enchant\":3808},\r\n\t\t{\"id\":37840,\"enchant\":3605},\r\n\t\t{\"id\":39597,\"enchant\":3832,\"gems\":[40053,40088]},\r\n\t\t{\"id\":43131,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39601,\"enchant\":3604,\"gems\":[40053,0]},\r\n\t\t{\"id\":37407,\"gems\":[42156]},\r\n\t\t{\"id\":37669,\"enchant\":3823},\r\n\t\t{\"id\":37167,\"enchant\":3606,\"gems\":[40053,42156]},\r\n\t\t{\"id\":37685},\r\n\t\t{\"id\":37642},\r\n\t\t{\"id\":37390},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":41384,\"enchant\":3789},\r\n\t\t{\"id\":40704,\"enchant\":3789},\r\n\t\t{\"id\":33507}\r\n\t]}`),\r\n}\r\n\r\nexport const P1_PRESET = {\r\n\tname: 'P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40543,\"enchant\":3817,\"gems\":[41398,40014]},\r\n\t\t{\"id\":44661,\"gems\":[40014]},\r\n\t\t{\"id\":40524,\"enchant\":3808,\"gems\":[40014]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":40523,\"enchant\":3832,\"gems\":[40003,40014]},\r\n\t\t{\"id\":40282,\"enchant\":3845,\"gems\":[42702,0]},\r\n\t\t{\"id\":40520,\"enchant\":3604,\"gems\":[42154,0]},\r\n\t\t{\"id\":40275,\"gems\":[42156]},\r\n\t\t{\"id\":40522,\"enchant\":3823,\"gems\":[39999,42156]},\r\n\t\t{\"id\":40367,\"enchant\":3606,\"gems\":[40058]},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":37390},\r\n\t\t{\"id\":39763,\"enchant\":3789},\r\n\t\t{\"id\":39468,\"enchant\":3789},\r\n\t\t{\"id\":40322}\r\n\t]}`),\r\n};\r\n\r\nexport const P2_PRESET_FT = {\r\n\tname: 'P2 Preset FT',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n        {\"id\":45610,\"enchant\":3817,\"gems\":[41398,42702]},\r\n        {\"id\":45517,\"gems\":[39999]},\r\n        {\"id\":46203,\"enchant\":3808,\"gems\":[39999]},\r\n        {\"id\":45461,\"enchant\":3831,\"gems\":[40014]},\r\n        {\"id\":46205,\"enchant\":3832,\"gems\":[40058,40053]},\r\n        {\"id\":45460,\"enchant\":3845,\"gems\":[39999,0]},\r\n        {\"id\":46200,\"enchant\":3604,\"gems\":[40014,0]},\r\n        {\"id\":45553,\"gems\":[36766,36766,36766]},\r\n        {\"id\":46208,\"enchant\":3823,\"gems\":[39999,39999]},\r\n        {\"id\":45989,\"enchant\":3606,\"gems\":[40053,39999]},\r\n        {\"id\":45456,\"gems\":[39999]},\r\n        {\"id\":46046,\"gems\":[40053]},\r\n        {\"id\":45609},\r\n        {\"id\":46038},\r\n        {\"id\":45612,\"enchant\":3789,\"gems\":[39999]},\r\n        {\"id\":46097,\"enchant\":3789,\"gems\":[40003]},\r\n        {\"id\":40322}\r\n      ]\r\n    }`),\r\n};\r\n\r\nexport const P2_PRESET_WF = {\r\n\tname: 'P2 Preset WF',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{  \"items\": [\r\n        {\"id\":45610,\"enchant\":3817,\"gems\":[41398,42702]},\r\n        {\"id\":45517,\"gems\":[39999]},\r\n        {\"id\":46203,\"enchant\":3808,\"gems\":[39999]},\r\n        {\"id\":45461,\"enchant\":3831,\"gems\":[40052]},\r\n        {\"id\":46205,\"enchant\":3832,\"gems\":[40052,40052]},\r\n        {\"id\":45460,\"enchant\":3845,\"gems\":[39999,0]},\r\n        {\"id\":46200,\"enchant\":3604,\"gems\":[40053,0]},\r\n        {\"id\":45553,\"gems\":[36766,36766,36766]},\r\n        {\"id\":46208,\"enchant\":3823,\"gems\":[39999,39999]},\r\n        {\"id\":45989,\"enchant\":3606,\"gems\":[40053,39999]},\r\n        {\"id\":45456,\"gems\":[39999]},\r\n        {\"id\":45608,\"gems\":[39999]},\r\n        {\"id\":45609},\r\n        {\"id\":46038},\r\n        {\"id\":45132,\"enchant\":3789,\"gems\":[40052]},\r\n        {\"id\":46097,\"enchant\":3789,\"gems\":[39999]},\r\n        {\"id\":40322}\r\n      ]\r\n    }`),\r\n};\r\n\r\nexport const P3_PRESET_ALLIANCE\t = {\r\n\tname: 'P3 Preset [A]',\r\n\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getFaction() == Faction.Alliance,\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{  \"items\": [\r\n\t\t{\"id\":48353,\"enchant\":3817,\"gems\":[41398,40128]},\r\n\t\t{\"id\":47060,\"gems\":[40159]},\r\n\t\t{\"id\":48351,\"enchant\":3808,\"gems\":[40128]},\r\n\t\t{\"id\":47552,\"enchant\":3722,\"gems\":[40159]},\r\n\t\t{\"id\":46965,\"enchant\":3832,\"gems\":[40159,49110,40128]},\r\n\t\t{\"id\":47916,\"enchant\":3845,\"gems\":[40159,0]},\r\n\t\t{\"id\":48354,\"enchant\":3604,\"gems\":[40128,0]},\r\n\t\t{\"id\":47112,\"enchant\":3599,\"gems\":[40128,40159,40128]},\r\n\t\t{\"id\":48352,\"enchant\":3823,\"gems\":[40128,40128]},\r\n\t\t{\"id\":47099,\"enchant\":3606,\"gems\":[40128,40128]},\r\n\t\t{\"id\":46046,\"gems\":[40128]},\r\n\t\t{\"id\":47075,\"gems\":[40128]},\r\n\t\t{\"id\":47188},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":47206,\"enchant\":3789},\r\n\t\t{\"id\":47156,\"enchant\":3789,\"gems\":[40128]},\r\n\t\t{\"id\":47666}\r\n\t]}`),\r\n};\r\n\r\nexport const P3_PRESET_HORDE = {\r\n\tname: 'P3 Preset [H]',\r\n\tenableWhen: (player: Player<Spec.SpecElementalShaman>) => player.getFaction() == Faction.Horde,\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{  \"items\": [\r\n\t\t{\"id\":48358,\"enchant\":3817,\"gems\":[41398,40128]},\r\n\t\t{\"id\":47433,\"gems\":[40159]},\r\n\t\t{\"id\":48360,\"enchant\":3808,\"gems\":[40128]},\r\n\t\t{\"id\":47551,\"enchant\":3722,\"gems\":[40159]},\r\n\t\t{\"id\":47412,\"enchant\":3832,\"gems\":[40159,49110,40128]},\r\n\t\t{\"id\":47989,\"enchant\":3845,\"gems\":[40159,0]},\r\n\t\t{\"id\":48357,\"enchant\":3604,\"gems\":[40128,0]},\r\n\t\t{\"id\":47460,\"enchant\":3599,\"gems\":[40128,40159,40128]},\r\n\t\t{\"id\":48359,\"enchant\":3823,\"gems\":[40128,40128]},\r\n\t\t{\"id\":47456,\"enchant\":3606,\"gems\":[40128,40128]},\r\n\t\t{\"id\":46046,\"gems\":[40128]},\r\n\t\t{\"id\":47443,\"gems\":[40128]},\r\n\t\t{\"id\":47477},\r\n\t\t{\"id\":45609},\r\n\t\t{\"id\":47483,\"enchant\":3789},\r\n\t\t{\"id\":47475,\"enchant\":3789,\"gems\":[40128]},\r\n\t\t{\"id\":47666}\r\n\t]}`),\r\n};\r\n","import { IndividualSimUI } from \"../individual_sim_ui\";\r\nimport { Player } from \"../player\";\r\nimport { ShamanTotems } from \"../proto/shaman\";\r\nimport { ShamanSpecs } from \"../proto_utils/utils\";\r\nimport { EventID } from \"../typed_event\";\r\nimport { ContentBlock } from \"./content_block\";\r\nimport { IconPicker } from \"./icon_picker\";\r\nimport * as InputHelpers from '../components/input_helpers.js';\r\nimport { ActionId } from '../proto_utils/action_id.js';\r\nimport { Input } from \"./input\";\r\nimport { NumberPicker } from \"./number_picker\";\r\nimport { BooleanPicker } from \"./boolean_picker\";\r\n\r\nexport function FireElementalSection(parentElem: HTMLElement, simUI: IndividualSimUI<ShamanSpecs>): ContentBlock {\r\n\tlet contentBlock = new ContentBlock(parentElem, 'fire-elemental-settings', {\r\n\t\theader: { title: 'Fire Elemental' }\r\n\t});\r\n\r\n\tlet fireElementalIconContainer = Input.newGroupContainer();\r\n\tfireElementalIconContainer.classList.add('fire-elemental-icon-container');\r\n\r\n\tcontentBlock.bodyElement.appendChild(fireElementalIconContainer);\r\n\r\n\tconst fireElementalBooleanIconInput = InputHelpers.makeBooleanIconInput<ShamanSpecs, ShamanTotems, Player<ShamanSpecs>>({\r\n\t\tgetModObject: (player: Player<ShamanSpecs>) => player,\r\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems || ShamanTotems.create(),\r\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: ShamanTotems) => {\r\n\t\t\tconst newOptions = player.getSpecOptions();\r\n\t\t\tnewOptions.totems = newVal;\r\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\r\n\t\t\t// Hacky fix ItemSwapping is in the Rotation proto, this will let the Rotation know to update showWhen\r\n\t\t\t// TODO move the ItemSwap enabled to a spec option and have the ItemSwap proto be apart of player.\r\n\t\t\tplayer.rotationChangeEmitter.emit(eventID)\r\n\t\t},\r\n\t\tchangeEmitter: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\r\n\t}, ActionId.fromSpellId(2894), \"useFireElemental\");\r\n\r\n\tnew IconPicker(fireElementalIconContainer, simUI.player, fireElementalBooleanIconInput);\r\n\r\n\tnew NumberPicker(contentBlock.bodyElement, simUI.player, {\r\n\t\tpositive: true,\r\n\t\tlabel: \"Bonus spell power\",\r\n\t\tlabelTooltip: \"Bonus spell power to snapshot Fire Elemental with. Will prioritize dropping Fire Elemental if greater then 0\",\r\n\t\tinline: true,\r\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.bonusSpellpower || 0,\r\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: number) => {\r\n\t\t\tconst newOptions = player.getSpecOptions();\r\n\r\n\t\t\tif (newOptions.totems) {\r\n\t\t\t\tnewOptions.totems.bonusSpellpower = newVal\r\n\t\t\t}\r\n\r\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t\t},\r\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.specOptionsChangeEmitter,\r\n\t})\r\n\r\n\tnew BooleanPicker(contentBlock.bodyElement, simUI.player, {\r\n\t\tlabel: \"Use Tier 10 (4pc)\",\r\n\t\tlabelTooltip: \"Will use Tier 10 (4pc) to snapshot Fire Elemental.\",\r\n\t\tinline: true,\r\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.enhTierTenBonus || false,\r\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newVal: boolean) => {\r\n\t\t\tconst newOptions = player.getSpecOptions();\r\n\r\n\t\t\tif (newOptions.totems) {\r\n\t\t\t\tnewOptions.totems.enhTierTenBonus = newVal\r\n\t\t\t}\r\n\r\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t\t},\r\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => player.currentStatsEmitter,\r\n\t\tshowWhen: (player: Player<ShamanSpecs>) => {\r\n\t\t\tconst hasBonus = player.getCurrentStats().sets.includes('Frost Witch\\'s Battlegear (4pc)');\r\n\t\t\treturn hasBonus\r\n\t\t}\r\n\t})\r\n\r\n\r\n\treturn contentBlock;\r\n}","import { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat, PseudoStat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { TotemsSection } from '../core/components/totem_inputs.js';\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\n\r\nimport * as ShamanInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\nimport { FireElementalSection } from '../core/components/fire_elemental_inputs.js';\r\n\r\nexport class EnhancementShamanSimUI extends IndividualSimUI<Spec.SpecEnhancementShaman> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecEnhancementShaman>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'enhancement-shaman-sim-ui',\r\n\t\t\tcssScheme: 'shaman',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t\t\"Fire Elemental is in a alpha state\",\r\n\t\t\t\t\"Some things regarding weapon imbues need further testing and changes\",\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t],\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 1.48,\r\n\t\t\t\t\t[Stat.StatAgility]: 1.59,\r\n\t\t\t\t\t[Stat.StatStrength]: 1.1,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1.13,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0, //default EP assumes cap\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.91,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.37,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 1.0,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.38,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.81,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.61, //haste is complicated\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.48,\r\n\t\t\t\t\t[Stat.StatExpertise]: 0, //default EP assumes cap\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 5.21,\r\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.21,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.StandardTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tjudgementsOfTheWise: true,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tShamanInputs.ShamanShieldInput,\r\n\t\t\t\tShamanInputs.Bloodlust,\r\n\t\t\t\tShamanInputs.ShamanImbueMH,\r\n\t\t\t\tShamanInputs.ShamanImbueOH,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: ShamanInputs.EnhancementShamanRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.ReplenishmentBuff,\r\n\t\t\t\tIconInputs.MP5Buff,\r\n\t\t\t\tIconInputs.SpellHasteBuff,\r\n\t\t\t\tIconInputs.SpiritBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.BleedDebuff,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tShamanInputs.SyncTypeInput,\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tcustomSections: [\r\n\t\t\t\tTotemsSection,\r\n\t\t\t\tFireElementalSection\r\n\t\t\t],\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.StandardTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_FT_DEFAULT,\r\n\t\t\t\t\tPresets.ROTATION_WF_DEFAULT,\r\n\t\t\t\t\tPresets.ROTATION_PHASE_3,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.PreRaid_PRESET,\r\n\t\t\t\t\tPresets.P1_PRESET,\r\n\t\t\t\t\tPresets.P2_PRESET_FT,\r\n\t\t\t\t\tPresets.P2_PRESET_WF,\r\n\t\t\t\t\tPresets.P3_PRESET_ALLIANCE,\r\n\t\t\t\t\tPresets.P3_PRESET_HORDE,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["Bloodlust","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","id","ActionId","fromSpellId","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","ShamanShield","NoShield","tooltip","actionId","WaterShield","LightningShield","ShamanImbueMH","ShamanImbue","NoImbue","WindfuryWeapon","FlametongueWeapon","text","FlametongueWeaponDownrank","FrostbrandWeapon","ShamanImbueOH","SyncTypeInput","InputHelpers.makeSpecOptionsEnumInput","label","labelTooltip","name","ShamanSyncType","Auto","NoSync","SyncMainhandOffhandSwings","DelayOffhandSwings","EnhancmentItemSwapInputs","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","showWhen","player","getSpecOptions","totems","useFireElemental","getRotation","enableItemSwap","EnhancementShamanRotationConfig","inputs","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationEnumInput","RotationType","Priority","Custom","InputHelpers.makeCustomRotationInput","numColumns","CustomRotationSpell","LightningBolt","LightningBoltWeave","LightningBoltDelayedWeave","ChainLightning","StormstrikeDebuffMissing","Stormstrike","FlameShock","EarthShock","MagmaTotem","FireNova","LavaLash","LavaBurst","FrostShock","rotationType","PrimaryShock","None","Earth","Frost","InputHelpers.makeRotationNumberInput","enableWhen","weaveFlameShock","customRotation","spells","find","customSpell","spell","getTalents","maelstromWeapon","lightningboltWeave","shamanisticRage","StandardTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","ShamanMajorGlyph","GlyphOfFireNova","major2","GlyphOfFlametongueWeapon","major3","GlyphOfFeralSpirit","DefaultRotation","EnhancementShamanRotation","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WindfuryTotem","fire","FireTotem","water","WaterTotem","ManaSpringTotem","maelstromweaponMinStack","autoWeaveDelay","delayGcdWeave","lavaburstWeave","firenovaManaThreshold","shamanisticRageManaThreshold","primaryShock","CustomRotation","CustomSpell","ROTATION_FT_DEFAULT","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","fromJsonString","ROTATION_WF_DEFAULT","ROTATION_PHASE_3","DefaultOptions","EnhancementShamanOptions","shield","bloodlust","imbueMh","imbueOh","syncType","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","arcaneBrilliance","leaderOfThePack","totemOfWrath","wrathOfAirTotem","moonkinAura","sanctifiedRetribution","divineSpirit","battleShout","DefaultDebuffs","Debuffs","bloodFrenzy","sunderArmor","curseOfWeakness","TristateEffectRegular","curseOfElements","faerieFire","judgementOfWisdom","misery","shadowMastery","PreRaid_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","P1_PRESET","P2_PRESET_FT","P2_PRESET_WF","P3_PRESET_ALLIANCE","getFaction","Faction","Alliance","P3_PRESET_HORDE","Horde","FireElementalSection","parentElem","simUI","contentBlock","ContentBlock","header","title","fireElementalIconContainer","Input","newGroupContainer","classList","add","bodyElement","appendChild","fireElementalBooleanIconInput","InputHelpers.makeBooleanIconInput","getModObject","getValue","setValue","eventID","newVal","newOptions","setSpecOptions","rotationChangeEmitter","emit","changeEmitter","specOptionsChangeEmitter","IconPicker","NumberPicker","positive","inline","bonusSpellpower","changedEvent","BooleanPicker","enhTierTenBonus","currentStatsEmitter","getCurrentStats","sets","includes","EnhancementShamanSimUI","IndividualSimUI","constructor","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","StatSpellPower","StatSpellCrit","StatSpellHit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","Presets.P1_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","judgementsOfTheWise","debuffs","Presets.DefaultDebuffs","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.Bloodlust","ShamanInputs.ShamanImbueMH","ShamanInputs.ShamanImbueOH","rotationInputs","ShamanInputs.EnhancementShamanRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MP5Buff","IconInputs.SpellHasteBuff","IconInputs.SpiritBuff","excludeBuffDebuffInputs","IconInputs.BleedDebuff","otherInputs","ShamanInputs.SyncTypeInput","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_FT_DEFAULT","Presets.ROTATION_WF_DEFAULT","Presets.ROTATION_PHASE_3","Presets.PreRaid_PRESET","Presets.P2_PRESET_FT","Presets.P2_PRESET_WF","Presets.P3_PRESET_ALLIANCE","Presets.P3_PRESET_HORDE"],"mappings":"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"}