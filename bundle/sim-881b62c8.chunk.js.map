{"version":3,"file":"sim-881b62c8.chunk.js","sources":["../../../ui/protection_warrior/inputs.ts","../../../ui/protection_warrior/presets.ts","../../../ui/protection_warrior/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\n\r\nimport {\r\n\tWarriorShout,\r\n\tWarriorTalents as WarriorTalents,\r\n\tProtectionWarrior,\r\n\tProtectionWarrior_Rotation as ProtectionWarriorRotation,\r\n\tProtectionWarrior_Rotation_DemoShoutChoice as DemoShoutChoice,\r\n\tProtectionWarrior_Rotation_ThunderClapChoice as ThunderClapChoice,\r\n\tProtectionWarrior_Options as ProtectionWarriorOptions,\r\n\tProtectionWarrior_Rotation_SpellOption as SpellOption,\r\n} from '../core/proto/warrior.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\nimport * as Presets from './presets.js';\r\nimport { SimUI } from '../core/sim_ui.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const StartingRage = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecProtectionWarrior>({\r\n\tfieldName: 'startingRage',\r\n\tlabel: 'Starting Rage',\r\n\tlabelTooltip: 'Initial rage at the start of each iteration.',\r\n});\r\n\r\nexport const ShoutPicker = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecProtectionWarrior, WarriorShout>({\r\n\tfieldName: 'shout',\r\n\tvalues: [\r\n\t\t{ color: 'c79c6e', value: WarriorShout.WarriorShoutNone },\r\n\t\t{ actionId: ActionId.fromSpellId(47436), value: WarriorShout.WarriorShoutBattle },\r\n\t\t{ actionId: ActionId.fromSpellId(469), value: WarriorShout.WarriorShoutCommanding },\r\n\t],\r\n});\r\n\r\n// export const ShatteringThrow = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecProtectionWarrior>({\r\n// \tfieldName: 'useShatteringThrow',\r\n// \tid: ActionId.fromSpellId(64382),\r\n// });\r\n\r\nexport const Munch = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecProtectionWarrior>({\r\n\tfieldName: 'munch',\r\n\tlabel: 'Munching',\r\n\tlabelTooltip: 'Apply \"munching\" to Deep Wounds',\r\n});\r\n\r\nexport const ProtectionWarriorRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeCustomRotationInput<Spec.SpecProtectionWarrior, SpellOption>({\r\n\t\t\tfieldName: 'customRotation',\r\n\t\t\tnumColumns: 3,\r\n\t\t\tvalues: [\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(57823), value: SpellOption.Revenge },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(30356), value: SpellOption.ShieldSlam },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(469), value: SpellOption.Shout },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25264), value: SpellOption.ThunderClap },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25203), value: SpellOption.DemoralizingShout },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(47486), value: SpellOption.MortalStrike },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(47498), value: SpellOption.Devastate },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(25225), value: SpellOption.SunderArmor },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(12809), value: SpellOption.ConcussionBlow },\r\n\t\t\t\t{ actionId: ActionId.fromSpellId(46968), value: SpellOption.Shockwave },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecProtectionWarrior>({\r\n\t\t\tfieldName: 'hsRageThreshold',\r\n\t\t\tlabel: 'HS rage threshold',\r\n\t\t\tlabelTooltip: 'Heroic Strike when rage is above:',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecProtectionWarrior>({\r\n\t\t\tfieldName: 'prioSslamOnShieldBlock',\r\n\t\t\tlabel: 'Prio SSlam on Shield Block',\r\n\t\t\tlabelTooltip: 'The rotation code will prio SSlam over Revenge during active shield block windows.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecProtectionWarrior, DemoShoutChoice>({\r\n\t\t\tfieldName: 'demoShoutChoice',\r\n\t\t\tlabel: 'Demo Shout',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Never', value: DemoShoutChoice.DemoShoutChoiceNone },\r\n\t\t\t\t{ name: 'Maintain Debuff', value: DemoShoutChoice.DemoShoutChoiceMaintain },\r\n\t\t\t\t{ name: 'Filler', value: DemoShoutChoice.DemoShoutChoiceFiller },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecProtectionWarrior, ThunderClapChoice>({\r\n\t\t\tfieldName: 'thunderClapChoice',\r\n\t\t\tlabel: 'Thunder Clap',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Never', value: ThunderClapChoice.ThunderClapChoiceNone },\r\n\t\t\t\t{ name: 'Maintain Debuff', value: ThunderClapChoice.ThunderClapChoiceMaintain },\r\n\t\t\t\t{ name: 'On CD', value: ThunderClapChoice.ThunderClapChoiceOnCD },\r\n\t\t\t],\r\n\t\t}),\r\n\t],\r\n};\r\n","import { CustomRotation, CustomSpell } from '../core/proto/common.js';\r\nimport { BattleElixir, Consumes, Explosive, GuardianElixir } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\nimport {\r\n\tWarriorShout,\r\n\tProtectionWarrior_Rotation as ProtectionWarriorRotation,\r\n\tProtectionWarrior_Rotation_DemoShoutChoice as DemoShoutChoice,\r\n\tProtectionWarrior_Rotation_ThunderClapChoice as ThunderClapChoice,\r\n\tProtectionWarrior_Options as ProtectionWarriorOptions,\r\n\tProtectionWarrior_Rotation_SpellOption as SpellOption,\r\n\tWarriorMajorGlyph,\r\n\tWarriorMinorGlyph,\r\n} from '../core/proto/warrior.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const StandardTalents = {\r\n\tname: 'Standard',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '2500030023-302-053351225000012521030113321',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: WarriorMajorGlyph.GlyphOfBlocking,\r\n\t\t\tmajor2: WarriorMajorGlyph.GlyphOfVigilance,\r\n\t\t\tmajor3: WarriorMajorGlyph.GlyphOfDevastate,\r\n\t\t\tminor1: WarriorMinorGlyph.GlyphOfCharge,\r\n\t\t\tminor2: WarriorMinorGlyph.GlyphOfThunderClap,\r\n\t\t\tminor3: WarriorMinorGlyph.GlyphOfCommand,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const UATalents = {\r\n\tname: 'UA',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '35023301230051002020120002-2-05035122500000252',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: WarriorMajorGlyph.GlyphOfRevenge,\r\n\t\t\tmajor2: WarriorMajorGlyph.GlyphOfHeroicStrike,\r\n\t\t\tmajor3: WarriorMajorGlyph.GlyphOfSweepingStrikes,\r\n\t\t\tminor1: WarriorMinorGlyph.GlyphOfCharge,\r\n\t\t\tminor2: WarriorMinorGlyph.GlyphOfThunderClap,\r\n\t\t\tminor3: WarriorMinorGlyph.GlyphOfCommand,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = ProtectionWarriorRotation.create({\r\n\tcustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: SpellOption.ShieldSlam }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Revenge }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Shout }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.ThunderClap }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.DemoralizingShout }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.MortalStrike }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Devastate }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.SunderArmor }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.ConcussionBlow }),\r\n\t\t\tCustomSpell.create({ spell: SpellOption.Shockwave }),\r\n\t\t],\r\n\t}),\r\n\tdemoShoutChoice: DemoShoutChoice.DemoShoutChoiceNone,\r\n\tthunderClapChoice: ThunderClapChoice.ThunderClapChoiceNone,\r\n\thsRageThreshold: 30,\r\n});\r\n\r\nexport const ROTATION_DEFAULT = {\r\n\tname: 'Default',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: ProtectionWarriorRotation.toJsonString(ProtectionWarriorRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47440}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t\t{\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRage\":{}},\"rhs\":{\"const\":{\"val\":\"30\"}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":47450}}}},\r\n\t\t\t\t{\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47488}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57823}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"auraShouldRefresh\":{\"sourceUnit\":{\"type\":\"Self\"},\"auraId\":{\"spellId\":47440},\"maxOverlap\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":47440}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":47502},\"maxOverlap\":{\"const\":{\"val\":\"2s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":47502}}}},\r\n\t\t\t\t{\"action\":{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":47437},\"maxOverlap\":{\"const\":{\"val\":\"2s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":25203}}}},\r\n\t\t\t\t{\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47498}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const DefaultOptions = ProtectionWarriorOptions.create({\r\n\tshout: WarriorShout.WarriorShoutCommanding,\r\n\tuseShatteringThrow: false,\r\n\tstartingRage: 0,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tbattleElixir: BattleElixir.ElixirOfExpertise,\r\n\tguardianElixir: GuardianElixir.ElixirOfProtection,\r\n\tfood: Food.FoodDragonfinFilet,\r\n\tdefaultPotion: Potions.IndestructiblePotion,\r\n\tprepopPotion: Potions.IndestructiblePotion,\r\n\tthermalSapper: true,\r\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\r\n});\r\n\r\nexport const P1_PRERAID_BALANCED_PRESET = {\r\n\tname: 'P1 Pre-Raid Balanced Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42549,\"enchant\":3818,\"gems\":[41380,40015]},\r\n\t\t{\"id\":40679},\r\n\t\t{\"id\":37814,\"enchant\":3852},\r\n\t\t{\"id\":37728,\"enchant\":3605},\r\n\t\t{\"id\":39611,\"enchant\":1953,\"gems\":[40008,40008]},\r\n\t\t{\"id\":37620,\"enchant\":3850,\"gems\":[0]},\r\n\t\t{\"id\":39622,\"enchant\":3860,\"gems\":[40034,0]},\r\n\t\t{\"id\":37379,\"enchant\":3601,\"gems\":[40034,36767]},\r\n\t\t{\"id\":43500,\"enchant\":3822,\"gems\":[40034]},\r\n\t\t{\"id\":44201,\"enchant\":3232},\r\n\t\t{\"id\":37784},\r\n\t\t{\"id\":37186},\r\n\t\t{\"id\":37220},\r\n\t\t{\"id\":44063,\"gems\":[36767,40089]},\r\n\t\t{\"id\":37401,\"enchant\":3788},\r\n\t\t{\"id\":43085,\"enchant\":3849},\r\n\t\t{\"id\":41168,\"gems\":[36767]}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_BALANCED_PRESET = {\r\n\tname: 'P1 Balanced Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{  \"items\": [\r\n\t\t{\"id\":40546,\"enchant\":3818,\"gems\":[41380,40034]},\r\n\t\t{\"id\":40387},\r\n\t\t{\"id\":39704,\"enchant\":3852,\"gems\":[40034]},\r\n\t\t{\"id\":40722,\"enchant\":3605},\r\n\t\t{\"id\":44000,\"enchant\":3832,\"gems\":[40034,40015]},\r\n\t\t{\"id\":39764,\"enchant\":3850,\"gems\":[0]},\r\n\t\t{\"id\":40545,\"enchant\":3860,\"gems\":[40034,0]},\r\n\t\t{\"id\":39759,\"enchant\":3601,\"gems\":[40008,36767]},\r\n\t\t{\"id\":40589,\"enchant\":3822},\r\n\t\t{\"id\":39717,\"enchant\":3232,\"gems\":[40089]},\r\n\t\t{\"id\":40370},\r\n\t\t{\"id\":40718},\r\n\t\t{\"id\":40257},\r\n\t\t{\"id\":44063,\"gems\":[36767,40089]},\r\n\t\t{\"id\":40402,\"enchant\":3788},\r\n\t\t{\"id\":40400,\"enchant\":3849},\r\n\t\t{\"id\":41168,\"gems\":[36767]}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_SURVIVAL_PRESET = {\r\n\tname: 'P2 Survival Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{\r\n      \"items\": [\r\n        {\"id\":46166,\"enchant\":3818,\"gems\":[41380,40008]},\r\n        {\"id\":45485,\"gems\":[40008]},\r\n        {\"id\":46167,\"enchant\":3852,\"gems\":[40008]},\r\n        {\"id\":45496,\"enchant\":3605,\"gems\":[40023]},\r\n        {\"id\":46162,\"enchant\":3832,\"gems\":[40008,40008]},\r\n        {\"id\":45111,\"enchant\":3850,\"gems\":[0]},\r\n        {\"id\":45487,\"enchant\":3860,\"gems\":[40008,40008,0]},\r\n        {\"id\":45139,\"enchant\":3601,\"gems\":[40008]},\r\n        {\"id\":46169,\"enchant\":3822,\"gems\":[40088,40008]},\r\n        {\"id\":45988,\"enchant\":3232,\"gems\":[36767,36767]},\r\n        {\"id\":45471,\"gems\":[45880]},\r\n        {\"id\":45247},\r\n        {\"id\":45158},\r\n        {\"id\":46021},\r\n        {\"id\":45442,\"enchant\":3788,\"gems\":[40034]},\r\n        {\"id\":45587,\"enchant\":3849,\"gems\":[36767]},\r\n        {\"id\":45137,\"enchant\":3608}\r\n      ]\r\n    }`),\r\n};\r\n","import { RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat, PseudoStat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { TypedEvent } from '../core/typed_event.js';\r\n\r\nimport { ProtectionWarrior, ProtectionWarrior_Rotation as ProtectionWarriorRotation, WarriorTalents as WarriorTalents, ProtectionWarrior_Options as ProtectionWarriorOptions } from '../core/proto/warrior.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nimport * as ProtectionWarriorInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class ProtectionWarriorSimUI extends IndividualSimUI<Spec.SpecProtectionWarrior> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionWarrior>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'protection-warrior-sim-ui',\r\n\t\t\tcssScheme: 'warrior',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatBonusArmor,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatDefense,\r\n\t\t\t\tStat.StatBlock,\r\n\t\t\t\tStat.StatBlockValue,\r\n\t\t\t\tStat.StatDodge,\r\n\t\t\t\tStat.StatParry,\r\n\t\t\t\tStat.StatResilience,\r\n\t\t\t\tStat.StatNatureResistance,\r\n\t\t\t\tStat.StatShadowResistance,\r\n\t\t\t\tStat.StatFrostResistance,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatBonusArmor,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatDefense,\r\n\t\t\t\tStat.StatBlock,\r\n\t\t\t\tStat.StatBlockValue,\r\n\t\t\t\tStat.StatDodge,\r\n\t\t\t\tStat.StatParry,\r\n\t\t\t\tStat.StatResilience,\r\n\t\t\t\tStat.StatNatureResistance,\r\n\t\t\t\tStat.StatShadowResistance,\r\n\t\t\t\tStat.StatFrostResistance,\r\n\t\t\t],\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P2_SURVIVAL_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatArmor]: 0.174,\r\n\t\t\t\t\t[Stat.StatBonusArmor]: 0.155,\r\n\t\t\t\t\t[Stat.StatStamina]: 2.336,\r\n\t\t\t\t\t[Stat.StatStrength]: 1.555,\r\n\t\t\t\t\t[Stat.StatAgility]: 2.771,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 0.32,\r\n\t\t\t\t\t[Stat.StatExpertise]: 1.44,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.432,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.925,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 0.431,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 1.055,\r\n\t\t\t\t\t[Stat.StatBlock]: 1.320,\r\n\t\t\t\t\t[Stat.StatBlockValue]: 1.373,\r\n\t\t\t\t\t[Stat.StatDodge]: 2.606,\r\n\t\t\t\t\t[Stat.StatParry]: 2.649,\r\n\t\t\t\t\t[Stat.StatDefense]: 3.305,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 6.081,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.StandardTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tabominationsMight: true,\r\n\t\t\t\t\tswiftRetribution: true,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\ticyTalons: true,\r\n\t\t\t\t\tretributionAura: true,\r\n\t\t\t\t\tthorns: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tshadowProtection: true,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tblessingOfSanctuary: true,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tmangle: true,\r\n\t\t\t\t\tvindication: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tinsectSwarm: true,\r\n\t\t\t\t\tbloodFrenzy: true,\r\n\t\t\t\t\tjudgementOfLight: true,\r\n\t\t\t\t\theartOfTheCrusader: true,\r\n\t\t\t\t\tfrostFever: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tProtectionWarriorInputs.ShoutPicker,\r\n\t\t\t\t// ProtectionWarriorInputs.ShatteringThrow,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: ProtectionWarriorInputs.ProtectionWarriorRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.HealthBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.IncomingHps,\r\n\t\t\t\t\tOtherInputs.HealingCadence,\r\n\t\t\t\t\tOtherInputs.HealingCadenceVariation,\r\n\t\t\t\t\tOtherInputs.BurstWindow,\r\n\t\t\t\t\tOtherInputs.HpPercentForDefensives,\r\n\t\t\t\t\tOtherInputs.InspirationUptime,\r\n\t\t\t\t\tProtectionWarriorInputs.StartingRage,\r\n\t\t\t\t\tProtectionWarriorInputs.Munch,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.StandardTalents,\r\n\t\t\t\t\tPresets.UATalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_DEFAULT,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.P1_PRERAID_BALANCED_PRESET,\r\n\t\t\t\t\tPresets.P1_BALANCED_PRESET,\r\n\t\t\t\t\tPresets.P2_SURVIVAL_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["StartingRage","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","ShoutPicker","InputHelpers.makeSpecOptionsEnumIconInput","values","color","value","WarriorShout","WarriorShoutNone","actionId","ActionId","fromSpellId","WarriorShoutBattle","WarriorShoutCommanding","Munch","InputHelpers.makeSpecOptionsBooleanInput","ProtectionWarriorRotationConfig","inputs","InputHelpers.makeCustomRotationInput","numColumns","SpellOption","Revenge","ShieldSlam","Shout","ThunderClap","DemoralizingShout","MortalStrike","Devastate","SunderArmor","ConcussionBlow","Shockwave","InputHelpers.makeRotationNumberInput","InputHelpers.makeRotationBooleanInput","InputHelpers.makeRotationEnumInput","name","DemoShoutChoice","DemoShoutChoiceNone","DemoShoutChoiceMaintain","DemoShoutChoiceFiller","ThunderClapChoice","ThunderClapChoiceNone","ThunderClapChoiceMaintain","ThunderClapChoiceOnCD","StandardTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","WarriorMajorGlyph","GlyphOfBlocking","major2","GlyphOfVigilance","major3","GlyphOfDevastate","minor1","WarriorMinorGlyph","GlyphOfCharge","minor2","GlyphOfThunderClap","minor3","GlyphOfCommand","UATalents","GlyphOfRevenge","GlyphOfHeroicStrike","GlyphOfSweepingStrikes","DefaultRotation","ProtectionWarriorRotation","customRotation","CustomRotation","spells","CustomSpell","spell","demoShoutChoice","thunderClapChoice","hsRageThreshold","ROTATION_DEFAULT","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","fromJsonString","DefaultOptions","ProtectionWarriorOptions","shout","useShatteringThrow","startingRage","DefaultConsumes","Consumes","battleElixir","BattleElixir","ElixirOfExpertise","guardianElixir","GuardianElixir","ElixirOfProtection","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","P1_PRERAID_BALANCED_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","P1_BALANCED_PRESET","P2_SURVIVAL_PRESET","ProtectionWarriorSimUI","IndividualSimUI","constructor","parentElem","player","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatBonusArmor","StatArmorPenetration","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","defaults","Presets.P2_SURVIVAL_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","abominationsMight","swiftRetribution","bloodlust","strengthOfEarthTotem","leaderOfThePack","sanctifiedRetribution","devotionAura","stoneskinTotem","icyTalons","retributionAura","thorns","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","debuffs","Debuffs","sunderArmor","mangle","vindication","faerieFire","insectSwarm","bloodFrenzy","judgementOfLight","heartOfTheCrusader","frostFever","playerIconInputs","ProtectionWarriorInputs.ShoutPicker","rotationInputs","ProtectionWarriorInputs.ProtectionWarriorRotationConfig","includeBuffDebuffInputs","IconInputs.HealthBuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionWarriorInputs.StartingRage","ProtectionWarriorInputs.Munch","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.UATalents","rotations","Presets.ROTATION_DEFAULT","Presets.P1_PRERAID_BALANCED_PRESET","Presets.P1_BALANCED_PRESET"],"mappings":"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"}