{"version":3,"file":"sim-ffe75fb1.chunk.js","sources":["../../../ui/tank_deathknight/inputs.ts","../../../ui/tank_deathknight/presets.ts","../../../ui/tank_deathknight/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\r\n\r\n\r\nimport {\r\n\tDeathknightTalents as DeathknightTalents,\r\n\tDeathknight_Rotation as DeathknightRotation,\r\n\tDeathknight_Options as DeathknightOptions,\r\n\tTankDeathknight_Rotation_OptimizationSetting as OptimizationSetting,\r\n\tTankDeathknight_Rotation_Opener as Opener,\r\n\tTankDeathknight_Rotation_BloodSpell as BloodSpell,\r\n\tTankDeathknight_Rotation_Presence as Presence,\r\n\tTankDeathknight_Rotation_BloodTapPrio as BloodTapPrio,\r\n} from '../core/proto/deathknight.js';\r\n\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\nimport { Player } from '../core/player';\r\nimport { TypedEvent } from '../core/typed_event';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const StartingRunicPower = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecTankDeathknight>({\r\n\tfieldName: 'startingRunicPower',\r\n\tlabel: 'Starting Runic Power',\r\n\tlabelTooltip: 'Initial RP at the start of each iteration.',\r\n})\r\n\r\nexport const DefensiveCdDelay = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecTankDeathknight>({\r\n\tfieldName: 'defensiveDelay',\r\n\tlabel: 'Defensives Delay',\r\n\tlabelTooltip: 'Minimum delay between using more defensive cooldowns.',\r\n})\r\n\r\nexport const TankDeathKnightRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, Presence>({\r\n\t\t\tfieldName: 'presence',\r\n\t\t\tlabel: 'Presence',\r\n\t\t\tlabelTooltip: 'Presence to be in during the encounter.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Blood', value: Presence.Blood },\r\n\t\t\t\t{ name: 'Frost', value: Presence.Frost },\r\n\t\t\t\t{ name: 'Unholy', value: Presence.Unholy },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, Opener>({\r\n\t\t\tfieldName: 'opener',\r\n\t\t\tlabel: 'Opener',\r\n\t\t\tlabelTooltip: 'Chose what opener to perform:<br>\\\r\n\t\t\t\t<b>Regular</b>: Regular opener.<br>\\\r\n\t\t\t\t<b>Threat</b>: Full IT spam for max threat.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Regular', value: Opener.Regular },\r\n\t\t\t\t{ name: 'Threat', value: Opener.Threat },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, OptimizationSetting>({\r\n\t\t\tfieldName: 'optimizationSetting',\r\n\t\t\tlabel: 'Optimization Setting',\r\n\t\t\tlabelTooltip: 'Chose what metric to optimize:<br>\\\r\n\t\t\t\t<b>Hps</b>: Prioritizes holding runes for healing after damage taken.<br>\\\r\n\t\t\t\t<b>Tps</b>: Prioritizes spending runes for icy touch spam.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Hps', value: OptimizationSetting.Hps },\r\n\t\t\t\t{ name: 'Tps', value: OptimizationSetting.Tps },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, BloodSpell>({\r\n\t\t\tfieldName: 'bloodSpell',\r\n\t\t\tlabel: 'Blood Spell',\r\n\t\t\tlabelTooltip: 'Chose what blood rune spender to use.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Blood Strike', value: BloodSpell.BloodStrike },\r\n\t\t\t\t{ name: 'Blood Boil', value: BloodSpell.BloodBoil },\r\n\t\t\t\t{ name: 'Heart Strike', value: BloodSpell.HeartStrike },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecTankDeathknight, BloodTapPrio>({\r\n\t\t\tfieldName: 'bloodTapPrio',\r\n\t\t\tlabel: 'Blood Tap',\r\n\t\t\tlabelTooltip: 'Chose how to use Blood Tap:<br>\\\r\n\t\t\t\t<b>Defensive</b>: Save Blood Tap for activating defensive cds.<br>\\\r\n\t\t\t\t<b>Offensive</b>: Use Blood Tap for extra Icy Touches.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Defensive', value: BloodTapPrio.Defensive },\r\n\t\t\t\t{ name: 'Offensive', value: BloodTapPrio.Offensive },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecTankDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t],\r\n};\r\n","import { Consumes, Spec } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport {\r\n\tTankDeathknight_Rotation as TankDeathKnightRotation,\r\n\tTankDeathknight_Options as TankDeathKnightOptions,\r\n\tDeathknightMajorGlyph,\r\n\tDeathknightMinorGlyph,\r\n\tTankDeathknight_Rotation_Opener as Opener,\r\n\tTankDeathknight_Rotation_OptimizationSetting as OptimizationSetting,\r\n\tTankDeathknight_Rotation_BloodSpell as BloodSpell,\r\n\tTankDeathknight_Rotation_Presence as Presence,\r\n} from '../core/proto/deathknight.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nexport const BloodTalents = {\r\n\tname: 'Blood',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005512153330030320102013-3050505000023-005',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const BloodAggroTalents = {\r\n\tname: 'Blood Aggro',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '0355220530303303201020131301--0052003050032',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDancingRuneWeapon,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DoubleBuffBloodTalents = {\r\n\tname: '2B Blood',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005512153330030320102013-3050505000023201-002',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const FrostTalents = {\r\n\tname: 'Frost',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '005510003-3050535000223301030023310035-005',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DoubleBuffFrostTalents = {\r\n\tname: '2B Frost',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '00551005303003002-305053510022330100002301-005',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfRuneStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkCommand,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfBloodTap,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = TankDeathKnightRotation.create({\r\n\topener: Opener.Threat,\r\n\toptimizationSetting: OptimizationSetting.Hps,\r\n\tbloodSpell: BloodSpell.BloodStrike,\r\n\tpresence: Presence.Frost,\r\n});\r\n\r\nexport const DefaultOptions = TankDeathKnightOptions.create({\r\n\tstartingRunicPower: 0,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfStoneblood,\r\n\tfood: Food.FoodDragonfinFilet,\r\n\tdefaultPotion: Potions.IndestructiblePotion,\r\n\tprepopPotion: Potions.IndestructiblePotion,\r\n});\r\n\r\nexport const BLOOD_LEGACY_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Blood Legacy',\r\n\tenableWhen: (player: Player<Spec.SpecTankDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: TankDeathKnightRotation.toJsonString(DefaultRotation),\r\n\t}),\r\n}\r\n\r\nexport const BLOOD_IT_SPAM_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Blood Icy Touch APL',\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: TankDeathKnightRotation.toJsonString(DefaultRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48263}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"40%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48792}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"40%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":55233}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"60%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48982}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"60%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48707}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"60%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48743}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"40\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":56815}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55078}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}}]}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49924}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentRuneCount\":{\"runeType\":\"RuneDeath\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":47568}}}]}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49930}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"80\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const BLOOD_AGGRO_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Blood Aggro APL',\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: TankDeathKnightRotation.toJsonString(DefaultRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48263}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"40%\"}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":55233}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":48792}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"40%\"}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":48792}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":55233}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"60%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48707}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"currentHealthPercent\":{}},\"rhs\":{\"const\":{\"val\":\"60%\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":48743}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"80\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":56815}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49016}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49028}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55262}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49924}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"80\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const P1_BLOOD_PRESET = {\r\n\tname: 'P1 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":40565,\"enchant\":3878,\"gems\":[41380,36767]},\r\n\t\t{\"id\":40387},\r\n\t\t{\"id\":39704,\"enchant\":3852,\"gems\":[40008]},\r\n\t\t{\"id\":40252,\"enchant\":3605},\r\n\t\t{\"id\":40559,\"gems\":[40008,40022]},\r\n\t\t{\"id\":40306,\"enchant\":3850,\"gems\":[40008,0]},\r\n\t\t{\"id\":40563,\"enchant\":3860,\"gems\":[40008,0]},\r\n\t\t{\"id\":39759,\"gems\":[40008,40008]},\r\n\t\t{\"id\":40567,\"enchant\":3822,\"gems\":[40008,40008]},\r\n\t\t{\"id\":40297,\"enchant\":3232},\r\n\t\t{\"id\":40718},\r\n\t\t{\"id\":40107},\r\n\t\t{\"id\":44063,\"gems\":[36767,36767]},\r\n\t\t{\"id\":42341,\"gems\":[40008,40008]},\r\n\t\t{\"id\":40406,\"enchant\":3847},\r\n\t\t{},\r\n\t\t{\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_BLOOD_PRESET = {\r\n\tname: 'P2 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":46120,\"enchant\":3878,\"gems\":[41380,36767]},\r\n\t\t  {\"id\":45485,\"gems\":[40008]},\r\n\t\t  {\"id\":46122,\"enchant\":3852,\"gems\":[40008]},\r\n\t\t  {\"id\":45496,\"enchant\":3605,\"gems\":[40022]},\r\n\t\t  {\"id\":46118,\"gems\":[36767,36767]},\r\n\t\t  {\"id\":45111,\"enchant\":3850,\"gems\":[0]},\r\n\t\t  {\"id\":46119,\"enchant\":3860,\"gems\":[40008,0]},\r\n\t\t  {\"id\":45551,\"gems\":[40008,40008,40008]},\r\n\t\t  {\"id\":45594,\"enchant\":3822,\"gems\":[40008,40008,40008]},\r\n\t\t  {\"id\":45988,\"enchant\":3232,\"gems\":[40008,40008]},\r\n\t\t  {\"id\":45471,\"gems\":[40008]},\r\n\t\t  {\"id\":45326},\r\n\t\t  {\"id\":45158},\r\n\t\t  {\"id\":46021},\r\n\t\t  {\"id\":45533,\"enchant\":3370,\"gems\":[40008,40008]},\r\n\t\t  {},\r\n\t\t  {\"id\":45144}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_FROST_PRESET = {\r\n\tname: 'P1 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":40565,\"enchant\":3878,\"gems\":[41380,36767]},\r\n\t\t  {\"id\":40387},\r\n\t\t  {\"id\":40568,\"enchant\":3852,\"gems\":[40008]},\r\n\t\t  {\"id\":40252,\"enchant\":3605},\r\n\t\t  {\"id\":40559,\"gems\":[40008,40022]},\r\n\t\t  {\"id\":40306,\"enchant\":3850,\"gems\":[40008,0]},\r\n\t\t  {\"id\":40563,\"enchant\":3860,\"gems\":[40008,0]},\r\n\t\t  {\"id\":39759,\"gems\":[40008,40008]},\r\n\t\t  {\"id\":40589,\"enchant\":3822},\r\n\t\t  {\"id\":40297,\"enchant\":3232},\r\n\t\t  {\"id\":40718},\r\n\t\t  {\"id\":40107},\r\n\t\t  {\"id\":44063,\"gems\":[36767,36767]},\r\n\t\t  {\"id\":40257},\r\n\t\t  {\"id\":40345,\"enchant\":3370},\r\n\t\t  {\"id\":40345,\"enchant\":3368},\r\n\t\t  {\"id\":40714}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_FROST_PRESET = {\r\n\tname: 'P2 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":46120,\"enchant\":3878,\"gems\":[41380,36767]},\r\n\t\t  {\"id\":45485,\"gems\":[40008]},\r\n\t\t  {\"id\":46122,\"enchant\":3852,\"gems\":[40008]},\r\n\t\t  {\"id\":45496,\"enchant\":3605,\"gems\":[40022]},\r\n\t\t  {\"id\":46118,\"gems\":[36767,36767]},\r\n\t\t  {\"id\":45111,\"enchant\":3850,\"gems\":[0]},\r\n\t\t  {\"id\":46119,\"enchant\":3860,\"gems\":[40008,0]},\r\n\t\t  {\"id\":45551,\"gems\":[40008,40008,40008]},\r\n\t\t  {\"id\":45594,\"enchant\":3822,\"gems\":[40008,40008,40008]},\r\n\t\t  {\"id\":45988,\"enchant\":3232,\"gems\":[40008,40008]},\r\n\t\t  {\"id\":45471,\"gems\":[40008]},\r\n\t\t  {\"id\":45326},\r\n\t\t  {\"id\":45158},\r\n\t\t  {\"id\":46021},\r\n\t\t  {\"id\":46097,\"enchant\":3370,\"gems\":[40008]},\r\n\t\t  {\"id\":46097,\"enchant\":3368,\"gems\":[40008]},\r\n\t\t  {\"id\":45144}\r\n  ]}`),\r\n};\r\n","import { RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { Class } from '../core/proto/common.js';\r\nimport { Consumes } from '../core/proto/common.js';\r\nimport { Encounter } from '../core/proto/common.js';\r\nimport { ItemSlot } from '../core/proto/common.js';\r\nimport { MobType } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat, PseudoStat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Sim } from '../core/sim.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { TotemsSection } from '../core/components/totem_inputs.js';\r\n\r\nimport { TankDeathknight, TankDeathknight_Rotation as DeathKnightRotation, DeathknightTalents as DeathKnightTalents, TankDeathknight_Options as DeathKnightOptions } from '../core/proto/deathknight.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nimport * as DeathKnightInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class TankDeathknightSimUI extends IndividualSimUI<Spec.SpecTankDeathknight> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecTankDeathknight>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'tank-deathknight-sim-ui',\r\n\t\t\tcssScheme: 'death-knight',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t\t\"<p>Defensive CDs use is very basic and wip.</p>\"\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatBonusArmor,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatDefense,\r\n\t\t\t\tStat.StatDodge,\r\n\t\t\t\tStat.StatParry,\r\n\t\t\t\tStat.StatResilience,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatNatureResistance,\r\n\t\t\t\tStat.StatShadowResistance,\r\n\t\t\t\tStat.StatFrostResistance,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatBonusArmor,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatDefense,\r\n\t\t\t\tStat.StatDodge,\r\n\t\t\t\tStat.StatParry,\r\n\t\t\t\tStat.StatResilience,\r\n\t\t\t\tStat.StatNatureResistance,\r\n\t\t\t\tStat.StatShadowResistance,\r\n\t\t\t\tStat.StatFrostResistance,\r\n\t\t\t],\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P2_BLOOD_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatArmor]: 0.05,\r\n\t\t\t\t\t[Stat.StatBonusArmor]: 0.03,\r\n\t\t\t\t\t[Stat.StatStamina]: 1,\r\n\t\t\t\t\t[Stat.StatStrength]: 0.33,\r\n\t\t\t\t\t[Stat.StatAgility]: 0.6,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 0.06,\r\n\t\t\t\t\t[Stat.StatExpertise]: 0.67,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 0.67,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.28,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 0.21,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.19,\r\n\t\t\t\t\t[Stat.StatBlock]: 0.35,\r\n\t\t\t\t\t[Stat.StatBlockValue]: 0.59,\r\n\t\t\t\t\t[Stat.StatDodge]: 0.7,\r\n\t\t\t\t\t[Stat.StatParry]: 0.58,\r\n\t\t\t\t\t[Stat.StatDefense]: 0.8,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.10,\r\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 0.0,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.BloodTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tretributionAura: true,\r\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tswiftRetribution: true,\r\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\ticyTalons: true,\r\n\t\t\t\t\tabominationsMight: true,\r\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tblessingOfSanctuary: true,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tbloodFrenzy: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tmisery: true,\r\n\t\t\t\t\tebonPlaguebringer: true,\r\n\t\t\t\t\tmangle: true,\r\n\t\t\t\t\theartOfTheCrusader: true,\r\n\t\t\t\t\tdemoralizingShout: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tfrostFever: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tinsectSwarm: true,\r\n\t\t\t\t\tjudgementOfLight: true,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: DeathKnightInputs.TankDeathKnightRotationConfig,\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.SpellDamageDebuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.HpPercentForDefensives,\r\n\t\t\t\t\tOtherInputs.IncomingHps,\r\n\t\t\t\t\tOtherInputs.HealingCadence,\r\n\t\t\t\t\tOtherInputs.HealingCadenceVariation,\r\n\t\t\t\t\tOtherInputs.BurstWindow,\r\n\t\t\t\t\tOtherInputs.InspirationUptime,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t\tDeathKnightInputs.StartingRunicPower,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.BLOOD_LEGACY_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.BLOOD_IT_SPAM_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.BLOOD_AGGRO_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.BloodTalents,\r\n\t\t\t\t\tPresets.BloodAggroTalents,\r\n\t\t\t\t\tPresets.DoubleBuffBloodTalents,\r\n\t\t\t\t\tPresets.FrostTalents,\r\n\t\t\t\t\tPresets.DoubleBuffFrostTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.P1_BLOOD_PRESET,\r\n\t\t\t\t\tPresets.P1_FROST_PRESET,\r\n\t\t\t\t\tPresets.P2_BLOOD_PRESET,\r\n\t\t\t\t\tPresets.P2_FROST_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["StartingRunicPower","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","TankDeathKnightRotationConfig","inputs","InputHelpers.makeRotationEnumInput","values","name","value","Presence","Blood","Frost","Unholy","changeEmitter","player","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","Opener","Regular","Threat","OptimizationSetting","Hps","Tps","BloodSpell","BloodStrike","BloodBoil","HeartStrike","BloodTapPrio","Defensive","Offensive","BloodTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","DeathknightMajorGlyph","GlyphOfDisease","major2","GlyphOfRuneStrike","major3","GlyphOfDarkCommand","minor1","DeathknightMinorGlyph","GlyphOfHornOfWinter","minor2","GlyphOfBloodTap","minor3","GlyphOfRaiseDead","BloodAggroTalents","GlyphOfDancingRuneWeapon","DoubleBuffBloodTalents","FrostTalents","DoubleBuffFrostTalents","DefaultRotation","TankDeathKnightRotation","opener","optimizationSetting","bloodSpell","presence","DefaultOptions","TankDeathKnightOptions","startingRunicPower","DefaultConsumes","Consumes","flask","Flask","FlaskOfStoneblood","food","Food","FoodDragonfinFilet","defaultPotion","Potions","IndestructiblePotion","prepopPotion","BLOOD_LEGACY_PRESET_LEGACY_DEFAULT","enableWhen","getTalentTree","rotation","SavedRotation","specRotationOptionsJson","toJsonString","BLOOD_IT_SPAM_ROTATION_PRESET_DEFAULT","APLRotation","fromJsonString","BLOOD_AGGRO_ROTATION_PRESET_DEFAULT","P1_BLOOD_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","gear","EquipmentSpec","P2_BLOOD_PRESET","P1_FROST_PRESET","P2_FROST_PRESET","TankDeathknightSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatSpellHit","StatSpellCrit","StatSpellHaste","StatHealth","StatArmor","StatBonusArmor","StatArmorPenetration","StatDefense","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","defaults","Presets.P2_BLOOD_PRESET","epWeights","Stats","fromMap","StatBlock","StatBlockValue","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","talents","Presets.BloodTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","retributionAura","powerWordFortitude","TristateEffect","TristateEffectImproved","giftOfTheWild","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","misery","ebonPlaguebringer","mangle","heartOfTheCrusader","demoralizingShout","frostFever","insectSwarm","judgementOfLight","playerIconInputs","rotationInputs","DeathKnightInputs.TankDeathKnightRotationConfig","includeBuffDebuffInputs","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","OtherInputs.TankAssignment","OtherInputs.HpPercentForDefensives","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.InspirationUptime","OtherInputs.InFrontOfTarget","DeathKnightInputs.StartingRunicPower","encounterPicker","showExecuteProportion","presets","rotations","Presets.BLOOD_LEGACY_PRESET_LEGACY_DEFAULT","Presets.BLOOD_IT_SPAM_ROTATION_PRESET_DEFAULT","Presets.BLOOD_AGGRO_ROTATION_PRESET_DEFAULT","Presets.BloodAggroTalents","Presets.DoubleBuffBloodTalents","Presets.FrostTalents","Presets.DoubleBuffFrostTalents","Presets.P1_BLOOD_PRESET","Presets.P1_FROST_PRESET","Presets.P2_FROST_PRESET"],"mappings":"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"}