{"version":3,"file":"sim-80eeb09d.chunk.js","sources":["../../../ui/core/proto_utils/apl_utils.ts","../../../ui/hunter/inputs.ts","../../../ui/hunter/presets.ts","../../../ui/hunter/sim.ts"],"sourcesContent":["import {\r\n    ActionID as ActionIdProto,\r\n    Cooldowns,\r\n} from '../proto/common.js';\r\n\r\nimport {\r\n\tAPLAction,\r\n\tAPLPrepullAction,\r\n} from '../proto/apl.js';\r\n\r\nexport function prepullPotionAction(doAt?: string): APLPrepullAction {\r\n\treturn APLPrepullAction.fromJsonString(`{\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"${doAt || '-1s'}\"}}}`);\r\n}\r\n\r\nexport function autocastCooldownsAction(startAt?: string): APLAction {\r\n    if (startAt) {\r\n      \treturn APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"${startAt}\"}}}},\"autocastOtherCooldowns\":{}}`);\r\n    } else {\r\n      \treturn APLAction.fromJsonString(`{\"autocastOtherCooldowns\":{}}`);\r\n    }\r\n}\r\n\r\nexport function scheduledCooldownAction(schedule: string, actionId: ActionIdProto): APLAction {\r\n    return APLAction.fromJsonString(`{\"schedule\":{\"schedule\":\"${schedule}\",\"innerAction\":{\"castSpell\":{\"spellId\":${ActionIdProto.toJsonString(actionId)}}}}}`);\r\n}\r\n\r\nexport function simpleCooldownActions(cooldowns: Cooldowns): Array<APLAction> {\r\n    return cooldowns.cooldowns\r\n    .filter(cd => cd.id)\r\n    .map(cd => {\r\n        const schedule = cd.timings.map(timing => timing.toFixed(1) + 's').join(', ');\r\n        return scheduledCooldownAction(schedule, cd.id!);\r\n    });\r\n}\r\n\r\nexport function standardCooldownDefaults(cooldowns: Cooldowns, prepotAt?: string, startAutocastCDsAt?: string): [Array<APLPrepullAction>, Array<APLAction>] {\r\n    return [\r\n        [prepullPotionAction(prepotAt)],\r\n        [\r\n            autocastCooldownsAction(startAutocastCDsAt),\r\n            simpleCooldownActions(cooldowns),\r\n        ].flat(),\r\n    ];\r\n}\r\n","import { Spec } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\nimport { makePetTypeInputConfig } from '../core/talents/hunter_pet.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\nimport {\r\n\tHunter,\r\n\tHunter_Rotation as HunterRotation,\r\n\tHunter_Rotation_RotationType as RotationType,\r\n\tHunter_Rotation_StingType as StingType,\r\n\tHunter_Rotation_SpellOption as SpellOption,\r\n\tHunter_Options as HunterOptions,\r\n\tHunter_Options_Ammo as Ammo,\r\n\tHunter_Options_PetType as PetType,\r\n} from '../core/proto/hunter.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const WeaponAmmo = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecHunter, Ammo>({\r\n\tfieldName: 'ammo',\r\n\tnumColumns: 2,\r\n\tvalues: [\r\n\t\t{ value: Ammo.AmmoNone, tooltip: 'No Ammo' },\r\n\t\t{ actionId: ActionId.fromItemId(31737), value: Ammo.TimelessArrow },\r\n\t\t{ actionId: ActionId.fromItemId(34581), value: Ammo.MysteriousArrow },\r\n\t\t{ actionId: ActionId.fromItemId(33803), value: Ammo.AdamantiteStinger },\r\n\t\t{ actionId: ActionId.fromItemId(28056), value: Ammo.BlackflightArrow },\r\n\t],\r\n});\r\n\r\nexport const PetTypeInput = makePetTypeInputConfig(true);\r\n\r\nexport const PetUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHunter>({\r\n\tfieldName: 'petUptime',\r\n\tlabel: 'Pet Uptime (%)',\r\n\tlabelTooltip: 'Percent of the fight duration for which your pet will be alive.',\r\n\tpercent: true,\r\n});\r\n\r\nexport const UseHuntersMark = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHunter>({\r\n\tfieldName: 'useHuntersMark',\r\n\tid: ActionId.fromSpellId(14325),\r\n});\r\n\r\nexport const SniperTrainingUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHunter>({\r\n\tfieldName: 'sniperTrainingUptime',\r\n\tlabel: 'ST Uptime (%)',\r\n\tlabelTooltip: 'Uptime for the Sniper Training talent, as a percent of the fight duration.',\r\n\tpercent: true,\r\n\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getTalents().sniperTraining > 0,\r\n\tchangeEmitter: (player: Player<Spec.SpecHunter>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const TimeToTrapWeaveMs = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecHunter>({\r\n\tfieldName: 'timeToTrapWeaveMs',\r\n\tlabel: 'Weave Time',\r\n\tlabelTooltip: 'Amount of time for Explosive Trap, in milliseconds, between when you start moving towards the boss and when you re-engage your ranged autos.',\r\n});\r\n\r\nexport const HunterRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecHunter, RotationType>({\r\n\t\t\tfieldName: 'type',\r\n\t\t\tlabel: 'Type',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Single Target', value: RotationType.SingleTarget },\r\n\t\t\t\t{ name: 'AOE', value: RotationType.Aoe },\r\n\t\t\t],\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecHunter, StingType>({\r\n\t\t\tfieldName: 'sting',\r\n\t\t\tlabel: 'Sting',\r\n\t\t\tlabelTooltip: 'Maintains the selected Sting on the primary target.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'None', value: StingType.NoSting },\r\n\t\t\t\t{ name: 'Scorpid Sting', value: StingType.ScorpidSting },\r\n\t\t\t\t{ name: 'Serpent Sting', value: StingType.SerpentSting },\r\n\t\t\t],\r\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type == RotationType.SingleTarget,\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecHunter>({\r\n\t\t\tfieldName: 'trapWeave',\r\n\t\t\tlabel: 'Trap Weave',\r\n\t\t\tlabelTooltip: 'Uses Explosive Trap at appropriate times. Note that selecting this will disable Black Arrow because they share a CD.',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecHunter>({\r\n\t\t\tfieldName: 'allowExplosiveShotDownrank',\r\n\t\t\tlabel: 'Allow ES Downrank',\r\n\t\t\tlabelTooltip: 'Weaves Explosive Shot Rank 3 during LNL procs. This works because the rank 3 and rank 4 dots can stack.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecHunter>) => player.getRotation().type != RotationType.Custom && player.getTalents().explosiveShot && player.getTalents().lockAndLoad > 0,\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecHunter>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecHunter>({\r\n\t\t\tfieldName: 'multiDotSerpentSting',\r\n\t\t\tlabel: 'Multi-Dot Serpent Sting',\r\n\t\t\tlabelTooltip: 'Casts Serpent Sting on multiple targets',\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecHunter>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecHunter>({\r\n\t\t\tfieldName: 'viperStartManaPercent',\r\n\t\t\tlabel: 'Viper Start Mana %',\r\n\t\t\tlabelTooltip: 'Switch to Aspect of the Viper when mana goes below this amount.',\r\n\t\t\tpercent: true,\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationNumberInput<Spec.SpecHunter>({\r\n\t\t\tfieldName: 'viperStopManaPercent',\r\n\t\t\tlabel: 'Viper Stop Mana %',\r\n\t\t\tlabelTooltip: 'Switch back to Aspect of the Hawk when mana goes above this amount.',\r\n\t\t\tpercent: true,\r\n\t\t}),\r\n\t],\r\n};\r\n","import { Consumes } from '../core/proto/common.js';\r\nimport { EquipmentSpec } from '../core/proto/common.js';\r\nimport { Flask } from '../core/proto/common.js';\r\nimport { Food } from '../core/proto/common.js';\r\nimport { Glyphs } from '../core/proto/common.js';\r\nimport { PetFood } from '../core/proto/common.js';\r\nimport { Potions } from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { APLRotation, APLRotation_Type } from '../core/proto/apl.js';\r\nimport { ferocityDefault, ferocityBMDefault } from '../core/talents/hunter_pet.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport {\r\n\tHunter_Rotation as HunterRotation,\r\n\tHunter_Rotation_RotationType as RotationType,\r\n\tHunter_Rotation_StingType as StingType,\r\n\tHunter_Options as HunterOptions,\r\n\tHunter_Options_Ammo as Ammo,\r\n\tHunter_Options_PetType as PetType,\r\n\tHunterMajorGlyph as MajorGlyph,\r\n\tHunterMinorGlyph as MinorGlyph,\r\n} from '../core/proto/hunter.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\nexport const BeastMasteryTalents = {\r\n\tname: 'Beast Mastery',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '51200201505112243120531251-025305101',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfBestialWrath,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfSteadyShot,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfSerpentSting,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\r\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\r\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const MarksmanTalents = {\r\n\tname: 'Marksman',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '502-035335131030013233035031051-5000002',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfSerpentSting,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfSteadyShot,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfChimeraShot,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\r\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\r\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const SurvivalTalents = {\r\n\tname: 'Survival',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-015305101-5000032500033330532135301311',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfSerpentSting,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfExplosiveShot,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfKillShot,\r\n\t\t\tminor1: MinorGlyph.GlyphOfFeignDeath,\r\n\t\t\tminor2: MinorGlyph.GlyphOfRevivePet,\r\n\t\t\tminor3: MinorGlyph.GlyphOfMendPet,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultRotation = HunterRotation.create({\r\n\ttype: RotationType.SingleTarget,\r\n\tsting: StingType.SerpentSting,\r\n\ttrapWeave: false,\r\n\tviperStartManaPercent: 0.1,\r\n\tviperStopManaPercent: 0.3,\r\n\tmultiDotSerpentSting: true,\r\n\tallowExplosiveShotDownrank: true,\r\n});\r\n\r\nexport const ROTATION_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Simple Default',\r\n\trotation: SavedRotation.create({\r\n\t\trotation: {\r\n\t\t\ttype: APLRotation_Type.TypeSimple,\r\n\t\t\tsimple: {\r\n\t\t\t\tspecRotationJson: HunterRotation.toJsonString(DefaultRotation),\r\n\t\t\t},\r\n\t\t},\r\n\t}),\r\n}\r\nexport const ROTATION_PRESET_BM = {\r\n\tname: 'BM',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: HunterRotation.toJsonString(HunterRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}},\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":34074}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"10%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":34074}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":27044}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"30%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27044}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27025}}}}},\"castSpell\":{\"spellId\":{\"spellId\":27025,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27016}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27016}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27065}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27021}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27019}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":34120}}}}\r\n\t\t\t]\r\n\t\t  }`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_PRESET_MM = {\r\n\tname: 'MM',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: HunterRotation.toJsonString(HunterRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}},\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":34074}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"10%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":34074}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":27044}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"30%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27044}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":34490}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27016}}}}},\"castSpell\":{\"spellId\":{\"spellId\":27016}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27025}}}}},\"castSpell\":{\"spellId\":{\"spellId\":27025,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":53209}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27065}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27021}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27019}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":34120}}}}\r\n\t\t\t]\r\n\t\t  }`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_PRESET_SV = {\r\n\tname: 'SV',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: HunterRotation.toJsonString(HunterRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}},\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":34074}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"10%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":34074}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":27044}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"30%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27044}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":60051}}}}},\"castSpell\":{\"spellId\":{\"spellId\":60051}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"dotIsActive\":{\"spellId\":{\"spellId\":60051}}},\"castSpell\":{\"spellId\":{\"spellId\":53301}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":49067}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49067,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27016}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27016}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":63670}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27065}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27021}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":34120}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n};\r\n\r\nexport const ROTATION_PRESET_AOE = {\r\n\tname: 'AOE',\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: HunterRotation.toJsonString(HunterRotation.create({\r\n\t\t})),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}},\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":34074}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"10%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":34074}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":27044}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"30%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":27044}}}},\r\n\t\t\t  {\"hide\":true,\"action\":{\"multidot\":{\"spellId\":{\"spellId\":49001},\"maxDots\":3,\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27025}}}}},\"castSpell\":{\"spellId\":{\"spellId\":27025,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":27022}}}}\r\n\t\t\t]\r\n\t\t  }`),\r\n\t}),\r\n};\r\n\r\nexport const DefaultOptions = HunterOptions.create({\r\n\tammo: Ammo.AdamantiteStinger,\r\n\tuseHuntersMark: true,\r\n\tpetType: PetType.Wolf,\r\n\tpetTalents: ferocityDefault,\r\n\tpetUptime: 1,\r\n\tsniperTrainingUptime: 0.9,\r\n\ttimeToTrapWeaveMs: 2000,\r\n});\r\n\r\nexport const BMDefaultOptions = HunterOptions.create({\r\n\tammo: Ammo.AdamantiteStinger,\r\n\tuseHuntersMark: true,\r\n\tpetType: PetType.Wolf,\r\n\tpetTalents: ferocityBMDefault,\r\n\tpetUptime: 1,\r\n\tsniperTrainingUptime: 0.9,\r\n\ttimeToTrapWeaveMs: 2000,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tflask: Flask.FlaskOfEndlessRage,\r\n\tfood: Food.FoodFishFeast,\r\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\r\n});\r\n\r\nexport const MM_PRERAID_PRESET = {\r\n\tname: 'MM Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42551,\"enchant\":3817,\"gems\":[41398,42143]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":37373,\"enchant\":3808},\r\n\t\t{\"id\":43566,\"enchant\":3605},\r\n\t\t{\"id\":39579,\"enchant\":3832,\"gems\":[39997,49110]},\r\n\t\t{\"id\":37170,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39582,\"enchant\":3604,\"gems\":[40014,0]},\r\n\t\t{\"id\":37407,\"enchant\":3601,\"gems\":[42143]},\r\n\t\t{\"id\":37669,\"enchant\":3823},\r\n\t\t{\"id\":37167,\"enchant\":3606,\"gems\":[42143,39997]},\r\n\t\t{\"id\":37685},\r\n\t\t{\"id\":42642,\"gems\":[40044]},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":44249,\"enchant\":3827},\r\n\t\t{},\r\n\t\t{\"id\":37191,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const MM_P1_PRESET = {\r\n\tname: 'MM P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40543,\"enchant\":3817,\"gems\":[41398,42143]},\r\n\t\t{\"id\":44664,\"gems\":[42143]},\r\n\t\t{\"id\":40507,\"enchant\":3808,\"gems\":[39997]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":43998,\"enchant\":3832,\"gems\":[42143,39997]},\r\n\t\t{\"id\":40282,\"enchant\":3845,\"gems\":[39997,0]},\r\n\t\t{\"id\":40541,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40275,\"enchant\":3601,\"gems\":[39997]},\r\n\t\t{\"id\":40506,\"enchant\":3823,\"gems\":[39997,49110]},\r\n\t\t{\"id\":40549,\"enchant\":3606},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":40388,\"enchant\":3827},\r\n\t\t{},\r\n\t\t{\"id\":40385,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const MM_P2_PRESET = {\r\n\tname: 'MM P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45610,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":45517,\"gems\":[42143]},\r\n\t\t{\"id\":45300,\"enchant\":3808,\"gems\":[40043]},\r\n\t\t{\"id\":46032,\"enchant\":3605,\"gems\":[42143,40043]},\r\n\t\t{\"id\":45473,\"enchant\":3832,\"gems\":[39997,39997,39997]},\r\n\t\t{\"id\":45869,\"enchant\":3845,\"gems\":[40044,0]},\r\n\t\t{\"id\":45444,\"enchant\":3604,\"gems\":[42143,39997,0]},\r\n\t\t{\"id\":45467,\"enchant\":3601,\"gems\":[39997]},\r\n\t\t{\"id\":45536,\"enchant\":3823,\"gems\":[39997,39997,39997]},\r\n\t\t{\"id\":45244,\"enchant\":3606,\"gems\":[39997,39997]},\r\n\t\t{\"id\":45608,\"gems\":[39997]},\r\n\t\t{\"id\":46322,\"gems\":[39997]},\r\n\t\t{\"id\":45931},\r\n\t\t{\"id\":46038},\r\n\t\t{\"id\":45613,\"enchant\":3827,\"gems\":[45879,39997]},\r\n\t\t{},\r\n\t\t{\"id\":45570,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const MM_P3_PRESET = {\r\n\tname: 'MM P3 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":48262,\"enchant\":3817,\"gems\":[41398,40147]},\r\n        {\"id\":47060,\"gems\":[42143]},\r\n        {\"id\":48260,\"enchant\":3808,\"gems\":[40112]},\r\n        {\"id\":47545,\"enchant\":3605,\"gems\":[40112]},\r\n        {\"id\":46965,\"enchant\":3832,\"gems\":[40112,40112,40112]},\r\n        {\"id\":47074,\"enchant\":3845,\"gems\":[40147,0]},\r\n        {\"id\":48263,\"enchant\":3604,\"gems\":[40148,0]},\r\n        {\"id\":47153,\"gems\":[40148,42143,42143]},\r\n        {\"id\":48261,\"enchant\":3823,\"gems\":[49110,40112]},\r\n        {\"id\":47109,\"enchant\":3606,\"gems\":[40147,40147]},\r\n        {\"id\":47075,\"gems\":[40112]},\r\n        {\"id\":45608,\"gems\":[40112]},\r\n        {\"id\":47131},\r\n        {\"id\":45931},\r\n        {\"id\":47239,\"enchant\":3827,\"gems\":[40147,40112]},\r\n        {},\r\n        {\"id\":47521,\"enchant\":3608,\"gems\":[40147]}\r\n\t]}`),\r\n};\r\n\r\nexport const MM_P4_PRESET = {\r\n\tname: 'MM P4 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":51286,\"enchant\":3817,\"gems\":[41398,40117]},\r\n        {\"id\":50633,\"gems\":[40117]},\r\n        {\"id\":51288,\"enchant\":3808,\"gems\":[40117]},\r\n        {\"id\":47546,\"enchant\":3605,\"gems\":[42153]},\r\n        {\"id\":51289,\"enchant\":3832,\"gems\":[40117,40117]},\r\n        {\"id\":50655,\"enchant\":3845,\"gems\":[40117,0]},\r\n        {\"id\":51285,\"enchant\":3604,\"gems\":[40117,0]},\r\n        {\"id\":50688,\"enchant\":3601,\"gems\":[40148,42153,42153]},\r\n        {\"id\":50645,\"enchant\":3823,\"gems\":[49110,40117,40147]},\r\n        {\"id\":50607,\"enchant\":3606,\"gems\":[40148,40148]},\r\n        {\"id\":50618,\"gems\":[40117]},\r\n        {\"id\":50402,\"gems\":[40148]},\r\n        {\"id\":50363},\r\n        {\"id\":47131},\r\n        {\"id\":50735,\"enchant\":3827,\"gems\":[40117,40117,40117]},\r\n        {},\r\n        {\"id\":50733,\"enchant\":3608,\"gems\":[40117]}\r\n\t]}`),\r\n};\r\n\r\nexport const MM_P5_PRESET = {\r\n\tname: 'MM P5 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() != 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":51286,\"enchant\":3817,\"gems\":[41398,40117]},\r\n        {\"id\":50633,\"gems\":[40117]},\r\n        {\"id\":51288,\"enchant\":3808,\"gems\":[40117]},\r\n        {\"id\":47546,\"enchant\":3605,\"gems\":[42153]},\r\n        {\"id\":51289,\"enchant\":3832,\"gems\":[40112,40112]},\r\n        {\"id\":54580,\"enchant\":3845,\"gems\":[40117,0]},\r\n        {\"id\":51285,\"enchant\":3604,\"gems\":[40117,0]},\r\n        {\"id\":50688,\"enchant\":3601,\"gems\":[40148,42153,42153]},\r\n        {\"id\":50645,\"enchant\":3823,\"gems\":[49110,40112,40147]},\r\n        {\"id\":54577,\"enchant\":3606,\"gems\":[40148,40148]},\r\n        {\"id\":50618,\"gems\":[40117]},\r\n        {\"id\":54576,\"gems\":[40148]},\r\n        {\"id\":50363},\r\n        {\"id\":54590},\r\n        {\"id\":50735,\"enchant\":3247,\"gems\":[40112,40112,40112]},\r\n        {},\r\n        {\"id\":50733,\"enchant\":3608,\"gems\":[40117]}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_PRERAID_PRESET = {\r\n\tname: 'SV Preraid Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":42551,\"enchant\":3817,\"gems\":[41398,42143]},\r\n\t\t{\"id\":40678},\r\n\t\t{\"id\":37373,\"enchant\":3808},\r\n\t\t{\"id\":43406,\"enchant\":3605},\r\n\t\t{\"id\":39579,\"enchant\":3832,\"gems\":[39997,49110]},\r\n\t\t{\"id\":37170,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39582,\"enchant\":3604,\"gems\":[39997,0]},\r\n\t\t{\"id\":37407,\"enchant\":3601,\"gems\":[42143]},\r\n\t\t{\"id\":37669,\"enchant\":3823},\r\n\t\t{\"id\":37167,\"enchant\":3606,\"gems\":[42143,39997]},\r\n\t\t{\"id\":37685},\r\n\t\t{\"id\":42642,\"gems\":[39997]},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":44249,\"enchant\":3827},\r\n\t\t{},\r\n\t\t{\"id\":37191,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_P1_PRESET = {\r\n\tname: 'SV P1 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40505,\"enchant\":3817,\"gems\":[41398,42143]},\r\n\t\t{\"id\":44664,\"gems\":[42143]},\r\n\t\t{\"id\":40507,\"enchant\":3808,\"gems\":[39997]},\r\n\t\t{\"id\":40403,\"enchant\":3605},\r\n\t\t{\"id\":43998,\"enchant\":3832,\"gems\":[42143,39997]},\r\n\t\t{\"id\":40282,\"enchant\":3845,\"gems\":[39997,0]},\r\n\t\t{\"id\":40541,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":39762,\"enchant\":3601,\"gems\":[39997]},\r\n\t\t{\"id\":40331,\"enchant\":3823,\"gems\":[39997,49110]},\r\n\t\t{\"id\":40549,\"enchant\":3606},\r\n\t\t{\"id\":40074},\r\n\t\t{\"id\":40474},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":40388,\"enchant\":3827},\r\n\t\t{},\r\n\t\t{\"id\":40385,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_P2_PRESET = {\r\n\tname: 'SV P2 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45610,\"enchant\":3817,\"gems\":[41398,40023]},\r\n\t\t{\"id\":45517,\"gems\":[39997]},\r\n\t\t{\"id\":45300,\"enchant\":3808,\"gems\":[39997]},\r\n\t\t{\"id\":46032,\"enchant\":3605,\"gems\":[39997,40044]},\r\n\t\t{\"id\":45473,\"enchant\":3832,\"gems\":[39997,39997,45879]},\r\n\t\t{\"id\":45869,\"enchant\":3845,\"gems\":[40043,0]},\r\n\t\t{\"id\":45444,\"enchant\":3604,\"gems\":[39997,40023,0]},\r\n\t\t{\"id\":46095,\"gems\":[42143,42143,42143]},\r\n\t\t{\"id\":45536,\"enchant\":3823,\"gems\":[39997,39997,39997]},\r\n\t\t{\"id\":45244,\"enchant\":3606,\"gems\":[39997,40023]},\r\n\t\t{\"id\":45608,\"gems\":[39997]},\r\n\t\t{\"id\":46322,\"gems\":[39997]},\r\n\t\t{\"id\":44253},\r\n\t\t{\"id\":45931},\r\n\t\t{\"id\":45613,\"enchant\":3827,\"gems\":[39997,39997]},\r\n\t\t{},\r\n\t\t{\"id\":45570,\"enchant\":3608}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_P3_PRESET = {\r\n\tname: 'SV P3 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":48262,\"enchant\":3817,\"gems\":[41398,40147]},\r\n        {\"id\":47060,\"gems\":[42143]},\r\n        {\"id\":48260,\"enchant\":3808,\"gems\":[40112]},\r\n        {\"id\":47545,\"enchant\":3605,\"gems\":[40112]},\r\n        {\"id\":48264,\"enchant\":3832,\"gems\":[40112,40147]},\r\n        {\"id\":47074,\"enchant\":3845,\"gems\":[40148,0]},\r\n        {\"id\":48263,\"enchant\":3604,\"gems\":[40148,0]},\r\n        {\"id\":47153,\"gems\":[40147,42143,42143]},\r\n        {\"id\":47191,\"enchant\":3823,\"gems\":[49110,40147,40112]},\r\n        {\"id\":47109,\"enchant\":3606,\"gems\":[40112,40112]},\r\n        {\"id\":47075,\"gems\":[40112]},\r\n        {\"id\":45608,\"gems\":[40112]},\r\n        {\"id\":47131},\r\n        {\"id\":44253},\r\n        {\"id\":47239,\"enchant\":3827,\"gems\":[40147,40112]},\r\n        {},\r\n        {\"id\":47521,\"enchant\":3608,\"gems\":[40112]}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_P4_PRESET = {\r\n\tname: 'SV P4 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":51286,\"enchant\":3817,\"gems\":[41398,40112]},\r\n        {\"id\":50633,\"gems\":[40112]},\r\n        {\"id\":51288,\"enchant\":3808,\"gems\":[40112]},\r\n        {\"id\":47546,\"enchant\":3605,\"gems\":[42143]},\r\n        {\"id\":51289,\"enchant\":3832,\"gems\":[40112,40112]},\r\n        {\"id\":50655,\"enchant\":3845,\"gems\":[40112,0]},\r\n        {\"id\":51285,\"enchant\":3604,\"gems\":[40112,0]},\r\n        {\"id\":50688,\"enchant\":3601,\"gems\":[40148,42143,42143]},\r\n        {\"id\":50645,\"enchant\":3823,\"gems\":[49110,40112,40150]},\r\n        {\"id\":50607,\"enchant\":3606,\"gems\":[40148,40148]},\r\n        {\"id\":50618,\"gems\":[45879]},\r\n        {\"id\":50402,\"gems\":[40148]},\r\n        {\"id\":50363},\r\n        {\"id\":47131},\r\n        {\"id\":50735,\"enchant\":3827,\"gems\":[40112,40112,40112]},\r\n        {},\r\n        {\"id\":50733,\"enchant\":3608,\"gems\":[40112]}\r\n\t]}`),\r\n};\r\n\r\nexport const SV_P5_PRESET = {\r\n\tname: 'SV P5 Preset',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<any>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":51286,\"enchant\":3817,\"gems\":[41398,40112]},\r\n        {\"id\":50633,\"gems\":[40112]},\r\n        {\"id\":51288,\"enchant\":3808,\"gems\":[40112]},\r\n        {\"id\":47546,\"enchant\":3605,\"gems\":[42143]},\r\n        {\"id\":51289,\"enchant\":3832,\"gems\":[40112,40112]},\r\n        {\"id\":50655,\"enchant\":3845,\"gems\":[40112,0]},\r\n        {\"id\":51285,\"enchant\":3604,\"gems\":[40112,0]},\r\n        {\"id\":50688,\"enchant\":3601,\"gems\":[40148,42143,42143]},\r\n        {\"id\":50645,\"enchant\":3823,\"gems\":[49110,40112,40150]},\r\n        {\"id\":54577,\"enchant\":3606,\"gems\":[40148,40148]},\r\n        {\"id\":50618,\"gems\":[45879]},\r\n        {\"id\":54576,\"gems\":[40148]},\r\n        {\"id\":50363},\r\n        {\"id\":54590},\r\n        {\"id\":50735,\"enchant\":3827,\"gems\":[40112,40112,40112]},\r\n        {},\r\n        {\"id\":50733,\"enchant\":3608,\"gems\":[40112]}\r\n\t]}`),\r\n};\r\n","import {\r\n\tCooldowns,\r\n\tDebuffs,\r\n\tIndividualBuffs,\r\n\tItemSlot,\r\n\tPartyBuffs,\r\n\tRace,\r\n\tRaidBuffs,\r\n\tRangedWeaponType,\r\n\tSpec,\r\n\tStat, PseudoStat,\r\n\tTristateEffect,\r\n} from '../core/proto/common.js';\r\nimport {\r\n\tAPLAction,\r\n\tAPLListItem,\r\n\tAPLPrepullAction,\r\n\tAPLRotation,\r\n} from '../core/proto/apl.js';\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { getTalentPoints } from '../core/proto_utils/utils.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\nimport { getPetTalentsConfig } from '../core/talents/hunter_pet.js';\r\nimport { protoToTalentString } from '../core/talents/factory.js';\r\n\r\nimport {\r\n\tHunter,\r\n\tHunter_Rotation as HunterRotation,\r\n\tHunter_Rotation_StingType as StingType,\r\n\tHunter_Options as HunterOptions,\r\n\tHunter_Options_PetType as PetType,\r\n\tHunterPetTalents,\r\n\tHunter_Rotation_RotationType,\r\n} from '../core/proto/hunter.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Mechanics from '../core/constants/mechanics.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\nimport * as AplUtils from '../core/proto_utils/apl_utils.js';\r\n\r\nimport * as HunterInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class HunterSimUI extends IndividualSimUI<Spec.SpecHunter> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHunter>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'hunter-sim-ui',\r\n\t\t\tcssScheme: 'hunter',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\t\t\twarnings: [\r\n\t\t\t\t// Warning when using exotic pet without BM talented.\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecHunter>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.talentsChangeEmitter, simUI.player.specOptionsChangeEmitter]),\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tconst petIsExotic = [\r\n\t\t\t\t\t\t\t\tPetType.Chimaera,\r\n\t\t\t\t\t\t\t\tPetType.CoreHound,\r\n\t\t\t\t\t\t\t\tPetType.Devilsaur,\r\n\t\t\t\t\t\t\t\tPetType.Silithid,\r\n\t\t\t\t\t\t\t\tPetType.SpiritBeast,\r\n\t\t\t\t\t\t\t\tPetType.Worm,\r\n\t\t\t\t\t\t\t].includes(simUI.player.getSpecOptions().petType);\r\n\r\n\t\t\t\t\t\t\tconst isBM = simUI.player.getTalents().beastMastery;\r\n\r\n\t\t\t\t\t\t\tif (petIsExotic && !isBM) {\r\n\t\t\t\t\t\t\t\treturn 'Cannot use exotic pets without the Beast Mastery talent.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t\t// Warning when too many Pet talent points are used without BM talented.\r\n\t\t\t\t(simUI: IndividualSimUI<Spec.SpecHunter>) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tupdateOn: TypedEvent.onAny([simUI.player.talentsChangeEmitter, simUI.player.specOptionsChangeEmitter]),\r\n\t\t\t\t\t\tgetContent: () => {\r\n\t\t\t\t\t\t\tconst specOptions = simUI.player.getSpecOptions();\r\n\t\t\t\t\t\t\tconst petTalents = specOptions.petTalents || HunterPetTalents.create();\r\n\t\t\t\t\t\t\tconst petTalentString = protoToTalentString(petTalents, getPetTalentsConfig(specOptions.petType));\r\n\t\t\t\t\t\t\tconst talentPoints = getTalentPoints(petTalentString);\r\n\r\n\t\t\t\t\t\t\tconst isBM = simUI.player.getTalents().beastMastery;\r\n\t\t\t\t\t\t\tconst maxPoints = isBM ? 17 : 13;\r\n\r\n\t\t\t\t\t\t\tif (talentPoints == 0) {\r\n\t\t\t\t\t\t\t\t// Just return here, so we don't show a warning during page load.\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t} else if (talentPoints < maxPoints) {\r\n\t\t\t\t\t\t\t\treturn 'Unspent pet talent points.';\r\n\t\t\t\t\t\t\t} else if (talentPoints > maxPoints) {\r\n\t\t\t\t\t\t\t\treturn 'More than 13 points spent in pet talents, but Beast Mastery is not talented.';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatRangedAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatRangedDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP.\r\n\t\t\tepReferenceStat: Stat.StatRangedAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatRangedAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t],\r\n\t\t\tmodifyDisplayStats: (player: Player<Spec.SpecHunter>) => {\r\n\t\t\t\tlet stats = new Stats();\r\n\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, player.getTalents().lethalShots * 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\r\n\r\n\t\t\t\tconst rangedWeapon = player.getEquippedItem(ItemSlot.ItemSlotRanged);\r\n\t\t\t\tif (rangedWeapon?.enchant?.effectId == 3608) {\r\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 40);\r\n\t\t\t\t}\r\n\t\t\t\tif (player.getRace() == Race.RaceDwarf && rangedWeapon?.item.rangedWeaponType == RangedWeaponType.RangedWeaponTypeGun) {\r\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\r\n\t\t\t\t}\r\n\t\t\t\tif (player.getRace() == Race.RaceTroll && rangedWeapon?.item.rangedWeaponType == RangedWeaponType.RangedWeaponTypeBow) {\r\n\t\t\t\t\tstats = stats.addStat(Stat.StatMeleeCrit, 1 * Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttalents: stats,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.SV_P1_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatStamina]: 0.5,\r\n\t\t\t\t\t[Stat.StatAgility]: 2.65,\r\n\t\t\t\t\t[Stat.StatIntellect]: 1.1,\r\n\t\t\t\t\t[Stat.StatRangedAttackPower]: 1.0,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 2,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 1.5,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.39,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 1.32,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatRangedDps]: 6.32,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.SurvivalTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tarcaneBrilliance: true,\r\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\twindfuryTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tbattleShout: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t\tunleashedRage: true,\r\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfWisdom: 2,\r\n\t\t\t\t\tblessingOfMight: 2,\r\n\t\t\t\t\tvampiricTouch: true,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tjudgementOfWisdom: true,\r\n\t\t\t\t\tcurseOfElements: true,\r\n\t\t\t\t\theartOfTheCrusader: true,\r\n\t\t\t\t\tsavageCombat: true,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tHunterInputs.PetTypeInput,\r\n\t\t\t\tHunterInputs.WeaponAmmo,\r\n\t\t\t\tHunterInputs.UseHuntersMark,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: HunterInputs.HunterRotationConfig,\r\n\t\t\tpetConsumeInputs: [\r\n\t\t\t\tIconInputs.SpicedMammothTreats,\r\n\t\t\t],\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.StaminaBuff,\r\n\t\t\t\tIconInputs.SpellDamageDebuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tHunterInputs.PetUptime,\r\n\t\t\t\t\tHunterInputs.TimeToTrapWeaveMs,\r\n\t\t\t\t\tHunterInputs.SniperTrainingUptime,\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.BeastMasteryTalents,\r\n\t\t\t\t\tPresets.MarksmanTalents,\r\n\t\t\t\t\tPresets.SurvivalTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.ROTATION_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_BM,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_MM,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_SV,\r\n\t\t\t\t\tPresets.ROTATION_PRESET_AOE,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.MM_PRERAID_PRESET,\r\n\t\t\t\t\tPresets.MM_P1_PRESET,\r\n\t\t\t\t\tPresets.MM_P2_PRESET,\r\n\t\t\t\t\tPresets.MM_P3_PRESET,\r\n\t\t\t\t\tPresets.MM_P4_PRESET,\r\n\t\t\t\t\tPresets.MM_P5_PRESET,\r\n\t\t\t\t\tPresets.SV_PRERAID_PRESET,\r\n\t\t\t\t\tPresets.SV_P1_PRESET,\r\n\t\t\t\t\tPresets.SV_P2_PRESET,\r\n\t\t\t\t\tPresets.SV_P3_PRESET,\r\n\t\t\t\t\tPresets.SV_P4_PRESET,\r\n\t\t\t\t\tPresets.SV_P5_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\r\n\t\t\tautoRotation: (player: Player<Spec.SpecHunter>): APLRotation => {\r\n\t\t\t\tconst talentTree = player.getTalentTree();\r\n\t\t\t\tconst numTargets = player.sim.encounter.targets.length;\r\n\t\t\t\tif (numTargets >= 4) {\r\n\t\t\t\t\treturn Presets.ROTATION_PRESET_AOE.rotation.rotation!;\r\n\t\t\t\t} else if (talentTree == 0) {\r\n\t\t\t\t\treturn Presets.ROTATION_PRESET_BM.rotation.rotation!;\r\n\t\t\t\t} else if (talentTree == 1) {\r\n\t\t\t\t\treturn Presets.ROTATION_PRESET_MM.rotation.rotation!;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Presets.ROTATION_PRESET_SV.rotation.rotation!;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tsimpleRotation: (player: Player<Spec.SpecHunter>, simple: HunterRotation, cooldowns: Cooldowns): APLRotation => {\r\n\t\t\t\tlet [prepullActions, actions] = AplUtils.standardCooldownDefaults(cooldowns);\r\n\r\n\t\t\t\tconst serpentSting = APLAction.fromJsonString(`{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},\"multidot\":{\"spellId\":{\"spellId\":27016},\"maxDots\":${simple.multiDotSerpentSting ? 3 : 1},\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}}`);\r\n\t\t\t\tconst scorpidSting = APLAction.fromJsonString(`{\"condition\":{\"auraShouldRefresh\":{\"auraId\":{\"spellId\":3043},\"maxOverlap\":{\"const\":{\"val\":\"0ms\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":3043}}}`);\r\n\t\t\t\tconst trapWeave = APLAction.fromJsonString(`{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":27025}}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":27025}}}`);\r\n\t\t\t\tconst volley = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":27022}}}`);\r\n\t\t\t\t//const killShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":61006}}}`);\r\n\t\t\t\tconst aimedShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":27065}}}`);\r\n\t\t\t\tconst multiShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":27021}}}`);\r\n\t\t\t\tconst steadyShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":34120}}}`);\r\n\t\t\t\tconst silencingShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":34490}}}`);\r\n\t\t\t\tconst chimeraShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":53209}}}`);\r\n\t\t\t\tconst blackArrow = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":63670}}}`);\r\n\t\t\t\tconst explosiveShot4 = APLAction.fromJsonString(`{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":60051}}}}},\"castSpell\":{\"spellId\":{\"spellId\":60051}}}`);\r\n\t\t\t\tconst explosiveShot3 = APLAction.fromJsonString(`{\"condition\":{\"dotIsActive\":{\"spellId\":{\"spellId\":60051}}},\"castSpell\":{\"spellId\":{\"spellId\":53301}}}`);\r\n\t\t\t\tconst arcaneShot = APLAction.fromJsonString(`{\"castSpell\":{\"spellId\":{\"spellId\":27019}}}`);\r\n\r\n\t\t\t\tif (simple.viperStartManaPercent != 0) {\r\n\t\t\t\t\tactions.push(APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":34074}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.viperStartManaPercent * 100).toFixed(0)}%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":34074}}}`));\r\n\t\t\t\t}\r\n\t\t\t\tif (simple.viperStopManaPercent != 0) {\r\n\t\t\t\t\tactions.push(APLAction.fromJsonString(`{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":61847}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"currentManaPercent\":{}},\"rhs\":{\"const\":{\"val\":\"${(simple.viperStopManaPercent * 100).toFixed(0)}%\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":61847}}}`));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst talentTree = player.getTalentTree();\r\n\t\t\t\tif (simple.type == Hunter_Rotation_RotationType.Aoe) {\r\n\t\t\t\t\tactions.push(...[\r\n\t\t\t\t\t\tsimple.sting == StingType.ScorpidSting ? scorpidSting : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.SerpentSting ? serpentSting : null,\r\n\t\t\t\t\t\tsimple.trapWeave ? trapWeave : null,\r\n\t\t\t\t\t\tvolley,\r\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\r\n\t\t\t\t} else if (talentTree == 0) { // BM\r\n\t\t\t\t\tactions.push(...[\r\n\t\t\t\t\t\t//killShot,\r\n\t\t\t\t\t\tsimple.trapWeave ? trapWeave : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.ScorpidSting ? scorpidSting : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.SerpentSting ? serpentSting : null,\r\n\t\t\t\t\t\taimedShot,\r\n\t\t\t\t\t\tmultiShot,\r\n\t\t\t\t\t\tsteadyShot,\r\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\r\n\t\t\t\t} else if (talentTree == 1) { // MM\r\n\t\t\t\t\tactions.push(...[\r\n\t\t\t\t\t\tsilencingShot,\r\n\t\t\t\t\t\t//killShot,\r\n\t\t\t\t\t\tsimple.sting == StingType.ScorpidSting ? scorpidSting : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.SerpentSting ? serpentSting : null,\r\n\t\t\t\t\t\tsimple.trapWeave ? trapWeave : null,\r\n\t\t\t\t\t\tchimeraShot,\r\n\t\t\t\t\t\taimedShot,\r\n\t\t\t\t\t\tmultiShot,\r\n\t\t\t\t\t\tsteadyShot,\r\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\r\n\t\t\t\t} else if (talentTree == 2) { // SV\r\n\t\t\t\t\tactions.push(...[\r\n\t\t\t\t\t\t//killShot,\r\n\t\t\t\t\t\texplosiveShot4,\r\n\t\t\t\t\t\tsimple.allowExplosiveShotDownrank ? explosiveShot3 : null,\r\n\t\t\t\t\t\tsimple.trapWeave ? trapWeave : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.ScorpidSting ? scorpidSting : null,\r\n\t\t\t\t\t\tsimple.sting == StingType.SerpentSting ? serpentSting : null,\r\n\t\t\t\t\t\tblackArrow,\r\n\t\t\t\t\t\taimedShot,\r\n\t\t\t\t\t\tmultiShot,\r\n\t\t\t\t\t\tsteadyShot,\r\n\t\t\t\t\t].filter(a => a) as Array<APLAction>)\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn APLRotation.create({\r\n\t\t\t\t\tprepullActions: prepullActions,\r\n\t\t\t\t\tpriorityList: actions.map(action => APLListItem.create({\r\n\t\t\t\t\t\taction: action,\r\n\t\t\t\t\t}))\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["simpleCooldownActions","cooldowns","filter","cd","id","map","schedule","actionId","APLAction","fromJsonString","ActionIdProto","toJsonString","scheduledCooldownAction","timings","timing","toFixed","join","WeaponAmmo","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","numColumns","values","value","Ammo","AmmoNone","tooltip","ActionId","fromItemId","TimelessArrow","MysteriousArrow","AdamantiteStinger","BlackflightArrow","PetTypeInput","makePetTypeInputConfig","PetUptime","InputHelpers.makeSpecOptionsNumberInput","label","labelTooltip","percent","UseHuntersMark","InputHelpers.makeSpecOptionsBooleanIconInput","fromSpellId","SniperTrainingUptime","showWhen","player","getTalents","sniperTraining","changeEmitter","TypedEvent","onAny","specOptionsChangeEmitter","talentsChangeEmitter","TimeToTrapWeaveMs","HunterRotationConfig","inputs","InputHelpers.makeRotationEnumInput","name","RotationType","SingleTarget","Aoe","StingType","NoSting","ScorpidSting","SerpentSting","getRotation","type","InputHelpers.makeRotationBooleanInput","Custom","explosiveShot","lockAndLoad","rotationChangeEmitter","InputHelpers.makeRotationNumberInput","BeastMasteryTalents","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfBestialWrath","major2","GlyphOfSteadyShot","major3","GlyphOfSerpentSting","minor1","MinorGlyph","GlyphOfFeignDeath","minor2","GlyphOfRevivePet","minor3","GlyphOfMendPet","MarksmanTalents","GlyphOfChimeraShot","SurvivalTalents","GlyphOfExplosiveShot","GlyphOfKillShot","DefaultRotation","HunterRotation","sting","trapWeave","viperStartManaPercent","viperStopManaPercent","multiDotSerpentSting","allowExplosiveShotDownrank","ROTATION_PRESET_LEGACY_DEFAULT","rotation","SavedRotation","APLRotation_Type","TypeSimple","simple","specRotationJson","ROTATION_PRESET_BM","specRotationOptionsJson","APLRotation","ROTATION_PRESET_MM","ROTATION_PRESET_SV","ROTATION_PRESET_AOE","DefaultOptions","HunterOptions","ammo","useHuntersMark","petType","PetType","Wolf","petTalents","ferocityDefault","petUptime","sniperTrainingUptime","timeToTrapWeaveMs","BMDefaultOptions","ferocityBMDefault","DefaultConsumes","Consumes","defaultPotion","Potions","PotionOfSpeed","flask","Flask","FlaskOfEndlessRage","food","Food","FoodFishFeast","petFood","PetFood","PetFoodSpicedMammothTreats","MM_PRERAID_PRESET","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","getTalentTree","gear","EquipmentSpec","MM_P1_PRESET","MM_P2_PRESET","MM_P3_PRESET","MM_P4_PRESET","MM_P5_PRESET","SV_PRERAID_PRESET","SV_P1_PRESET","SV_P2_PRESET","SV_P3_PRESET","SV_P4_PRESET","SV_P5_PRESET","HunterSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","warnings","simUI","updateOn","getContent","petIsExotic","Chimaera","CoreHound","Devilsaur","Silithid","SpiritBeast","Worm","includes","getSpecOptions","isBM","beastMastery","specOptions","HunterPetTalents","petTalentString","protoToTalentString","getPetTalentsConfig","talentPoints","getTalentPoints","maxPoints","epStats","Stat","StatStamina","StatIntellect","StatAgility","StatRangedAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatMP5","epPseudoStats","PseudoStat","PseudoStatRangedDps","epReferenceStat","displayStats","StatHealth","modifyDisplayStats","stats","Stats","addStat","lethalShots","Mechanics.MELEE_CRIT_RATING_PER_CRIT_CHANCE","rangedWeapon","getEquippedItem","ItemSlot","ItemSlotRanged","enchant","effectId","getRace","Race","RaceDwarf","item","rangedWeaponType","RangedWeaponType","RangedWeaponTypeGun","RaceTroll","RangedWeaponTypeBow","talents","defaults","Presets.SV_P1_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultRotation","Presets.SurvivalTalents","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","powerWordFortitude","TristateEffect","TristateEffectImproved","giftOfTheWild","bloodlust","strengthOfEarthTotem","windfuryTotem","battleShout","leaderOfThePack","sanctifiedRetribution","unleashedRage","moonkinAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","debuffs","Debuffs","sunderArmor","faerieFire","judgementOfWisdom","curseOfElements","heartOfTheCrusader","savageCombat","playerIconInputs","HunterInputs.PetTypeInput","HunterInputs.WeaponAmmo","HunterInputs.UseHuntersMark","rotationInputs","HunterInputs.HunterRotationConfig","petConsumeInputs","IconInputs.SpicedMammothTreats","includeBuffDebuffInputs","IconInputs.StaminaBuff","IconInputs.SpellDamageDebuff","excludeBuffDebuffInputs","otherInputs","HunterInputs.PetUptime","HunterInputs.TimeToTrapWeaveMs","HunterInputs.SniperTrainingUptime","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.BeastMasteryTalents","Presets.MarksmanTalents","rotations","Presets.ROTATION_PRESET_LEGACY_DEFAULT","Presets.ROTATION_PRESET_BM","Presets.ROTATION_PRESET_MM","Presets.ROTATION_PRESET_SV","Presets.ROTATION_PRESET_AOE","Presets.MM_PRERAID_PRESET","Presets.MM_P1_PRESET","Presets.MM_P2_PRESET","Presets.MM_P3_PRESET","Presets.MM_P4_PRESET","Presets.MM_P5_PRESET","Presets.SV_PRERAID_PRESET","Presets.SV_P2_PRESET","Presets.SV_P3_PRESET","Presets.SV_P4_PRESET","Presets.SV_P5_PRESET","autoRotation","talentTree","sim","encounter","targets","length","simpleRotation","prepullActions","actions","prepotAt","startAutocastCDsAt","doAt","APLPrepullAction","startAt","flat","AplUtils.standardCooldownDefaults","serpentSting","scorpidSting","volley","aimedShot","multiShot","steadyShot","silencingShot","chimeraShot","blackArrow","explosiveShot4","explosiveShot3","push","Hunter_Rotation_RotationType","a","priorityList","action","APLListItem"],"mappings":"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"}