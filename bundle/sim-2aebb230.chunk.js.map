{"version":3,"file":"sim-2aebb230.chunk.js","sources":["../../../ui/warlock/presets.ts","../../../ui/warlock/inputs.ts","../../../ui/warlock/sim.ts"],"sourcesContent":["import {\r\n\tConsumes,\r\n\tFlask,\r\n\tFood,\r\n\tPetFood,\r\n\tGlyphs,\r\n\tEquipmentSpec,\r\n\tPotions,\r\n\tRaidBuffs,\r\n\tIndividualBuffs,\r\n\tDebuffs,\r\n\tTristateEffect,\r\n\tFaction,\r\n\tSpec,\r\n} from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport {\r\n\tWarlock_Rotation as WarlockRotation,\r\n\tWarlock_Options as WarlockOptions,\r\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\r\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\r\n\tWarlock_Rotation_SpecSpell as SpecSpell,\r\n\tWarlock_Rotation_Curse as Curse,\r\n\t// Warlock_Options_WeaponImbue as WeaponImbue,\r\n\tWarlock_Options_Armor as Armor,\r\n\tWarlock_Options_Summon as Summon,\r\n\tWarlockMajorGlyph as MajorGlyph,\r\n\tWarlockMinorGlyph as MinorGlyph,\r\n} from '../core/proto/warlock.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\nexport const BIS_TOOLTIP = 'This gear preset is inspired from Zephan\\'s Affliction guide: https://www.warcrafttavern.com/wotlk/guides/pve-affliction-warlock/';\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wowhead.com/wotlk/talent-calc and copy the numbers in the url.\r\n\r\nexport const AfflictionTalents = {\r\n\tname: 'Affliction',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '2350002030023510253500331151--550000051',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfQuickDecay,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfHaunt,\r\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\r\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\r\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DemonologyTalents = {\r\n\tname: 'Demonology',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-203203301035012530135201351-550000052',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfLifeTap,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfQuickDecay,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfFelguard,\r\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\r\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\r\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DestructionTalents = {\r\n\tname: 'Destruction',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-03310030003-05203205210331051335230351',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: MajorGlyph.GlyphOfConflagrate,\r\n\t\t\tmajor2: MajorGlyph.GlyphOfLifeTap,\r\n\t\t\tmajor3: MajorGlyph.GlyphOfIncinerate,\r\n\t\t\tminor1: MinorGlyph.GlyphOfSouls,\r\n\t\t\tminor2: MinorGlyph.GlyphOfDrainSoul,\r\n\t\t\tminor3: MinorGlyph.GlyphOfSubjugateDemon,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const AfflictionRotation = WarlockRotation.create({\r\n\tprimarySpell: PrimarySpell.ShadowBolt,\r\n\tsecondaryDot: SecondaryDot.UnstableAffliction,\r\n\tspecSpell: SpecSpell.Haunt,\r\n\tcurse: Curse.Agony,\r\n\tcorruption: true,\r\n\tuseInfernal: false,\r\n\tdetonateSeed: true,\r\n});\r\n\r\nexport const DemonologyRotation = WarlockRotation.create({\r\n\tprimarySpell: PrimarySpell.ShadowBolt,\r\n\tsecondaryDot: SecondaryDot.Immolate,\r\n\tspecSpell: SpecSpell.NoSpecSpell,\r\n\tcurse: Curse.Doom,\r\n\tcorruption: true,\r\n\tuseInfernal: false,\r\n\tdetonateSeed: true,\r\n});\r\n\r\nexport const DestructionRotation = WarlockRotation.create({\r\n\tprimarySpell: PrimarySpell.Incinerate,\r\n\tsecondaryDot: SecondaryDot.Immolate,\r\n\tspecSpell: SpecSpell.ChaosBolt,\r\n\tcurse: Curse.Doom,\r\n\tcorruption: false,\r\n\tuseInfernal: false,\r\n\tdetonateSeed: true,\r\n});\r\n\r\nexport const AfflictionOptions = WarlockOptions.create({\r\n\tarmor: Armor.FelArmor,\r\n\tsummon: Summon.Felhunter,\r\n\t// weaponImbue: WeaponImbue.GrandSpellstone,\r\n});\r\n\r\nexport const DemonologyOptions = WarlockOptions.create({\r\n\tarmor: Armor.FelArmor,\r\n\tsummon: Summon.Felguard,\r\n\t// weaponImbue: WeaponImbue.GrandSpellstone,\r\n});\r\n\r\nexport const DestructionOptions = WarlockOptions.create({\r\n\tarmor: Armor.FelArmor,\r\n\tsummon: Summon.Imp,\r\n\t// weaponImbue: WeaponImbue.GrandFirestone,\r\n});\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfTheFrostWyrm,\r\n\tfood: Food.FoodFishFeast,\r\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\r\n\tdefaultPotion: Potions.PotionOfWildMagic,\r\n\tprepopPotion: Potions.PotionOfWildMagic,\r\n});\r\n\r\nexport const DefaultRaidBuffs = RaidBuffs.create({\r\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\tarcaneBrilliance: true,\r\n\tdivineSpirit: true,\r\n\ttrueshotAura: true,\r\n\tleaderOfThePack: TristateEffect.TristateEffectImproved,\r\n\ticyTalons: true,\r\n\ttotemOfWrath: true,\r\n\tmoonkinAura: TristateEffect.TristateEffectImproved,\r\n\twrathOfAirTotem: true,\r\n\tsanctifiedRetribution: true,\r\n\tbloodlust: true,\r\n});\r\n\r\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\r\n\tblessingOfKings: true,\r\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\tvampiricTouch: true,\r\n});\r\n\r\nexport const DestroIndividualBuffs = IndividualBuffs.create({\r\n\tblessingOfKings: true,\r\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\r\n\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n});\r\n\r\nexport const DefaultDebuffs = Debuffs.create({\r\n\tsunderArmor: true,\r\n\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\tbloodFrenzy: true,\r\n\tebonPlaguebringer: true,\r\n\theartOfTheCrusader: true,\r\n\tjudgementOfWisdom: true,\r\n});\r\n\r\nexport const DestroDebuffs = Debuffs.create({\r\n\tsunderArmor: true,\r\n\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\tbloodFrenzy: true,\r\n\tebonPlaguebringer: true,\r\n\theartOfTheCrusader: true,\r\n\tjudgementOfWisdom: true,\r\n\tshadowMastery: true,\r\n});\r\n\r\nexport const OtherDefaults = {\r\n\tdistanceFromTarget: 25,\r\n};\r\n\r\nexport const SWP_BIS = {\r\n\tname: 'Straight Outa SWP',\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":34340,\"enchant\":3002,\"gems\":[34220,32215]},\r\n\t\t{\"id\":34204},\r\n\t\t{\"id\":31054,\"enchant\":2982,\"gems\":[32215,35760]},\r\n\t\t{\"id\":34242,\"enchant\":2621,\"gems\":[32196]},\r\n\t\t{\"id\":34364,\"enchant\":2661,\"gems\":[32196,35488,32196]},\r\n\t\t{\"id\":34436,\"enchant\":2650,\"gems\":[35760,0]},\r\n\t\t{\"id\":34344,\"enchant\":2937,\"gems\":[35760,32196,0]},\r\n\t\t{\"id\":34541,\"gems\":[35760,0]},\r\n\t\t{\"id\":34181,\"enchant\":2748,\"gems\":[32196,32196,35760]},\r\n\t\t{\"id\":34564,\"enchant\":2940,\"gems\":[35760]},\r\n\t\t{\"id\":34362,\"enchant\":2928},\r\n\t\t{\"id\":34230,\"enchant\":2928},\r\n\t\t{\"id\":32483},\r\n\t\t{\"id\":34429},\r\n\t\t{\"id\":34336,\"enchant\":2672},\r\n\t\t{\"id\":34179},\r\n\t\t{\"id\":34347,\"gems\":[35760]}\r\n  ]}`),\r\n};\r\nexport const P1_PreBiS_11 = {\r\n\tname: 'Pre-Raid Affliction',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":44910,\"enchant\":3820,\"gems\":[41285,39998]},\r\n\t\t{\"id\":42647,\"gems\":[39998]},\r\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[39998,40051]},\r\n\t\t{\"id\":41610,\"enchant\":3722},\r\n\t\t{\"id\":39497,\"enchant\":3832,\"gems\":[39998,40051]},\r\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":42113,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40696,\"gems\":[40051,39998]},\r\n\t\t{\"id\":34181,\"enchant\":3719,\"gems\":[39998,39998,40051]},\r\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40026]},\r\n\t\t{\"id\":43253,\"gems\":[40026]},\r\n\t\t{\"id\":37694},\r\n\t\t{\"id\":40682},\r\n\t\t{\"id\":37873},\r\n\t\t{\"id\":45085,\"enchant\":3834},\r\n\t\t{\"id\":40698},\r\n\t\t{\"id\":34348,\"gems\":[39998]}\r\n  ]}`),\r\n}\r\nexport const P1_Preset_Demo_Destro = {\r\n\tname: 'P1 Demo / Destro',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40421,\"enchant\":3820,\"gems\":[41285,40014]},\r\n\t\t{\"id\":44661,\"gems\":[40099]},\r\n\t\t{\"id\":40424,\"enchant\":3810,\"gems\":[40049]},\r\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40099]},\r\n\t\t{\"id\":40423,\"enchant\":3832,\"gems\":[40049,40014]},\r\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":40420,\"enchant\":3604,\"gems\":[39998,0]},\r\n\t\t{\"id\":40561,\"gems\":[40014]},\r\n\t\t{\"id\":40560,\"enchant\":3719},\r\n\t\t{\"id\":40558,\"enchant\":3606},\r\n\t\t{\"id\":40399},\r\n\t\t{\"id\":40719},\r\n\t\t{\"id\":40432},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":40396,\"enchant\":3834},\r\n\t\t{\"id\":39766},\r\n\t\t{\"id\":39712}\r\n  ]}`),\r\n}\r\n\r\n\r\n// will have only rare gems, but a Lightweave Embroidery on cloak.\r\nexport const P1_Preset_Affliction = {\r\n\tname: 'P1 Affliction',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":40421,\"enchant\":3820,\"gems\":[41285,40051]},\r\n\t\t{\"id\":44661,\"gems\":[40026]},\r\n\t\t{\"id\":40424,\"enchant\":3810,\"gems\":[39998]},\r\n\t\t{\"id\":44005,\"enchant\":3722,\"gems\":[40026]},\r\n\t\t{\"id\":40423,\"enchant\":3832,\"gems\":[39998,40051]},\r\n\t\t{\"id\":44008,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":40420,\"enchant\":3604,\"gems\":[39998,0]},\r\n\t\t{\"id\":40561,\"gems\":[39998]},\r\n\t\t{\"id\":40560,\"enchant\":3719},\r\n\t\t{\"id\":40558,\"enchant\":3606},\r\n\t\t{\"id\":40399},\r\n\t\t{\"id\":40719},\r\n\t\t{\"id\":40432},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":40396,\"enchant\":3834},\r\n\t\t{\"id\":39766},\r\n\t\t{\"id\":39712}\r\n  ]}`),\r\n}\r\n\r\n\r\nexport const P1_PreBiS_14 = {\r\n\tname: 'Pre-Raid',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":44910,\"enchant\":3820,\"gems\":[41285,39998]},\r\n\t\t{\"id\":42647,\"gems\":[40049]},\r\n\t\t{\"id\":34210,\"enchant\":3810,\"gems\":[39998,40014]},\r\n\t\t{\"id\":41610,\"enchant\":3722},\r\n\t\t{\"id\":39497,\"enchant\":3832,\"gems\":[39998,40014]},\r\n\t\t{\"id\":37361,\"enchant\":2332,\"gems\":[0]},\r\n\t\t{\"id\":42113,\"enchant\":3604,\"gems\":[0]},\r\n\t\t{\"id\":40696,\"gems\":[40014,39998]},\r\n\t\t{\"id\":34181,\"enchant\":3719,\"gems\":[39998,39998,40014]},\r\n\t\t{\"id\":44202,\"enchant\":3606,\"gems\":[40026]},\r\n\t\t{\"id\":43253,\"gems\":[40026]},\r\n\t\t{\"id\":37694},\r\n\t\t{\"id\":40682},\r\n\t\t{\"id\":37873},\r\n\t\t{\"id\":45085,\"enchant\":3834},\r\n\t\t{\"id\":40698},\r\n\t\t{\"id\":34348,\"gems\":[39998]}\r\n  ]}`),\r\n}\r\n\r\nexport const P2_Preset_Affliction = {\r\n\tname: 'P2 Affliction',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45497,\"enchant\":3820,\"gems\":[41285,45883]},\r\n\t\t{\"id\":45133,\"gems\":[40051]},\r\n\t\t{\"id\":46068,\"enchant\":3810,\"gems\":[39998,40049]},\r\n\t\t{\"id\":45618,\"enchant\":3722,\"gems\":[40026]},\r\n\t\t{\"id\":46137,\"enchant\":1144,\"gems\":[39998,40014]},\r\n\t\t{\"id\":45446,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":45665,\"enchant\":3604,\"gems\":[39998,39998,0]},\r\n\t\t{\"id\":45619,\"enchant\":3601,\"gems\":[40051,40051,39998]},\r\n\t\t{\"id\":46139,\"enchant\":3872,\"gems\":[39998,39998]},\r\n\t\t{\"id\":45135,\"enchant\":3606,\"gems\":[39998,40051]},\r\n\t\t{\"id\":45495,\"gems\":[40026]},\r\n\t\t{\"id\":46046,\"gems\":[39998]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":45466},\r\n\t\t{\"id\":45620,\"enchant\":3834,\"gems\":[39998]},\r\n\t\t{\"id\":45617},\r\n\t\t{\"id\":45294,\"gems\":[40051]}\r\n\t]}`),\r\n}\r\n\r\nexport const P2_Preset_Demo_Destro = {\r\n\tname: 'P2 Demo / Destro',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() > 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45497,\"enchant\":3820,\"gems\":[41285,45883]},\r\n\t\t{\"id\":45243,\"gems\":[39998]},\r\n\t\t{\"id\":46068,\"enchant\":3810,\"gems\":[39998,40051]},\r\n\t\t{\"id\":45618,\"enchant\":3722,\"gems\":[40026]},\r\n\t\t{\"id\":46137,\"enchant\":1144,\"gems\":[39998,40051]},\r\n\t\t{\"id\":45446,\"enchant\":2332,\"gems\":[39998,0]},\r\n\t\t{\"id\":45520,\"enchant\":3604,\"gems\":[39998,39998,0]},\r\n\t\t{\"id\":45619,\"enchant\":3601,\"gems\":[39998,39998,39998]},\r\n\t\t{\"id\":46139,\"enchant\":3872,\"gems\":[39998,39998]},\r\n\t\t{\"id\":45135,\"enchant\":3606,\"gems\":[39998,39998]},\r\n\t\t{\"id\":45495,\"gems\":[40026]},\r\n\t\t{\"id\":45297,\"gems\":[39998]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":45148},\r\n\t\t{\"id\":45620,\"enchant\":3834,\"gems\":[39998]},\r\n\t\t{\"id\":45617},\r\n\t\t{\"id\":45294,\"gems\":[39998]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Affliction_Horde = {\r\n\tname: 'P3 Affliction [H]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0\r\n\t\t\t&& player.getFaction() == Faction.Horde,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":47468,\"gems\":[40155]},\r\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40155]},\r\n\t\t{\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47462,\"enchant\":1144,\"gems\":[40133,40155,40113]},\r\n\t\t{\"id\":47485,\"enchant\":2332,\"gems\":[40113,0]},\r\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47795,\"enchant\":3872,\"gems\":[40113,40153]},\r\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40113]},\r\n\t\t{\"id\":47489,\"gems\":[40155]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":45466},\r\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40113]},\r\n\t\t{\"id\":48032,\"gems\":[40155]},\r\n\t\t{\"id\":45294,\"gems\":[40051]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Affliction_Alliance = {\r\n\tname: 'P3 Affliction [A]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 0\r\n\t\t\t&& player.getFaction() == Faction.Alliance,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":47144,\"gems\":[40155]},\r\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40155]},\r\n\t\t{\"id\":47552,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47129,\"enchant\":1144,\"gems\":[40133,40155,40113]},\r\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40113,0]},\r\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47790,\"enchant\":3872,\"gems\":[40113,40155]},\r\n\t\t{\"id\":47097,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40113]},\r\n\t\t{\"id\":47237,\"gems\":[40155]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":45466},\r\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40113]},\r\n\t\t{\"id\":47958,\"gems\":[40155]},\r\n\t\t{\"id\":45294,\"gems\":[40155]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Demo_Horde = {\r\n\tname: 'P3 Demo [H]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1\r\n\t\t\t&& player.getFaction() == Faction.Horde,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":45133,\"gems\":[40153]},\r\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40113]},\r\n\t\t{\"id\":47554,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47794,\"enchant\":1144,\"gems\":[40113,40133]},\r\n\t\t{\"id\":47485,\"enchant\":2332,\"gems\":[40133,0]},\r\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47435,\"enchant\":3872,\"gems\":[40113,40133,40133]},\r\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40133]},\r\n\t\t{\"id\":47489,\"gems\":[40113]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40133]},\r\n\t\t{\"id\":47470},\r\n\t\t{\"id\":45294,\"gems\":[40113]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Demo_Alliance = {\r\n\tname: 'P3 Demo [A]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1\r\n\t\t\t&& player.getFaction() == Faction.Alliance,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":45243,\"gems\":[40113]},\r\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40153]},\r\n\t\t{\"id\":47553,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47791,\"enchant\":1144,\"gems\":[40153,40133]},\r\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40133,0]},\r\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47062,\"enchant\":3872,\"gems\":[40113,40133,40133]},\r\n\t\t{\"id\":47097,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40133]},\r\n\t\t{\"id\":47237,\"gems\":[40153]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":40255},\r\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40133]},\r\n\t\t{\"id\":47146},\r\n\t\t{\"id\":45294,\"gems\":[40113]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Destro_Horde = {\r\n\tname: 'P3 Destro [H]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2\r\n\t\t\t&& player.getFaction() == Faction.Horde,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47796,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":47468,\"gems\":[40153]},\r\n\t\t{\"id\":47793,\"enchant\":3810,\"gems\":[40155]},\r\n\t\t{\"id\":47551,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47794,\"enchant\":1144,\"gems\":[40113,40133]},\r\n\t\t{\"id\":47467,\"enchant\":2332,\"gems\":[40153,0]},\r\n\t\t{\"id\":47797,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":47419,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47435,\"enchant\":3872,\"gems\":[40113,40133,40133]},\r\n\t\t{\"id\":47454,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40133]},\r\n\t\t{\"id\":47489,\"gems\":[40155]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":47477},\r\n\t\t{\"id\":47422,\"enchant\":3834,\"gems\":[40133]},\r\n\t\t{\"id\":47437},\r\n\t\t{\"id\":45294,\"gems\":[40113]}\r\n\t]}`),\r\n}\r\n\r\nexport const P3_Preset_Destro_Alliance = {\r\n\tname: 'P3 Destro [A]',\r\n\ttooltip: BIS_TOOLTIP,\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2\r\n\t\t\t&& player.getFaction() == Faction.Alliance,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":47789,\"enchant\":3820,\"gems\":[41285,40133]},\r\n\t\t{\"id\":47144,\"gems\":[40155]},\r\n\t\t{\"id\":47792,\"enchant\":3810,\"gems\":[40155]},\r\n\t\t{\"id\":47552,\"enchant\":3722,\"gems\":[40113]},\r\n\t\t{\"id\":47129,\"enchant\":1144,\"gems\":[40133,40155,40113]},\r\n\t\t{\"id\":47208,\"enchant\":2332,\"gems\":[40133,0]},\r\n\t\t{\"id\":47788,\"enchant\":3604,\"gems\":[40113,0]},\r\n\t\t{\"id\":46973,\"enchant\":3599,\"gems\":[40133,40113,40113]},\r\n\t\t{\"id\":47790,\"enchant\":3872,\"gems\":[40113,40155]},\r\n\t\t{\"id\":47205,\"enchant\":3606,\"gems\":[40133,40113]},\r\n\t\t{\"id\":45495,\"gems\":[40133]},\r\n\t\t{\"id\":47237,\"gems\":[40155]},\r\n\t\t{\"id\":45518},\r\n\t\t{\"id\":47188},\r\n\t\t{\"id\":46980,\"enchant\":3834,\"gems\":[40133]},\r\n\t\t{\"id\":47958,\"gems\":[40155]},\r\n\t\t{\"id\":45294,\"gems\":[40155]}\r\n\t]}`),\r\n}\r\n\r\nexport const APL_Demo_Default = {\r\n\tname: 'Demo Default',\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 1,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: WarlockRotation.toJsonString(DemonologyRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n    \"type\": \"TypeAPL\",\r\n    \"prepullActions\": [\r\n\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57946}}},\"doAtValue\":{\"const\":{\"val\":\"-4s\"}}},\r\n      {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-2.5s\"}}},\r\n      {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47809}}},\"doAtValue\":{\"const\":{\"val\":\"-2.5s\"}}}\r\n    ],\r\n    \"priorityList\": [\r\n        { \"action\": { \"autocastOtherCooldowns\": {} } },\r\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 50589 } } } },\r\n        { \"action\": { \"condition\": { \"cmp\": {\r\n                        \"op\": \"OpGt\",\r\n                        \"lhs\": { \"remainingTime\": {} },\r\n                        \"rhs\": { \"const\": { \"val\": \"60s\" } }\r\n                    } }, \"castSpell\": { \"spellId\": { \"spellId\": 47867 } } } },\r\n        { \"action\": { \"multidot\": { \"spellId\": { \"spellId\": 47813 }, \"maxDots\": 1, \"maxOverlap\": { \"const\": { \"val\": \"0ms\" } } } } },\r\n        { \"action\": { \"condition\": { \"and\": {\r\n                        \"vals\": [\r\n                            { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47867 } } } } },\r\n                            { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47864 } } } } },\r\n                            { \"cmp\": {\r\n                                    \"op\": \"OpGt\",\r\n                                    \"lhs\": { \"remainingTime\": {} },\r\n                                    \"rhs\": { \"const\": { \"val\": \"22s\" } }\r\n                                } } ] } }, \"castSpell\": { \"spellId\": { \"spellId\": 47864 } } } },\r\n        { \"action\": { \"condition\": { \"and\": { \"vals\": [\r\n                            { \"cmp\": {\r\n                                    \"op\": \"OpLt\",\r\n                                    \"lhs\": { \"auraRemainingTime\": { \"auraId\": { \"spellId\": 63321 } } },\r\n                                    \"rhs\": { \"const\": { \"val\": \"3s\" } } } },\r\n                            { \"cmp\": {\r\n                                    \"op\": \"OpGt\",\r\n                                    \"lhs\": { \"remainingTime\": {} },\r\n                                    \"rhs\": { \"const\": { \"val\": \"10s\" } }\r\n                                } } ] } }, \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } },\r\n        { \"action\": { \"condition\": { \"and\": { \"vals\": [\r\n                            { \"cmp\": {\r\n                                    \"op\": \"OpLt\",\r\n                                    \"lhs\": { \"dotRemainingTime\": { \"spellId\": { \"spellId\": 47811 } } },\r\n                                    \"rhs\": { \"spellCastTime\": { \"spellId\": { \"spellId\": 47811 } } } } },\r\n                            { \"cmp\": {\r\n                                    \"op\": \"OpGe\",\r\n                                    \"lhs\": { \"remainingTime\": {} },\r\n                                    \"rhs\": { \"const\": { \"val\": \"12s\" } } } } ]\r\n                    } }, \"castSpell\": { \"spellId\": { \"spellId\": 47811 } } } },\r\n        { \"action\": { \"condition\": { \"auraIsActive\": { \"auraId\": { \"spellId\": 63167 } } }, \"castSpell\": { \"spellId\": { \"spellId\": 47825 } } } },\r\n        { \"action\": { \"condition\": { \"auraIsActive\": { \"auraId\": { \"spellId\": 71165 } } }, \"castSpell\": { \"spellId\": { \"spellId\": 47838 } } } },\r\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47809 } } } },\r\n        { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } }\r\n]}`)})}\r\n\r\nexport const APL_Destro_Default = {\r\n\tname: 'Destro Default',\r\n\tenableWhen: (player: Player<Spec.SpecWarlock>) => player.getTalentTree() == 2,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: WarlockRotation.toJsonString(DestructionRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n    \"type\": \"TypeAPL\",\r\n    \"prepullActions\": [\r\n\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57946}}},\"doAtValue\":{\"const\":{\"val\":\"-5s\"}}},\r\n      {\"action\":{\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}},\"doAtValue\":{\"const\":{\"val\":\"-3.5s\"}}},\r\n      {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":47825}}},\"doAtValue\":{\"const\":{\"val\":\"-3.5s\"}}}\r\n    ],\r\n    \"priorityList\": [\r\n      { \"action\": { \"autocastOtherCooldowns\": {} } },\r\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 17962 } } } },\r\n      { \"action\": { \"condition\": {\r\n            \"cmp\": {\r\n              \"op\": \"OpGt\", \"lhs\": { \"remainingTime\": {} },\r\n              \"rhs\": { \"const\": { \"val\": \"60s\" } }\r\n            }\r\n          }, \"castSpell\": { \"spellId\": { \"spellId\": 47867 } } } },\r\n      { \"action\": { \"condition\": {\r\n            \"cmp\": {\r\n              \"op\": \"OpLt\",\r\n              \"lhs\": { \"dotRemainingTime\": { \"spellId\": { \"spellId\": 47811 } } },\r\n              \"rhs\": { \"spellCastTime\": { \"spellId\": { \"spellId\": 47811 } } } } },\r\n          \"castSpell\": { \"spellId\": { \"spellId\": 47811 } } } },\r\n      { \"action\": { \"condition\": {\r\n            \"cmp\": {\r\n              \"op\": \"OpLt\",\r\n              \"lhs\": { \"remainingTime\": {} },\r\n              \"rhs\": { \"const\": { \"val\": \"61s\" } } }\r\n          },\r\n          \"castSpell\": { \"spellId\": { \"spellId\": 1122 } } } },\r\n      { \"action\": { \"condition\": {\r\n            \"and\": { \"vals\": [\r\n                { \"cmp\": {\r\n                    \"op\": \"OpLt\",\r\n                    \"lhs\": { \"auraRemainingTime\": { \"auraId\": { \"spellId\": 63321 } } },\r\n                    \"rhs\": { \"const\": { \"val\": \"3s\" } } } },\r\n                { \"cmp\": {\r\n                    \"op\": \"OpGt\",\r\n                    \"lhs\": { \"remainingTime\": {} },\r\n                    \"rhs\": { \"const\": { \"val\": \"10s\" } } } }\r\n            ] } },\r\n          \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } },\r\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 59172 } } } },\r\n      { \"action\": { \"condition\": {\r\n            \"and\": {\r\n              \"vals\": [\r\n                { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47867 } } } } },\r\n                { \"not\": { \"val\": { \"dotIsActive\": { \"spellId\": { \"spellId\": 47864 } } } } },\r\n                { \"cmp\": {\r\n                    \"op\": \"OpGt\",\r\n                    \"lhs\": { \"remainingTime\": {} },\r\n                    \"rhs\": { \"const\": { \"val\": \"22s\" } } }\r\n                }\r\n              ] } },\r\n          \"castSpell\": { \"spellId\": { \"spellId\": 47864 } } } },\r\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 47838 } } } },\r\n      { \"action\": { \"castSpell\": { \"spellId\": { \"spellId\": 57946 } } } }\r\n    ]\r\n}`)})}\r\n","import {\r\n\tWarlock_Options as WarlockOptions,\r\n\tWarlock_Rotation_Type as RotationType,\r\n\tWarlock_Rotation_Preset as RotationPreset,\r\n\tWarlock_Rotation_PrimarySpell as PrimarySpell,\r\n\tWarlock_Rotation_SecondaryDot as SecondaryDot,\r\n\tWarlock_Rotation_SpecSpell as SpecSpell,\r\n\tWarlock_Rotation_Curse as Curse,\r\n\tWarlock_Options_Armor as Armor,\r\n\tWarlock_Options_Summon as Summon,\r\n} from '../core/proto/warlock.js';\r\n\r\nimport { Spec, Glyphs, ItemSlot } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\nimport { Player } from '../core/player.js';\r\nimport { EventID, TypedEvent } from '../core/typed_event.js';\r\n\r\nimport * as Presets from './presets.js';\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Armor>({\r\n\tfieldName: 'armor',\r\n\tvalues: [\r\n\t\t{ value: Armor.NoArmor, tooltip: 'No Armor' },\r\n\t\t{ actionId: ActionId.fromSpellId(28189), value: Armor.FelArmor },\r\n\t\t{ actionId: ActionId.fromSpellId(27260), value: Armor.DemonArmor },\r\n\t],\r\n});\r\n\r\nexport const PetInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecWarlock, Summon>({\r\n\tfieldName: 'summon',\r\n\tvalues: [\r\n\t\t{ value: Summon.NoSummon, tooltip: 'No Pet' },\r\n\t\t{ actionId: ActionId.fromSpellId(688), value: Summon.Imp },\r\n\t\t{ actionId: ActionId.fromSpellId(712), value: Summon.Succubus },\r\n\t\t{ actionId: ActionId.fromSpellId(691), value: Summon.Felhunter },\r\n\t\t{\r\n\t\t\tactionId: ActionId.fromSpellId(30146), value: Summon.Felguard,\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().summonFelguard,\r\n\t\t},\r\n\t],\r\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\r\n});\r\n\r\nexport const NewDPBehaviour = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecWarlock>({\r\n\tfieldName: 'newDPBehaviour',\r\n\tlabel: 'New DP behaviour',\r\n\tlabelTooltip: 'Changes DP to always be 10% of spell power, 1s ICD',\r\n});\r\n\r\nexport const PrimarySpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, PrimarySpell>({\r\n\tfieldName: 'primarySpell',\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(27209), value: PrimarySpell.ShadowBolt },\r\n\t\t{ actionId: ActionId.fromSpellId(32231), value: PrimarySpell.Incinerate },\r\n\t\t{ actionId: ActionId.fromSpellId(27243), value: PrimarySpell.Seed },\r\n\t],\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\tconst newRotation = player.getRotation();\r\n\t\tif (newValue == PrimarySpell.Seed && newRotation.corruption == true) {\r\n\t\t\tnewRotation.corruption = false\r\n\t\t}\r\n\t\tnewRotation.primarySpell = newValue\r\n\t\tnewRotation.preset = RotationPreset.Manual;\r\n\t\tplayer.setRotation(eventID, newRotation);\r\n\t},\r\n});\r\n\r\nexport const SecondaryDotInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SecondaryDot>({\r\n\tfieldName: 'secondaryDot',\r\n\tvalues: [\r\n\t\t{ value: SecondaryDot.NoSecondaryDot },\r\n\t\t{ actionId: ActionId.fromSpellId(27215), value: SecondaryDot.Immolate },\r\n\t\t{\r\n\t\t\tactionId: ActionId.fromSpellId(30405), value: SecondaryDot.UnstableAffliction,\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().unstableAffliction,\r\n\t\t},\r\n\t],\r\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\tconst newRotation = player.getRotation();\r\n\t\tnewRotation.secondaryDot = newValue;\r\n\t\tnewRotation.preset = RotationPreset.Manual;\r\n\t\tplayer.setRotation(eventID, newRotation);\r\n\t},\r\n});\r\n\r\nexport const SpecSpellInput = InputHelpers.makeRotationEnumIconInput<Spec.SpecWarlock, SpecSpell>({\r\n\tfieldName: 'specSpell',\r\n\tvalues: [\r\n\t\t{ value: SpecSpell.NoSpecSpell },\r\n\t\t{\r\n\t\t\tactionId: ActionId.fromSpellId(59161), value: SpecSpell.Haunt,\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt,\r\n\t\t},\r\n\t\t{\r\n\t\t\tactionId: ActionId.fromSpellId(59170), value: SpecSpell.ChaosBolt,\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().chaosBolt,\r\n\t\t},\r\n\t],\r\n\tchangeEmitter: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\r\n\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getTalents().haunt || player.getTalents().chaosBolt,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\tconst newRotation = player.getRotation();\r\n\t\tnewRotation.specSpell = newValue;\r\n\t\tnewRotation.preset = RotationPreset.Manual;\r\n\t\tplayer.setRotation(eventID, newRotation);\r\n\t},\r\n});\r\n\r\n\r\nexport const CorruptionSpell = {\r\n\ttype: 'icon' as const,\r\n\tid: ActionId.fromSpellId(27216),\r\n\tstates: 2,\r\n\textraCssClasses: [\r\n\t\t'Corruption-picker',\r\n\t],\r\n\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.changeEmitter,\r\n\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().corruption,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: boolean) => {\r\n\t\tconst newRotation = player.getRotation();\r\n\t\tif (newRotation.primarySpell == PrimarySpell.Seed && newValue == true) {\r\n\t\t\tnewRotation.primarySpell = PrimarySpell.ShadowBolt\r\n\t\t}\r\n\t\tnewRotation.corruption = newValue;\r\n\t\tnewRotation.preset = RotationPreset.Manual;\r\n\t\tplayer.setRotation(eventID, newRotation);\r\n\t},\r\n};\r\n\r\nexport const WarlockRotationConfig = {\r\n\tinputs: [\r\n\t\t{\r\n\t\t\ttype: 'enum' as const,\r\n\r\n\t\t\tlabel: 'Sim presets',\r\n\t\t\tlabelTooltip: 'Quick switch between sim spec presets. Will UPDATE TALENTS and SPELLS to defaults.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Affliction', value: RotationType.Affliction },\r\n\t\t\t\t{ name: 'Demonology', value: RotationType.Demonology },\r\n\t\t\t\t{ name: 'Destruction', value: RotationType.Destruction },\r\n\t\t\t],\r\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\r\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().type,\r\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\t\t\tvar newRotation = player.getRotation();\r\n\t\t\t\tvar newOptions: WarlockOptions;\r\n\t\t\t\tvar newGlyphs: Glyphs;\r\n\t\t\t\tvar newTalents: string;\r\n\t\t\t\tif (newValue == RotationType.Affliction) {\r\n\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\r\n\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create();\r\n\t\t\t\t\tnewRotation = Presets.AfflictionRotation\r\n\t\t\t\t\tnewOptions = Presets.AfflictionOptions\r\n\t\t\t\t} else if (newValue == RotationType.Demonology) {\r\n\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\r\n\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create();\r\n\t\t\t\t\tnewRotation = Presets.DemonologyRotation\r\n\t\t\t\t\tnewOptions = Presets.DemonologyOptions\r\n\t\t\t\t} else if (newValue == RotationType.Destruction) {\r\n\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\r\n\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create();\r\n\t\t\t\t\tnewRotation = Presets.DestructionRotation\r\n\t\t\t\t\tnewOptions = Presets.DestructionOptions\r\n\t\t\t\t}\r\n\t\t\t\tnewRotation.type = newValue;\r\n\t\t\t\tnewRotation.preset = RotationPreset.Automatic;\r\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\r\n\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\r\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\ttype: 'enum' as const,\r\n\t\t\tlabel: 'Spell & Talent',\r\n\t\t\tlabelTooltip: 'Putting it on Automatic will UPDATE talents and spells to defaults.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"Manual\", value: RotationPreset.Manual },\r\n\t\t\t\t{ name: \"Automatic\", value: RotationPreset.Automatic },\r\n\t\t\t],\r\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\r\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().preset,\r\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\t\t\tvar newRotation = player.getRotation();\r\n\t\t\t\tif (newValue == RotationPreset.Automatic) {\r\n\t\t\t\t\tvar newOptions: WarlockOptions;\r\n\t\t\t\t\tvar newGlyphs: Glyphs;\r\n\t\t\t\t\tvar newTalents: string;\r\n\t\t\t\t\tif (newRotation.type == RotationType.Affliction) {\r\n\t\t\t\t\t\tnewTalents = Presets.AfflictionTalents.data.talentsString\r\n\t\t\t\t\t\tnewGlyphs = Presets.AfflictionTalents.data.glyphs || Glyphs.create()\r\n\t\t\t\t\t\tnewRotation = Presets.AfflictionRotation\r\n\t\t\t\t\t\tnewOptions = Presets.AfflictionOptions\r\n\t\t\t\t\t} else if (newRotation.type == RotationType.Demonology) {\r\n\t\t\t\t\t\tnewTalents = Presets.DemonologyTalents.data.talentsString\r\n\t\t\t\t\t\tnewGlyphs = Presets.DemonologyTalents.data.glyphs || Glyphs.create()\r\n\t\t\t\t\t\tnewRotation = Presets.DemonologyRotation\r\n\t\t\t\t\t\tnewOptions = Presets.DemonologyOptions\r\n\t\t\t\t\t} else if (newRotation.type == RotationType.Destruction) {\r\n\t\t\t\t\t\tnewTalents = Presets.DestructionTalents.data.talentsString\r\n\t\t\t\t\t\tnewGlyphs = Presets.DestructionTalents.data.glyphs || Glyphs.create()\r\n\t\t\t\t\t\tnewRotation = Presets.DestructionRotation\r\n\t\t\t\t\t\tnewOptions = Presets.DestructionOptions\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnewRotation.preset = newValue;\r\n\t\t\t\tTypedEvent.freezeAllAndDo(() => {\r\n\t\t\t\t\tif (newValue == RotationPreset.Automatic) {\r\n\t\t\t\t\t\tplayer.setTalentsString(eventID, newTalents);\r\n\t\t\t\t\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t\t\t\t\t\tplayer.setGlyphs(eventID, newGlyphs);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tplayer.setRotation(eventID, newRotation);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t},\r\n\t\t{\r\n\t\t\ttype: 'enum' as const,\r\n\t\t\tlabel: 'Curse',\r\n\t\t\tlabelTooltip: 'Manual curse selection.',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: \"None\", value: Curse.NoCurse },\r\n\t\t\t\t{ name: \"Elements\", value: Curse.Elements },\r\n\t\t\t\t{ name: \"Weakness\", value: Curse.Weakness },\r\n\t\t\t\t{ name: \"Doom\", value: Curse.Doom },\r\n\t\t\t\t{ name: \"Agony\", value: Curse.Agony },\r\n\t\t\t\t{ name: \"Tongues\", value: Curse.Tongues }\r\n\t\t\t],\r\n\t\t\tchangedEvent: (player: Player<Spec.SpecWarlock>) => player.rotationChangeEmitter,\r\n\t\t\tgetValue: (player: Player<Spec.SpecWarlock>) => player.getRotation().curse,\r\n\t\t\tsetValue: (eventID: EventID, player: Player<Spec.SpecWarlock>, newValue: number) => {\r\n\t\t\t\tconst newRotation = player.getRotation();\r\n\t\t\t\tnewRotation.curse = newValue;\r\n\t\t\t\tnewRotation.preset = RotationPreset.Manual;\r\n\t\t\t\tplayer.setRotation(eventID, newRotation);\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\r\n\t\t\tfieldName: 'useInfernal',\r\n\t\t\tlabel: 'Summon Infernal',\r\n\t\t\tlabelTooltip: 'Casts Inferno 60s before the fight is over',\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\r\n\t\t\tfieldName: 'detonateSeed',\r\n\t\t\tlabel: 'Detonate Seed on Cast',\r\n\t\t\tlabelTooltip: 'Simulates raid doing damage to targets such that seed detonates immediately on cast.',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().primarySpell == PrimarySpell.Seed,\r\n\t\t}),\r\n\t\tInputHelpers.makeRotationBooleanInput<Spec.SpecWarlock>({\r\n\t\t\tfieldName: 'enableWeaponSwap',\r\n\t\t\tlabel: 'Enable Weapon Swapping',\r\n\t\t\tlabelTooltip: 'Toggle on/off item swapping',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => player.getRotation().type == RotationType.Affliction\r\n\t\t}),\r\n\t\tInputHelpers.MakeItemSwapInput<Spec.SpecWarlock>({\r\n\t\t\tfieldName: 'weaponSwap',\r\n\t\t\tvalues: [\r\n\t\t\t\tItemSlot.ItemSlotMainHand,\r\n\t\t\t\tItemSlot.ItemSlotOffHand,\r\n\t\t\t\tItemSlot.ItemSlotRanged,\r\n\t\t\t],\r\n\t\t\tlabelTooltip: 'Start with the swapped items until Corruption has been cast, then swap back to normal gear set. If a slot is empty it will not be used in the swap',\r\n\t\t\tshowWhen: (player: Player<Spec.SpecWarlock>) => (player.getRotation().type == RotationType.Affliction && player.getRotation().enableWeaponSwap) || false\r\n\t\t}),\r\n\t],\r\n};\r\n","import {\r\n\tPartyBuffs,\r\n\tSpec,\r\n\tStat,\r\n} from '../core/proto/common.js';\r\n\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { Player } from '../core/player.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as WarlockInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class WarlockSimUI extends IndividualSimUI<Spec.SpecWarlock> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecWarlock>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'warlock-sim-ui',\r\n\t\t\tcssScheme: 'warlock',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t\t\"Drain Soul is currently disabled for APL rotations\"\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. DPS classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatSpellPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatIntellect,\r\n\t\t\t\tStat.StatSpirit,\r\n\t\t\t\tStat.StatSpellPower,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t\tStat.StatMP5,\r\n\t\t\t\tStat.StatStamina,\r\n\t\t\t],\r\n\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P3_Preset_Affliction_Horde.gear,\r\n\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatIntellect]: 0.18,\r\n\t\t\t\t\t[Stat.StatSpirit]: 0.54,\r\n\t\t\t\t\t[Stat.StatSpellPower]: 1,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0.93,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.53,\r\n\t\t\t\t\t[Stat.StatSpellHaste]: 0.81,\r\n\t\t\t\t\t[Stat.StatStamina]: 0.01,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.AfflictionRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.AfflictionTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.AfflictionOptions,\r\n\r\n\t\t\t\t// Default buffs and debuffs settings.\r\n\t\t\t\traidBuffs: Presets.DefaultRaidBuffs,\r\n\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({}),\r\n\r\n\t\t\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\r\n\r\n\t\t\t\tdebuffs: Presets.DefaultDebuffs,\r\n\r\n\t\t\t\tother: Presets.OtherDefaults,\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t\tWarlockInputs.PetInput,\r\n\t\t\t\tWarlockInputs.ArmorInput,\r\n\t\t\t\t// WarlockInputs.WeaponImbueInput,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationIconInputs: [\r\n\t\t\t\tWarlockInputs.PrimarySpellInput,\r\n\t\t\t\tWarlockInputs.CorruptionSpell,\r\n\t\t\t\tWarlockInputs.SecondaryDotInput,\r\n\t\t\t\tWarlockInputs.SpecSpellInput,\r\n\t\t\t],\r\n\t\t\trotationInputs: WarlockInputs.WarlockRotationConfig,\r\n\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.ReplenishmentBuff,\r\n\t\t\t\tIconInputs.MajorArmorDebuff,\r\n\t\t\t\tIconInputs.MinorArmorDebuff,\r\n\t\t\t\tIconInputs.PhysicalDamageDebuff,\r\n\t\t\t\tIconInputs.MeleeHasteBuff,\r\n\t\t\t\tIconInputs.MeleeCritBuff,\r\n\t\t\t\tIconInputs.MP5Buff,\r\n\t\t\t\tIconInputs.AttackPowerPercentBuff,\r\n\t\t\t\tIconInputs.AttackPowerBuff,\r\n\t\t\t\tIconInputs.StrengthAndAgilityBuff,\r\n\t\t\t\tIconInputs.StaminaBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t],\r\n\t\t\tpetConsumeInputs: [\r\n\t\t\t\tIconInputs.SpicedMammothTreats,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tOtherInputs.DistanceFromTarget,\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tWarlockInputs.NewDPBehaviour,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.AfflictionTalents,\r\n\t\t\t\t\tPresets.DemonologyTalents,\r\n\t\t\t\t\tPresets.DestructionTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.APL_Demo_Default,\r\n\t\t\t\t\tPresets.APL_Destro_Default,\r\n\t\t\t\t],\r\n\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.SWP_BIS,\r\n\t\t\t\t\tPresets.P1_PreBiS_11,\r\n\t\t\t\t\tPresets.P1_PreBiS_14,\r\n\t\t\t\t\tPresets.P1_Preset_Affliction,\r\n\t\t\t\t\tPresets.P1_Preset_Demo_Destro,\r\n\t\t\t\t\tPresets.P2_Preset_Affliction,\r\n\t\t\t\t\tPresets.P2_Preset_Demo_Destro,\r\n\t\t\t\t\tPresets.P3_Preset_Affliction_Horde,\r\n\t\t\t\t\tPresets.P3_Preset_Affliction_Alliance,\r\n\t\t\t\t\tPresets.P3_Preset_Demo_Horde,\r\n\t\t\t\t\tPresets.P3_Preset_Demo_Alliance,\r\n\t\t\t\t\tPresets.P3_Preset_Destro_Horde,\r\n\t\t\t\t\tPresets.P3_Preset_Destro_Alliance,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["BIS_TOOLTIP","AfflictionTalents","name","data","SavedTalents","create","talentsString","glyphs","Glyphs","major1","MajorGlyph","GlyphOfQuickDecay","major2","GlyphOfLifeTap","major3","GlyphOfHaunt","minor1","MinorGlyph","GlyphOfSouls","minor2","GlyphOfDrainSoul","minor3","GlyphOfSubjugateDemon","DemonologyTalents","GlyphOfFelguard","DestructionTalents","GlyphOfConflagrate","GlyphOfIncinerate","AfflictionRotation","WarlockRotation","primarySpell","PrimarySpell","ShadowBolt","secondaryDot","SecondaryDot","UnstableAffliction","specSpell","SpecSpell","Haunt","curse","Curse","Agony","corruption","useInfernal","detonateSeed","DemonologyRotation","Immolate","NoSpecSpell","Doom","DestructionRotation","Incinerate","ChaosBolt","AfflictionOptions","WarlockOptions","armor","Armor","FelArmor","summon","Summon","Felhunter","DemonologyOptions","Felguard","DestructionOptions","Imp","DefaultConsumes","Consumes","flask","Flask","FlaskOfTheFrostWyrm","food","Food","FoodFishFeast","petFood","PetFood","PetFoodSpicedMammothTreats","defaultPotion","Potions","PotionOfWildMagic","prepopPotion","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","icyTalons","totemOfWrath","moonkinAura","wrathOfAirTotem","sanctifiedRetribution","bloodlust","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","vampiricTouch","DefaultDebuffs","Debuffs","sunderArmor","faerieFire","bloodFrenzy","ebonPlaguebringer","heartOfTheCrusader","judgementOfWisdom","shadowMastery","OtherDefaults","distanceFromTarget","SWP_BIS","gear","EquipmentSpec","fromJsonString","P1_PreBiS_11","tooltip","enableWhen","player","getTalentTree","P1_Preset_Demo_Destro","P1_Preset_Affliction","P1_PreBiS_14","P2_Preset_Affliction","P2_Preset_Demo_Destro","P3_Preset_Affliction_Horde","getFaction","Faction","Horde","P3_Preset_Affliction_Alliance","Alliance","P3_Preset_Demo_Horde","P3_Preset_Demo_Alliance","P3_Preset_Destro_Horde","P3_Preset_Destro_Alliance","APL_Demo_Default","rotation","SavedRotation","specRotationOptionsJson","toJsonString","APLRotation","APL_Destro_Default","ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","NoArmor","actionId","ActionId","fromSpellId","DemonArmor","PetInput","NoSummon","Succubus","showWhen","getTalents","summonFelguard","changeEmitter","NewDPBehaviour","InputHelpers.makeSpecOptionsBooleanInput","label","labelTooltip","PrimarySpellInput","InputHelpers.makeRotationEnumIconInput","Seed","setValue","eventID","newValue","newRotation","getRotation","preset","RotationPreset","Manual","setRotation","SecondaryDotInput","NoSecondaryDot","unstableAffliction","SpecSpellInput","haunt","chaosBolt","CorruptionSpell","type","id","states","extraCssClasses","changedEvent","getValue","WarlockRotationConfig","inputs","RotationType","Affliction","Demonology","Destruction","rotationChangeEmitter","newOptions","newGlyphs","newTalents","Presets.AfflictionTalents","Presets.AfflictionRotation","Presets.AfflictionOptions","Presets.DemonologyTalents","Presets.DemonologyRotation","Presets.DemonologyOptions","Presets.DestructionTalents","Presets.DestructionRotation","Presets.DestructionOptions","Automatic","TypedEvent","freezeAllAndDo","setTalentsString","setSpecOptions","setGlyphs","NoCurse","Elements","Weakness","Tongues","InputHelpers.makeRotationBooleanInput","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","ItemSlotRanged","enableWeaponSwap","WarlockSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatStamina","epReferenceStat","displayStats","StatHealth","StatMP5","defaults","Presets.P3_Preset_Affliction_Horde","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","specOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","WarlockInputs.PetInput","WarlockInputs.ArmorInput","rotationIconInputs","WarlockInputs.PrimarySpellInput","WarlockInputs.CorruptionSpell","WarlockInputs.SecondaryDotInput","WarlockInputs.SpecSpellInput","rotationInputs","WarlockInputs.WarlockRotationConfig","includeBuffDebuffInputs","IconInputs.ReplenishmentBuff","IconInputs.MajorArmorDebuff","IconInputs.MinorArmorDebuff","IconInputs.PhysicalDamageDebuff","IconInputs.MeleeHasteBuff","IconInputs.MeleeCritBuff","IconInputs.MP5Buff","IconInputs.AttackPowerPercentBuff","IconInputs.AttackPowerBuff","IconInputs.StrengthAndAgilityBuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","petConsumeInputs","IconInputs.SpicedMammothTreats","otherInputs","OtherInputs.DistanceFromTarget","OtherInputs.TankAssignment","WarlockInputs.NewDPBehaviour","encounterPicker","showExecuteProportion","presets","rotations","Presets.APL_Demo_Default","Presets.APL_Destro_Default","Presets.SWP_BIS","Presets.P1_PreBiS_11","Presets.P1_PreBiS_14","Presets.P1_Preset_Affliction","Presets.P1_Preset_Demo_Destro","Presets.P2_Preset_Affliction","Presets.P2_Preset_Demo_Destro","Presets.P3_Preset_Affliction_Alliance","Presets.P3_Preset_Demo_Horde","Presets.P3_Preset_Demo_Alliance","Presets.P3_Preset_Destro_Horde","Presets.P3_Preset_Destro_Alliance"],"mappings":"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"}