{"version":3,"file":"sim-5e5e136b.chunk.js","sources":["../../../ui/deathknight/inputs.ts","../../../ui/deathknight/presets.ts","../../../ui/deathknight/sim.ts"],"sourcesContent":["import { ItemSlot, Spec } from '../core/proto/common.js';\r\nimport { UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\r\nimport { ActionId } from '../core/proto_utils/action_id.js';\r\n\r\nimport {\r\n\tDeathknightTalents as DeathKnightTalents,\r\n\tDeathknight_Rotation_ArmyOfTheDead as ArmyOfTheDead,\r\n\tDeathknight_Rotation_DrwDiseases as DrwDiseases,\r\n\tDeathknight_Rotation_BloodOpener as BloodOpener,\r\n\tDeathknight_Rotation_BloodSpell as BloodSpell,\r\n\tDeathknight_Rotation_FirstDisease as FirstDisease,\r\n\tDeathknight_Rotation_DeathAndDecayPrio as DeathAndDecayPrio,\r\n\tDeathknight_Rotation_Presence as StartingPresence,\r\n\tDeathknight_Rotation_BloodRuneFiller as BloodRuneFiller,\r\n\tDeathknight_Rotation_BloodTap as BloodTap,\r\n\tDeathknight_Rotation_FrostRotationType as FrostRotationType,\r\n\tDeathknight_Rotation_CustomSpellOption as CustomSpellOption,\r\n\tDeathknight_Rotation as DeathKnightRotation,\r\n\tDeathknight_Options as DeathKnightOptions,\r\n\tDeathknightMajorGlyph,\r\n} from '../core/proto/deathknight.js';\r\n\r\nimport * as InputHelpers from '../core/components/input_helpers.js';\r\nimport { Player } from '../core/player';\r\nimport { EventID, TypedEvent } from '../core/typed_event';\r\n\r\n// Configuration for spec-specific UI elements on the settings tab.\r\n// These don't need to be in a separate file but it keeps things cleaner.\r\n\r\nexport const SelfUnholyFrenzy = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'unholyFrenzyTarget',\r\n\tlabel: 'Self Unholy Frenzy',\r\n\tlabelTooltip: 'Cast Unholy Frenzy on yourself.',\r\n\textraCssClasses: [\r\n\t\t'within-raid-sim-hide',\r\n\t],\r\n\tgetValue: (player: Player<Spec.SpecDeathknight>) => player.getSpecOptions().unholyFrenzyTarget?.type == UnitType.Player,\r\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecDeathknight>, newValue: boolean) => {\r\n\t\tconst newOptions = player.getSpecOptions();\r\n\t\tnewOptions.unholyFrenzyTarget = UnitReference.create({\r\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\r\n\t\t\tindex: 0,\r\n\t\t});\r\n\t\tplayer.setSpecOptions(eventID, newOptions);\r\n\t},\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().hysteria,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const StartingRunicPower = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'startingRunicPower',\r\n\tlabel: 'Starting Runic Power',\r\n\tlabelTooltip: 'Initial RP at the start of each iteration.',\r\n});\r\n\r\nexport const PetUptime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'petUptime',\r\n\tlabel: 'Ghoul Uptime (%)',\r\n\tlabelTooltip: 'Percent of the fight duration for which your ghoul will be on target.',\r\n\tpercent: true,\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().masterOfGhouls,\r\n});\r\n\r\nexport const PrecastGhoulFrenzy = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'precastGhoulFrenzy',\r\n\tlabel: 'Pre-Cast Ghoul Frenzy',\r\n\tlabelTooltip: 'Cast Ghoul Frenzy 10 seconds before combat starts.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && player.getTalents().ghoulFrenzy,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const PrecastHornOfWinter = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'precastHornOfWinter',\r\n\tlabel: 'Pre-Cast Horn of Winter',\r\n\tlabelTooltip: 'Precast Horn of Winter for 10 extra runic power before fight.',\r\n});\r\n\r\nexport const DrwPestiApply = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'drwPestiApply',\r\n\tlabel: 'DRW Pestilence Add',\r\n\tlabelTooltip: 'There is currently an interaction with DRW and pestilence where you can use pestilence to force DRW to apply diseases if they are already applied by the DK. It only works with Glyph of Disease and if there is an off target. This toggle forces the sim to assume there is an off target.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalentTree() == 0 && (player.getGlyphs().major1 == DeathknightMajorGlyph.GlyphOfDisease || player.getGlyphs().major2 == DeathknightMajorGlyph.GlyphOfDisease || player.getGlyphs().major3 == DeathknightMajorGlyph.GlyphOfDisease),\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const DiseaseRefreshDuration = InputHelpers.makeRotationNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'diseaseRefreshDuration',\r\n\tlabel: 'Disease Refresh Duration',\r\n\tlabelTooltip: 'Minimum duration for refreshing a disease.',\r\n});\r\n\r\nexport const UseDeathAndDecay = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'useDeathAndDecay',\r\n\tlabel: 'Death and Decay',\r\n\tlabelTooltip: 'Use Death and Decay based rotation.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => (player.getTalents().summonGargoyle && player.getTalents().scourgeStrike && !player.getRotation().autoRotation) || (!player.getTalents().epidemic && !player.getRotation().desyncRotation && player.getTalentTree() == 1 && player.sim.encounter.targets.length >= 3),\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter, player.sim.encounter.targetsChangeEmitter]),\r\n});\r\n\r\nexport const SetDeathAndDecayPrio = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, DeathAndDecayPrio>({\r\n\tfieldName: 'deathAndDecayPrio',\r\n\tlabel: 'Death and Decay Prio',\r\n\tlabelTooltip: '<p>Chose how to prioritize death and decay usage:</p>\\\r\n\t\t<p><b>Max Rune Downtime</b>: Prioritizes spending runes over holding them for death and decay</p>\\\r\n\t\t<p><b>Max Dnd Uptime</b>: Prioritizes dnd uptime and can hold runes for longer then rune grace</p>',\r\n\tvalues: [\r\n\t\t{ name: 'Max Rune Downtime', value: DeathAndDecayPrio.MaxRuneDowntime },\r\n\t\t{ name: 'Max Dnd Uptime', value: DeathAndDecayPrio.MaxDndUptime },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && (player.getRotation().useDeathAndDecay || !player.getTalents().scourgeStrike) && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const UseEmpowerRuneWeapon = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'useEmpowerRuneWeapon',\r\n\tlabel: 'Empower Rune Weapon',\r\n\tlabelTooltip: 'Use Empower Rune Weapon in rotation.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalentTree() != 0 && player.getRotation().frostRotationType != FrostRotationType.Custom,\r\n});\r\n\r\nexport const UseGargoyle = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'useGargoyle',\r\n\tlabel: 'Summon Gargoyle',\r\n\tlabelTooltip: 'Use Summon Gargoyle in rotation.',\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n});\r\n\r\nexport const HoldErwArmy = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'holdErwArmy',\r\n\tlabel: 'Hold ERW for AotD',\r\n\tlabelTooltip: 'Hold Empower Rune Weapon for after Summon Gargoyle to guarantee maximized snapshot for Army of the Dead.',\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getRotation().useEmpowerRuneWeapon && player.getRotation().armyOfTheDead == ArmyOfTheDead.AsMajorCd && player.getTalentTree() != 0,\r\n});\r\n\r\nexport const BloodlustPresence = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, StartingPresence>({\r\n\tfieldName: 'blPresence',\r\n\tlabel: 'Bloodlust Presence',\r\n\tlabelTooltip: 'Presence during bloodlust.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood', value: StartingPresence.Blood },\r\n\t\t{ name: 'Unholy', value: StartingPresence.Unholy },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const GargoylePresence = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, StartingPresence>({\r\n\tfieldName: 'gargoylePresence',\r\n\tlabel: 'Gargoyle Presence',\r\n\tlabelTooltip: 'Presence during Gargoyle.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood', value: StartingPresence.Blood },\r\n\t\t{ name: 'Unholy', value: StartingPresence.Unholy },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation && !player.getRotation().preNerfedGargoyle,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const BloodTapGhoulFrenzy = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'btGhoulFrenzy',\r\n\tlabel: 'BT Ghoul Frenzy',\r\n\tlabelTooltip: 'Use Ghoul Frenzy only with Blood Tap.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().ghoulFrenzy && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const FirstDiseaseInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, FirstDisease>({\r\n\tfieldName: 'firstDisease',\r\n\tlabel: 'First Disease',\r\n\tlabelTooltip: 'Chose which disease to apply first.',\r\n\tvalues: [\r\n\t\t{ name: 'Frost Fever', value: FirstDisease.FrostFever },\r\n\t\t{ name: 'Blood Plague', value: FirstDisease.BloodPlague },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const ArmyOfTheDeadInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, ArmyOfTheDead>({\r\n\tfieldName: 'armyOfTheDead',\r\n\tlabel: 'Army of the Dead',\r\n\tlabelTooltip: 'Chose how to use Army of the Dead.',\r\n\tvalues: [\r\n\t\t{ name: 'Do not use', value: ArmyOfTheDead.DoNotUse },\r\n\t\t{ name: 'Pre pull', value: ArmyOfTheDead.PreCast },\r\n\t\t{ name: 'As Major CD', value: ArmyOfTheDead.AsMajorCd },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const StartingPresenceInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, StartingPresence>({\r\n\tfieldName: 'startingPresence',\r\n\tlabel: 'Starting Presence',\r\n\tlabelTooltip: 'Chose the presence you start combat in.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood', value: StartingPresence.Blood },\r\n\t\t{ name: 'Unholy', value: StartingPresence.Unholy },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const FightPresence = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, StartingPresence>({\r\n\tfieldName: 'presence',\r\n\tlabel: 'Fight Presence',\r\n\tlabelTooltip: 'Presence to be in during the encounter.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood', value: StartingPresence.Blood },\r\n\t\t{ name: 'Unholy', value: StartingPresence.Unholy },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const BloodRuneFillerInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, BloodRuneFiller>({\r\n\tfieldName: 'bloodRuneFiller',\r\n\tlabel: 'Blood Rune Filler',\r\n\tlabelTooltip: 'Chose what to spend your free blood runes on.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood Strike', value: BloodRuneFiller.BloodStrike },\r\n\t\t{ name: 'Blood Boil', value: BloodRuneFiller.BloodBoil },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const PreNerfedGargoyleInput = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'preNerfedGargoyle',\r\n\tlabel: 'Pre-Nerfed Gargoyle (haste snapshot)',\r\n\tlabelTooltip: \"Use old Gargoyle that snapshots haste\",\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation && player.sim.getShowExperimental(),\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const BloodTapInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, BloodTap>({\r\n\tfieldName: 'bloodTap',\r\n\tlabel: 'Blood Tap',\r\n\tlabelTooltip: 'Chose what to spend your Blood Tap on.',\r\n\tvalues: [\r\n\t\t{ name: 'Ghoul Frenzy', value: BloodTap.GhoulFrenzy },\r\n\t\t{ name: 'Icy Touch', value: BloodTap.IcyTouch },\r\n\t\t{ name: 'Blood Strike', value: BloodTap.BloodStrikeBT },\r\n\t\t{ name: 'Blood Boil', value: BloodTap.BloodBoilBT },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().summonGargoyle && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const UseAMSInput = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'useAms',\r\n\tlabel: 'Use AMS',\r\n\tlabelTooltip: 'Use AMS around predicted damage for a RP gain.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().howlingBlast && !player.getRotation().autoRotation && player.getRotation().frostRotationType != FrostRotationType.Custom,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const AvgAMSSuccessRateInput = InputHelpers.makeRotationNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'avgAmsSuccessRate',\r\n\tlabel: 'Avg AMS Success %',\r\n\tlabelTooltip: 'Chance for damage to be taken during the 5 second window of AMS.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getRotation().useAms == true && !player.getRotation().autoRotation && player.getTalents().howlingBlast && player.getRotation().frostRotationType != FrostRotationType.Custom,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const AvgAMSHitInput = InputHelpers.makeRotationNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'avgAmsHit',\r\n\tlabel: 'Avg AMS Hit',\r\n\tlabelTooltip: 'How much on average (+-10%) the character is hit for when AMS is successful.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getRotation().useAms == true && !player.getRotation().autoRotation && player.getTalents().howlingBlast && player.getRotation().frostRotationType != FrostRotationType.Custom,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const UseAutoRotation = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'autoRotation',\r\n\tlabel: 'Automatic Rotation',\r\n\tlabelTooltip: 'Have sim automatically adjust rotation based on the scenario. This is still in development and currently only works for Unholy.',\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getTalents().howlingBlast,\r\n});\r\n\r\nexport const DesyncRotation = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'desyncRotation',\r\n\tlabel: 'Use Desync Rotation',\r\n\tlabelTooltip: 'Use the Desync Rotation.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().howlingBlast && !player.getTalents().epidemic && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const Presence = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, StartingPresence>({\r\n\tfieldName: 'presence',\r\n\tlabel: 'Presence',\r\n\tlabelTooltip: 'Presence to be in during the encounter.',\r\n\tvalues: [\r\n\t\t{ name: 'Blood', value: StartingPresence.Blood },\r\n\t\t{ name: 'Frost', value: StartingPresence.Frost },\r\n\t\t{ name: 'Unholy', value: StartingPresence.Unholy },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().howlingBlast && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const BloodSpenderInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, BloodSpell>({\r\n\tfieldName: 'bloodSpender',\r\n\tlabel: 'Blood Spender',\r\n\tlabelTooltip: 'Chose how to use Blood Runes.',\r\n\tvalues: [\r\n\t\t{ name: 'Heart Strike', value: BloodSpell.HS },\r\n\t\t{ name: 'Blood Boil', value: BloodSpell.BB },\r\n\t\t{ name: 'Blood Strike', value: BloodSpell.BS },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalentTree() == 0,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const UseDancingRuneWeapon = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'useDancingRuneWeapon',\r\n\tlabel: 'Dancing Rune Weapon',\r\n\tlabelTooltip: 'Use Dancing Rune Weapon.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().dancingRuneWeapon && !player.getRotation().autoRotation,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const DrwDiseasesInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, DrwDiseases>({\r\n\tfieldName: 'drwDiseases',\r\n\tlabel: 'DRW Disease',\r\n\tlabelTooltip: 'Chose how to apply diseases for Dancing Rune Weapon.',\r\n\tvalues: [\r\n\t\t{ name: 'Do not apply', value: DrwDiseases.DoNotApply },\r\n\t\t{ name: 'IT + PS', value: DrwDiseases.Normal },\r\n\t\t{ name: 'Pestilence', value: DrwDiseases.Pestilence },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getRotation().useDancingRuneWeapon && !player.getRotation().autoRotation && player.getTalents().dancingRuneWeapon && player.getRotation().bloodOpener == BloodOpener.Standard,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const BloodOpenerInput = InputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, BloodOpener>({\r\n\tfieldName: 'bloodOpener',\r\n\tlabel: 'Opener',\r\n\tlabelTooltip: 'Chose which opener to use.',\r\n\tvalues: [\r\n\t\t{ name: 'Standard', value: BloodOpener.Standard },\r\n\t\t{ name: 'Incan', value: BloodOpener.Experimental_1 },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalentTree() == 0,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const FrostCustomRotation = InputHelpers.makeCustomRotationInput<Spec.SpecDeathknight, CustomSpellOption>({\r\n\tfieldName: 'frostCustomRotation',\r\n\tnumColumns: 4,\r\n\tvalues: [\r\n\t\t{ actionId: ActionId.fromSpellId(49909), value: CustomSpellOption.CustomIcyTouch },\r\n\t\t{ actionId: ActionId.fromSpellId(49921), value: CustomSpellOption.CustomPlagueStrike },\r\n\t\t{ actionId: ActionId.fromSpellId(50842), value: CustomSpellOption.CustomPestilence },\r\n\t\t{ actionId: ActionId.fromSpellId(51425), value: CustomSpellOption.CustomObliterate },\r\n\t\t{ actionId: ActionId.fromSpellId(51411), value: CustomSpellOption.CustomHowlingBlast },\r\n\t\t{ actionId: ActionId.fromSpellId(59052), value: CustomSpellOption.CustomHowlingBlastRime },\r\n\t\t{ actionId: ActionId.fromSpellId(49941), value: CustomSpellOption.CustomBloodBoil },\r\n\t\t{ actionId: ActionId.fromSpellId(49930), value: CustomSpellOption.CustomBloodStrike },\r\n\t\t{ actionId: ActionId.fromSpellId(49938), value: CustomSpellOption.CustomDeathAndDecay },\r\n\t\t{ actionId: ActionId.fromSpellId(57623), value: CustomSpellOption.CustomHornOfWinter },\r\n\t\t{ actionId: ActionId.fromSpellId(51271), value: CustomSpellOption.CustomUnbreakableArmor },\r\n\t\t{ actionId: ActionId.fromSpellId(45529), value: CustomSpellOption.CustomBloodTap },\r\n\t\t{ actionId: ActionId.fromSpellId(47568), value: CustomSpellOption.CustomEmpoweredRuneWeapon },\r\n\t\t{ actionId: ActionId.fromSpellId(55268), value: CustomSpellOption.CustomFrostStrike },\r\n\t],\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getRotation().frostRotationType == FrostRotationType.Custom,\r\n});\r\n\r\nexport const EnableWeaponSwap = InputHelpers.makeRotationBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'enableWeaponSwap',\r\n\tlabel: 'Enable Weapon Swapping',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalents().summonGargoyle && player.getRotation().useGargoyle,\r\n})\r\n\r\nexport const WeaponSwapInputs = InputHelpers.MakeItemSwapInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'weaponSwap',\r\n\tvalues: [\r\n\t\tItemSlot.ItemSlotMainHand,\r\n\t\tItemSlot.ItemSlotOffHand,\r\n\t\t//ItemSlot.ItemSlotRanged, Not support yet\r\n\t],\r\n\tlabelTooltip: '<b>Berserking</b> will be equipped when FC has procced and Berserking is not active.<br><br><b>Black Magic</b> will be prioed to swap during gargoyle or if gargoyle will be on CD for full BM Icd.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalents().summonGargoyle && player.getRotation().useGargoyle && player.getRotation().enableWeaponSwap,\r\n})\r\n\r\nexport const NewDrwInput = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'newDrw',\r\n\tlabel: 'PTR DRW Scaling',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().dancingRuneWeapon && player.getRotation().useDancingRuneWeapon,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n})\r\n\r\nexport const DiseaseDowntime = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'diseaseDowntime',\r\n\tlabel: 'Disease Downtime',\r\n\tlabelTooltip: 'Maximum allowed downtime between disease applications.',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => !player.getRotation().autoRotation && player.getTalentTree() == 2,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n});\r\n\r\nexport const VirulenceRefreshTime = InputHelpers.makeRotationNumberInput<Spec.SpecDeathknight>({\r\n\tfieldName: 'virulenceRefresh',\r\n\tlabel: 'Virulence Refresh',\r\n\tlabelTooltip: 'How long to wait after ICD is ready before trying to refresh buff with strike (0-10 seconds range).',\r\n\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.sim.getShowExperimental() && !player.getRotation().autoRotation && player.getTalentTree() == 2 && player.getEquippedItem(ItemSlot.ItemSlotRanged)?._item.id == 47673,\r\n\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter, player.gearChangeEmitter]),\r\n});\r\n\r\nexport const DeathKnightRotationConfig = {\r\n\tinputs: [\r\n\t\tInputHelpers.makeRotationEnumInput<Spec.SpecDeathknight, FrostRotationType>({\r\n\t\t\tfieldName: 'frostRotationType',\r\n\t\t\tlabel: 'Rotation Type',\r\n\t\t\tvalues: [\r\n\t\t\t\t{ name: 'Single Target', value: FrostRotationType.SingleTarget },\r\n\t\t\t\t{ name: 'Custom', value: FrostRotationType.Custom },\r\n\t\t\t],\r\n\t\t\tchangeEmitter: (player: Player<Spec.SpecDeathknight>) => TypedEvent.onAny([player.rotationChangeEmitter, player.talentsChangeEmitter]),\r\n\t\t\tshowWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalents().howlingBlast && !player.getRotation().autoRotation,\r\n\t\t}),\r\n\t\tPresence,\r\n\t\tUseAutoRotation,\r\n\t\tBloodTapGhoulFrenzy,\r\n\t\tUseGargoyle,\r\n\t\tEnableWeaponSwap,\r\n\t\tWeaponSwapInputs,\r\n\t\tUseEmpowerRuneWeapon,\r\n\t\tUseDancingRuneWeapon,\r\n\t\t//NewDrwInput,\r\n\t\tHoldErwArmy,\r\n\t\tBloodTapInput,\r\n\t\tBloodSpenderInput,\r\n\t\tArmyOfTheDeadInput,\r\n\t\t//BloodOpenerInput,\r\n\t\tDrwDiseasesInput,\r\n\t\tFirstDiseaseInput,\r\n\t\tStartingPresenceInput,\r\n\t\tGargoylePresence,\r\n\t\tBloodlustPresence,\r\n\t\tFightPresence,\r\n\t\tBloodRuneFillerInput,\r\n\t\tUseDeathAndDecay,\r\n\t\tUseAMSInput,\r\n\t\tAvgAMSSuccessRateInput,\r\n\t\tAvgAMSHitInput,\r\n\t\tDesyncRotation,\r\n\t\tFrostCustomRotation,\r\n\t\tPreNerfedGargoyleInput,\r\n\t\tVirulenceRefreshTime,\r\n\t],\r\n};\r\n","import {\r\n\tConsumes,\r\n\tCustomRotation,\r\n\tCustomSpell,\r\n\tEquipmentSpec,\r\n\tExplosive,\r\n\tFlask,\r\n\tFood,\r\n\tGlyphs,\r\n\tPetFood,\r\n\tPotions,\r\n\tUnitReference,\r\n\tSpec\r\n} from '../core/proto/common.js';\r\nimport { SavedRotation, SavedTalents } from '../core/proto/ui.js';\r\nimport { Player } from '../core/player.js';\r\n\r\nimport {\r\n\tDeathknight_Options as DeathKnightOptions,\r\n\tDeathknight_Rotation as DeathKnightRotation,\r\n\tDeathknight_Rotation_ArmyOfTheDead,\r\n\tDeathknight_Rotation_BloodRuneFiller,\r\n\tDeathknight_Rotation_CustomSpellOption as CustomSpellOption,\r\n\tDeathknight_Rotation_FrostRotationType,\r\n\tDeathknight_Rotation_Presence,\r\n\tDeathknightMajorGlyph,\r\n\tDeathknightMinorGlyph,\r\n\tDeathknight_Rotation_DrwDiseases,\r\n\tDeathknight_Rotation_BloodSpell,\r\n} from '../core/proto/deathknight.js';\r\n\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\nimport { APLRotation } from '../core/proto/apl.js';\r\n\r\n// Preset options for this spec.\r\n// Eventually we will import these values for the raid sim too, so its good to\r\n// keep them in a separate file.\r\n\r\n// Default talents. Uses the wowhead calculator format, make the talents on\r\n// https://wotlk.wowhead.com/talent-calc and copy the numbers in the url.\r\nexport const FrostTalents = {\r\n\tname: 'Frost BL',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '23050005-32005350352203012300033101351',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfObliterate,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfFrostStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const FrostUnholyTalents = {\r\n\tname: 'Frost UH',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '01-32002350342203012300033101351-230200305003',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfObliterate,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfFrostStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const UnholyDualWieldTalents = {\r\n\tname: 'Unholy DW',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-320043500002-2300303050032152000150013133051',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const UnholyDualWieldSSTalents = {\r\n\tname: 'Unholy DW SS',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-320033500002-2301303050032151000150013133151',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const Unholy2HTalents = {\r\n\tname: 'Unholy 2H',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-320050500002-2302003350032052000150013133151',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDarkDeath,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const UnholyAoeTalents = {\r\n\tname: 'Unholy AOE',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '-320050500002-2302303050032052000150013133151',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfTheGhoul,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfIcyTouch,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDeathAndDecay,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const BloodTalents = {\r\n\tname: 'Blood DPS',\r\n\tdata: SavedTalents.create({\r\n\t\ttalentsString: '2305120530003303231023001351--2302003050032',\r\n\t\tglyphs: Glyphs.create({\r\n\t\t\tmajor1: DeathknightMajorGlyph.GlyphOfDancingRuneWeapon,\r\n\t\t\tmajor2: DeathknightMajorGlyph.GlyphOfDeathStrike,\r\n\t\t\tmajor3: DeathknightMajorGlyph.GlyphOfDisease,\r\n\t\t\tminor1: DeathknightMinorGlyph.GlyphOfHornOfWinter,\r\n\t\t\tminor2: DeathknightMinorGlyph.GlyphOfPestilence,\r\n\t\t\tminor3: DeathknightMinorGlyph.GlyphOfRaiseDead,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport const DefaultUnholyRotation = DeathKnightRotation.create({\r\n\tuseDeathAndDecay: true,\r\n\tbtGhoulFrenzy: true,\r\n\trefreshHornOfWinter: false,\r\n\tuseGargoyle: true,\r\n\tuseEmpowerRuneWeapon: true,\r\n\tholdErwArmy: false,\r\n\tpreNerfedGargoyle: false,\r\n\tarmyOfTheDead: Deathknight_Rotation_ArmyOfTheDead.AsMajorCd,\r\n\tstartingPresence: Deathknight_Rotation_Presence.Unholy,\r\n\tblPresence: Deathknight_Rotation_Presence.Blood,\r\n\tpresence: Deathknight_Rotation_Presence.Blood,\r\n\tgargoylePresence: Deathknight_Rotation_Presence.Unholy,\r\n\tbloodRuneFiller: Deathknight_Rotation_BloodRuneFiller.BloodBoil,\r\n\tuseAms: false,\r\n\tdrwDiseases: Deathknight_Rotation_DrwDiseases.Pestilence,\r\n\tbloodSpender: Deathknight_Rotation_BloodSpell.HS,\r\n\tuseDancingRuneWeapon: true\r\n});\r\n\r\nexport const DefaultUnholyOptions = DeathKnightOptions.create({\r\n\tdrwPestiApply: true,\r\n\tstartingRunicPower: 0,\r\n\tpetUptime: 1,\r\n\tprecastGhoulFrenzy: false,\r\n\tprecastHornOfWinter: true,\r\n\tunholyFrenzyTarget: UnitReference.create(),\r\n\tdiseaseDowntime: 2,\r\n});\r\n\r\nexport const DefaultFrostRotation = DeathKnightRotation.create({\r\n\tuseDeathAndDecay: false,\r\n\tbtGhoulFrenzy: false,\r\n\trefreshHornOfWinter: false,\r\n\tuseEmpowerRuneWeapon: true,\r\n\tpreNerfedGargoyle: false,\r\n\tstartingPresence: Deathknight_Rotation_Presence.Blood,\r\n\tpresence: Deathknight_Rotation_Presence.Blood,\r\n\tbloodRuneFiller: Deathknight_Rotation_BloodRuneFiller.BloodBoil,\r\n\tuseAms: false,\r\n\tavgAmsSuccessRate: 1.0,\r\n\tavgAmsHit: 10000.0,\r\n\tdrwDiseases: Deathknight_Rotation_DrwDiseases.Pestilence,\r\n  \tfrostRotationType: Deathknight_Rotation_FrostRotationType.SingleTarget,\r\n\tarmyOfTheDead: Deathknight_Rotation_ArmyOfTheDead.PreCast,\r\n  \tfrostCustomRotation: CustomRotation.create({\r\n\t\tspells: [\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomDeathAndDecay }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomIcyTouch }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomPlagueStrike }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomPestilence }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomHowlingBlastRime }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomHowlingBlast }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomBloodBoil }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomObliterate }),\r\n\t\t\tCustomSpell.create({ spell: CustomSpellOption.CustomFrostStrike }),\r\n\t\t],\r\n\t}),\r\n});\r\n\r\nexport const DefaultFrostOptions = DeathKnightOptions.create({\r\n\tdrwPestiApply: true,\r\n\tstartingRunicPower: 0,\r\n\tpetUptime: 1,\r\n\tprecastHornOfWinter: true,\r\n\tunholyFrenzyTarget: UnitReference.create(),\r\n\tdiseaseDowntime: 0,\r\n});\r\n\r\nexport const DefaultBloodRotation = DeathKnightRotation.create({\r\n\trefreshHornOfWinter: false,\r\n\tuseEmpowerRuneWeapon: true,\r\n\tpreNerfedGargoyle: false,\r\n\tstartingPresence: Deathknight_Rotation_Presence.Blood,\r\n\tbloodRuneFiller: Deathknight_Rotation_BloodRuneFiller.BloodStrike,\r\n\tarmyOfTheDead: Deathknight_Rotation_ArmyOfTheDead.PreCast,\r\n\tholdErwArmy: false,\r\n\tuseAms: false,\r\n\tdrwDiseases: Deathknight_Rotation_DrwDiseases.Pestilence,\r\n\tbloodSpender: Deathknight_Rotation_BloodSpell.HS,\r\n\tuseDancingRuneWeapon: true,\r\n});\r\n\r\nexport const DefaultBloodOptions = DeathKnightOptions.create({\r\n\tdrwPestiApply: true,\r\n\tstartingRunicPower: 0,\r\n\tpetUptime: 1,\r\n\tprecastHornOfWinter: true,\r\n\tunholyFrenzyTarget: UnitReference.create(),\r\n\tdiseaseDowntime: 0,\r\n});\r\n\r\nexport const OtherDefaults = {\r\n};\r\n\r\nexport const DefaultConsumes = Consumes.create({\r\n\tflask: Flask.FlaskOfEndlessRage,\r\n\tfood: Food.FoodDragonfinFilet,\r\n\tdefaultPotion: Potions.PotionOfSpeed,\r\n\tpetFood: PetFood.PetFoodSpicedMammothTreats,\r\n\tprepopPotion: Potions.PotionOfSpeed,\r\n\tthermalSapper: true,\r\n\tfillerExplosive: Explosive.ExplosiveSaroniteBomb,\r\n});\r\n\r\nexport const BLOOD_ROTATION_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Blood Legacy',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultBloodRotation),\r\n\t}),\r\n}\r\n\r\nexport const FROST_ROTATION_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Frost Legacy',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultFrostRotation),\r\n\t}),\r\n}\r\n\r\nexport const UNHOLY_DW_ROTATION_PRESET_LEGACY_DEFAULT = {\r\n\tname: 'Unholy DW Legacy',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultUnholyRotation),\r\n\t}),\r\n}\r\n\r\nexport const BLOOD_PESTI_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Blood Pesti APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultBloodRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":50689}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"8.5s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":64382,\"tag\":-1}}}},\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"resetSequence\":{\"sequenceName\":\"IT\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"resetSequence\":{\"sequenceName\":\"PS\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}}]}},\"sequence\":{\"name\":\"IT\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":59131}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}}]}},\"sequence\":{\"name\":\"PS\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}]}}},\r\n\t\t\t  {\"action\":{\"sequence\":{\"name\":\"Opener\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49016}}},{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"spellId\":26297}}},{\"castSpell\":{\"spellId\":{\"spellId\":54758}}},{\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}},{\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}},{\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRuneCount\":{\"runeType\":\"RuneDeath\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}}]}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":46584}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"2s\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"sequenceIsComplete\":{\"sequenceName\":\"IT\"}}]}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"spellId\":50842}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":49016}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":26297}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}}}}]}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"15\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":33697}}}]}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"9\"}}}}}}]}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":33697}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"12\"}}}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"55\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"gcdIsReady\":{}},{\"spellIsReady\":{\"spellId\":{\"spellId\":26297}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49016}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":33697}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":46584}}},{\"castSpell\":{\"spellId\":{\"spellId\":49028}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"currentRuneActive\":{\"runeSlot\":\"SlotLeftBlood\"}}}},{\"sequenceIsComplete\":{\"sequenceName\":\"Opener\"}},{\"spellIsReady\":{\"spellId\":{\"spellId\":45529}}},{\"gcdIsReady\":{}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"40\"}}}},{\"or\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}}]}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":45529}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},{\"not\":{\"val\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}}]}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{}}},\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.3\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const BLOOD_PESTI_DD_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Blood Pesti DD APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultBloodRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":50689}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"8.5s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":64382,\"tag\":-1}}}},\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"resetSequence\":{\"sequenceName\":\"IT\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"resetSequence\":{\"sequenceName\":\"PS\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}}]}},\"sequence\":{\"name\":\"IT\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":59131}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}}]}},\"sequence\":{\"name\":\"PS\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}]}}},\r\n\t\t\t  {\"action\":{\"sequence\":{\"name\":\"Opener\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49016}}},{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"spellId\":26297}}},{\"castSpell\":{\"spellId\":{\"spellId\":54758}}},{\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}},{\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}},{\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRuneCount\":{\"runeType\":\"RuneDeath\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}}]}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":46584}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"2s\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"sequenceIsComplete\":{\"sequenceName\":\"IT\"}}]}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"spellId\":50842}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":49016}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":26297}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}}}}]}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"15\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":33697}}}]}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"9\"}}}}}}]}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":33697}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"12\"}}}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"55\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"gcdIsReady\":{}},{\"spellIsReady\":{\"spellId\":{\"spellId\":26297}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49016}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":33697}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":46584}}},{\"castSpell\":{\"spellId\":{\"spellId\":49028}}},{\"resetSequence\":{\"sequenceName\":\"IT\"}},{\"resetSequence\":{\"sequenceName\":\"PS\"}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"currentRuneActive\":{\"runeSlot\":\"SlotLeftBlood\"}}}},{\"sequenceIsComplete\":{\"sequenceName\":\"Opener\"}},{\"spellIsReady\":{\"spellId\":{\"spellId\":45529}}},{\"gcdIsReady\":{}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"40\"}}}},{\"or\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}}]}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":45529}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},{\"not\":{\"val\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}}]}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":55262,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{}}},\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.3\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Blood Pesti AOE APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultBloodRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":50689}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentTime\":{}},\"rhs\":{\"const\":{\"val\":\"8.5s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":64382,\"tag\":-1}}}},\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"resetSequence\":{\"sequenceName\":\"IT\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"resetSequence\":{\"sequenceName\":\"PS\"}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}}]}},\"sequence\":{\"name\":\"IT\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":59131}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}}]}},\"sequence\":{\"name\":\"PS\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},\"sequence\":{\"name\":\"Pesti\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":50842}}}]}}},\r\n\t\t\t  {\"action\":{\"sequence\":{\"name\":\"Opener\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":49016}}},{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"spellId\":26297}}},{\"castSpell\":{\"spellId\":{\"spellId\":54758}}},{\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}},{\"castSpell\":{\"spellId\":{\"spellId\":50842}}},{\"castSpell\":{\"spellId\":{\"spellId\":49941}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRuneCount\":{\"runeType\":\"RuneDeath\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}}]}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":46584}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"2s\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}},{\"sequenceIsComplete\":{\"sequenceName\":\"IT\"}}]}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"spellId\":50842}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":49016}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":26297}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}}}}]}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"15\"}}}},{\"auraIsActive\":{\"auraId\":{\"spellId\":33697}}}]}},\"castSpell\":{\"spellId\":{\"otherId\":\"OtherActionPotion\"}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"15\"}}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"9\"}}}}}}]}},{\"gcdIsReady\":{}}]}},{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":33697}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":46584}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49028}}},{\"gcdIsReady\":{}}]}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"12\"}}}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"55\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":33697}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"math\":{\"op\":\"OpAdd\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49016}}},\"rhs\":{\"const\":{\"val\":\"20\"}}}}}},{\"gcdIsReady\":{}},{\"spellIsReady\":{\"spellId\":{\"spellId\":26297}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49016}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"castSpell\":{\"spellId\":{\"spellId\":33697}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":54758}}},{\"gcdIsReady\":{}}]}},\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":46584}}},{\"castSpell\":{\"spellId\":{\"spellId\":49028}}},{\"resetSequence\":{\"sequenceName\":\"Pesti\"}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"currentRuneActive\":{\"runeSlot\":\"SlotLeftBlood\"}}}},{\"sequenceIsComplete\":{\"sequenceName\":\"Opener\"}},{\"spellIsReady\":{\"spellId\":{\"spellId\":45529}}},{\"gcdIsReady\":{}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"40\"}}}},{\"or\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49028}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":49028}}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}}]}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":45529}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},{\"not\":{\"val\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}}}}]}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49941}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{}}},\"castSpell\":{\"spellId\":{\"spellId\":49924,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.3\"}}}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49028}}},\"rhs\":{\"const\":{\"val\":\"10\"}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentRunicPower\":{}},\"rhs\":{\"const\":{\"val\":\"100\"}}}}]}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"not\":{\"val\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":71227}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}},{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"runeCooldown\":{\"runeType\":\"RuneBlood\"}},\"rhs\":{\"const\":{\"val\":\"0.5\"}}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const FROST_BL_PESTI_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Frost BL Pesti APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultFrostRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":50689}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"sequence\":{\"name\":\"Opener\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":59131}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}},{\"castSpell\":{\"spellId\":{\"spellId\":51271}}},{\"castSpell\":{\"spellId\":{\"spellId\":54758}}},{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}},{\"castSpell\":{\"spellId\":{\"spellId\":50842}}},{\"castSpell\":{\"spellId\":{\"spellId\":47568}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":33697}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"itemId\":40211}}}},\r\n\t\t\t  {\"action\":{\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":51271}}},{\"castSpell\":{\"spellId\":{\"spellId\":45529}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"4s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":59052}}},\"castSpell\":{\"spellId\":{\"spellId\":51411}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49930}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const FROST_UH_PESTI_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Frost UH Pesti APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultFrostRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":42650}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":50689}}},\"doAtValue\":{\"const\":{\"val\":\"-6s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"sequence\":{\"name\":\"Opener\",\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":59131}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}},{\"castSpell\":{\"spellId\":{\"spellId\":51271}}},{\"castSpell\":{\"spellId\":{\"spellId\":54758}}},{\"castSpell\":{\"spellId\":{\"spellId\":33697}}},{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49930}}},{\"castSpell\":{\"spellId\":{\"spellId\":47568}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}},{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"dotIsActive\":{\"spellId\":{\"spellId\":55078}}}}},\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49921}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"1.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":33697}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"spellIsReady\":{\"spellId\":{\"spellId\":51271}}},{\"spellCanCast\":{\"spellId\":{\"spellId\":51271}}}]}},\"castSpell\":{\"spellId\":{\"itemId\":40211}}}},\r\n\t\t\t  {\"action\":{\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":51271}}},{\"castSpell\":{\"spellId\":{\"spellId\":45529}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"8.5s\"}}}},{\"dotIsActive\":{\"spellId\":{\"spellId\":55095}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":59052}}},\"castSpell\":{\"spellId\":{\"spellId\":51411}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":51425}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":46584}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":49930}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"tag\":1,\"spellId\":55268}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const UNHOLY_DW_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Unholy DW SS APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultUnholyRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":63560}}},\"doAtValue\":{\"const\":{\"val\":\"-8s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55078}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":66803}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"const\":{\"val\":\"50s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"remainingTime\":{}}}}]}},\"castSpell\":{\"spellId\":{\"itemId\":40211}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":47568}}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneFrost\"}},\"rhs\":{\"const\":{\"val\":\"1\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":42650}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":67383}}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":55271,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49938}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":42650}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49938}}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":55271,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49938}}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":47568}}}]}},{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":66803}}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}},{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"auraInternalCooldown\":{\"auraId\":{\"spellId\":67117}}},\"rhs\":{\"const\":{\"val\":\"0s\"}}}}]}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49938}}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},{\"spellIsReady\":{\"spellId\":{\"spellId\":47568}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49941}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49206}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"spellId\":63560}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":48265}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50689}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const UNHOLY_2H_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Unholy 2H SS APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultUnholyRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49222}}},\"doAtValue\":{\"const\":{\"val\":\"-20s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":63560}}},\"doAtValue\":{\"const\":{\"val\":\"-8s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneFrost\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55078}}},\"rhs\":{\"nextRuneCooldown\":{\"runeType\":\"RuneUnholy\"}}}},{\"cmp\":{\"op\":\"OpGe\",\"lhs\":{\"remainingTime\":{}},\"rhs\":{\"const\":{\"val\":\"8s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":66803}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"const\":{\"val\":\"50s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"remainingTime\":{}}}}]}},\"castSpell\":{\"spellId\":{\"itemId\":40211}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":42650}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"auraIsActive\":{\"sourceUnit\":{\"type\":\"Pet\",\"index\":1,\"owner\":{\"type\":\"Self\"}},\"auraId\":{\"spellId\":63560}}}}},{\"not\":{\"val\":{\"currentRuneActive\":{\"runeSlot\":\"SlotLeftBlood\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":45529}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"currentRuneDeath\":{\"runeSlot\":\"SlotLeftBlood\"}},{\"not\":{\"val\":{\"auraIsActive\":{\"sourceUnit\":{\"type\":\"Pet\",\"index\":1,\"owner\":{\"type\":\"Self\"}},\"auraId\":{\"spellId\":63560}}}}},{\"cmp\":{\"op\":\"OpEq\",\"lhs\":{\"currentNonDeathRuneCount\":{\"runeType\":\"RuneUnholy\"}},\"rhs\":{\"const\":{\"val\":\"0\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":63560}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":55271,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49206}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":48265}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50689}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT = {\r\n\tname: 'Unholy DND AOE APL',\r\n\t//enableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\trotation: SavedRotation.create({\r\n\t\tspecRotationOptionsJson: DeathKnightRotation.toJsonString(DefaultUnholyRotation),\r\n\t\trotation: APLRotation.fromJsonString(`{\r\n\t\t\t\"type\": \"TypeAPL\",\r\n\t\t\t\"prepullActions\": [\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":48265}}},\"doAtValue\":{\"const\":{\"val\":\"-10s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":63560}}},\"doAtValue\":{\"const\":{\"val\":\"-8s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}},\"doAtValue\":{\"const\":{\"val\":\"-1.5s\"}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"itemId\":40211}}},\"doAtValue\":{\"const\":{\"val\":\"-1s\"}}}\r\n\t\t\t],\r\n\t\t\t\"priorityList\": [\r\n\t\t\t  {\"action\":{\"autocastOtherCooldowns\":{}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55095}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":59131}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpLe\",\"lhs\":{\"dotRemainingTime\":{\"spellId\":{\"spellId\":55078}}},\"rhs\":{\"const\":{\"val\":\"3s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":49921,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":66803}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":26297}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"const\":{\"val\":\"50s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":54758}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"or\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49206}}},\"rhs\":{\"remainingTime\":{}}}}]}},\"castSpell\":{\"spellId\":{\"itemId\":40211}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":47568}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}},\"castSpell\":{\"spellId\":{\"spellId\":42650}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49938}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49938}}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},\"castSpell\":{\"spellId\":{\"spellId\":55271,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"not\":{\"val\":{\"dotIsActive\":{\"targetUnit\":{\"type\":\"Target\",\"index\":1},\"spellId\":{\"spellId\":55095}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50842}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"cmp\":{\"op\":\"OpGt\",\"lhs\":{\"spellTimeToReady\":{\"spellId\":{\"spellId\":49938}}},\"rhs\":{\"const\":{\"val\":\"6s\"}}}},{\"cmp\":{\"op\":\"OpLt\",\"lhs\":{\"auraRemainingTime\":{\"auraId\":{\"spellId\":66803}}},\"rhs\":{\"const\":{\"val\":\"10s\"}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":49930,\"tag\":1}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":49206}}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},\"castSpell\":{\"spellId\":{\"spellId\":49895}}}},\r\n\t\t\t  {\"action\":{\"strictSequence\":{\"actions\":[{\"castSpell\":{\"spellId\":{\"spellId\":45529}}},{\"castSpell\":{\"spellId\":{\"spellId\":63560}}}]}}},\r\n\t\t\t  {\"action\":{\"condition\":{\"and\":{\"vals\":[{\"auraIsActive\":{\"auraId\":{\"spellId\":48265}}},{\"not\":{\"val\":{\"spellIsReady\":{\"spellId\":{\"spellId\":49206}}}}},{\"not\":{\"val\":{\"auraIsActive\":{\"auraId\":{\"spellId\":49206}}}}}]}},\"castSpell\":{\"spellId\":{\"spellId\":50689}}}},\r\n\t\t\t  {\"action\":{\"castSpell\":{\"spellId\":{\"spellId\":57623}}}}\r\n\t\t\t]\r\n\t\t}`),\r\n\t}),\r\n}\r\n\r\nexport const P1_BLOOD_BIS_PRESET = {\r\n\tname: 'P1 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":44006,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t  {\"id\":44664,\"gems\":[39996]},\r\n\t\t  {\"id\":40557,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t  {\"id\":40403,\"enchant\":3831},\r\n\t\t  {\"id\":40550,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":40330,\"enchant\":3845,\"gems\":[42142,0]},\r\n\t\t  {\"id\":40552,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t  {\"id\":40278,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":40556,\"enchant\":3823,\"gems\":[39996,40037]},\r\n\t\t  {\"id\":40591,\"enchant\":3606},\r\n\t\t  {\"id\":40075},\r\n\t\t  {\"id\":39401},\r\n\t\t  {\"id\":40256},\r\n\t\t  {\"id\":42987},\r\n\t\t  {\"id\":40384,\"enchant\":3368},\r\n\t\t  {},\r\n\t\t  {\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_BLOOD_BIS_PRESET = {\r\n\tname: 'P2 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":46115,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t  {\"id\":45459,\"gems\":[39996]},\r\n\t\t  {\"id\":46117,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t  {\"id\":46032,\"enchant\":3831,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":46111,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":45663,\"enchant\":3845,\"gems\":[42142,0]},\r\n\t\t  {\"id\":46113,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t  {\"id\":45241,\"gems\":[39996,45862,39996]},\r\n\t\t  {\"id\":45134,\"enchant\":3823,\"gems\":[39996,39996,39996]},\r\n\t\t  {\"id\":45599,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":45534,\"gems\":[39996]},\r\n\t\t  {\"id\":46048,\"gems\":[39996]},\r\n\t\t  {\"id\":42987},\r\n\t\t  {\"id\":45931},\r\n\t\t  {\"id\":45516,\"enchant\":3368,\"gems\":[39996,39996]},\r\n\t\t  {},\r\n\t\t  {\"id\":45254}\r\n  ]}`),\r\n};\r\n\r\nexport const P3_BLOOD_BIS_PRESET = {\r\n\tname: 'P3 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t  {\"id\":48493,\"enchant\":3817,\"gems\":[41285,40142]},\r\n\t\t  {\"id\":47458,\"gems\":[40142]},\r\n\t\t  {\"id\":48495,\"enchant\":3808,\"gems\":[40111]},\r\n\t\t  {\"id\":47546,\"enchant\":3831,\"gems\":[42142]},\r\n\t\t  {\"id\":47449,\"enchant\":3832,\"gems\":[49110,42142,40142]},\r\n\t\t  {\"id\":48008,\"enchant\":3845,\"gems\":[40111,0]},\r\n\t\t  {\"id\":48492,\"enchant\":3604,\"gems\":[40142,0]},\r\n\t\t  {\"id\":47429,\"gems\":[40142,40142,40111]},\r\n\t\t  {\"id\":48494,\"enchant\":3823,\"gems\":[40142,40111]},\r\n\t\t  {\"id\":45599,\"enchant\":3606,\"gems\":[40111,40111]},\r\n\t\t  {\"id\":47993,\"gems\":[40111,45862]},\r\n\t\t  {\"id\":47413,\"gems\":[40142]},\r\n\t\t  {\"id\":45931},\r\n\t\t  {\"id\":47464},\r\n\t\t  {\"id\":47446,\"enchant\":3368,\"gems\":[42142,40141]},\r\n\t\t  {},\r\n\t\t  {\"id\":47673}\r\n  ]}`),\r\n};\r\n\r\nexport const P4_BLOOD_BIS_PRESET = {\r\n\tname: 'P4 Blood',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 0,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n        {\"id\":51312,\"enchant\":3817,\"gems\":[41398,40117]},\r\n        {\"id\":50728,\"gems\":[40143]},\r\n        {\"id\":51314,\"enchant\":3808,\"gems\":[40117]},\r\n        {\"id\":50677,\"enchant\":3831,\"gems\":[42156]},\r\n        {\"id\":51310,\"enchant\":3832,\"gems\":[40117,49110]},\r\n        {\"id\":50659,\"enchant\":3845,\"gems\":[40162,0]},\r\n        {\"id\":50675,\"enchant\":3604,\"gems\":[40143,40117,0]},\r\n        {\"id\":50620,\"gems\":[40125,40117,40117]},\r\n        {\"id\":51313,\"enchant\":3823,\"gems\":[40117,40117]},\r\n        {\"id\":50639,\"enchant\":3606,\"gems\":[40125,40117]},\r\n        {\"id\":50693,\"gems\":[40125]},\r\n        {\"id\":52572,\"gems\":[40125]},\r\n        {\"id\":50363},\r\n        {\"id\":47464},\r\n        {\"id\":49623,\"enchant\":3368,\"gems\":[40117,42153,42153]},\r\n        {},\r\n        {\"id\":47673}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_UNHOLY_2H_PRERAID_PRESET = {\r\n\tname: 'Pre-Raid 2H Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":41386,\"enchant\":3817,\"gems\":[41400,49110]},\r\n\t\t{\"id\":37397},\r\n\t\t{\"id\":37627,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t{\"id\":37647,\"enchant\":3831},\r\n\t\t{\"id\":39617,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":41355,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39618,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":40688,\"gems\":[39996,42142]},\r\n\t\t{\"id\":37193,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t{\"id\":44306,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t{\"id\":37642},\r\n\t\t{\"id\":44935},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":41257,\"enchant\":3368},\r\n\t\t{},\r\n\t\t{\"id\":40867}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_UNHOLY_2H_BIS_PRESET = {\r\n\tname: 'P1 2H Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n\t\t{\"id\":44006,\"enchant\":3817,\"gems\":[41400,49110]},\r\n\t\t{\"id\":44664,\"gems\":[39996]},\r\n\t\t{\"id\":40557,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t{\"id\":40403,\"enchant\":3831},\r\n\t\t{\"id\":40550,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":40330,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t{\"id\":40552,\"enchant\":3604,\"gems\":[40038,0]},\r\n\t\t{\"id\":40278,\"gems\":[42142,42142]},\r\n\t\t{\"id\":40556,\"enchant\":3823,\"gems\":[39996,39996]},\r\n\t\t{\"id\":40591,\"enchant\":3606},\r\n\t\t{\"id\":39401},\r\n\t\t{\"id\":40075},\r\n\t\t{\"id\":40256},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":40384,\"enchant\":3368},\r\n\t\t{},\r\n\t\t{\"id\":40207}\r\n\t  ]\r\n    }`),\r\n};\r\n\r\nexport const P4_UNHOLY_2H_BIS_PRESET = {\r\n\tname: 'P4 2H Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{ \"items\": [\r\n        {\"id\":51312,\"enchant\":3817,\"gems\":[41398,40111]},\r\n        {\"id\":50647,\"gems\":[40111]},\r\n        {\"id\":51314,\"enchant\":3808,\"gems\":[40111]},\r\n        {\"id\":50677,\"enchant\":3831,\"gems\":[40146]},\r\n        {\"id\":51310,\"enchant\":3832,\"gems\":[40111,40111]},\r\n        {\"id\":50659,\"enchant\":3845,\"gems\":[40146,0]},\r\n        {\"id\":51311,\"enchant\":3604,\"gems\":[40146,0]},\r\n        {\"id\":50620,\"gems\":[40146,40111,40111]},\r\n        {\"id\":50624,\"enchant\":3823,\"gems\":[40146,40111,49110]},\r\n        {\"id\":50639,\"enchant\":3606,\"gems\":[40146,40111]},\r\n        {\"id\":50693,\"gems\":[40146]},\r\n        {\"id\":52572,\"gems\":[40146]},\r\n        {\"id\":47464},\r\n        {\"id\":50363},\r\n        {\"id\":49623,\"enchant\":3368,\"gems\":[42142,42142,42142]},\r\n        {},\r\n        {\"id\":47673}\r\n      ]\r\n\t}`),\r\n};\r\n\r\nexport const P1_UNHOLY_DW_PRERAID_PRESET = {\r\n\tname: 'Pre-Raid DW Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":41386,\"enchant\":3817,\"gems\":[41400,49110]},\r\n\t\t{\"id\":37397},\r\n\t\t{\"id\":37627,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t{\"id\":37647,\"enchant\":3831},\r\n\t\t{\"id\":39617,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":41355,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39618,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":40688,\"gems\":[39996,42142]},\r\n\t\t{\"id\":37193,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t{\"id\":44306,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t{\"id\":37642},\r\n\t\t{\"id\":44935},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":41383,\"enchant\":3368},\r\n\t\t{\"id\":40703,\"enchant\":3368},\r\n\t\t{\"id\":40867}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_UNHOLY_DW_BIS_PRESET = {\r\n\tname: 'P1 DW Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":44006,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":39421},\r\n\t\t{\"id\":40557,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t{\"id\":40403,\"enchant\":3831},\r\n\t\t{\"id\":40550,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":40330,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t{\"id\":40347,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":40278,\"gems\":[42142,42142]},\r\n\t\t{\"id\":40294,\"enchant\":3823},\r\n\t\t{\"id\":39706,\"enchant\":3606,\"gems\":[39996]},\r\n\t\t{\"id\":39401},\r\n\t\t{\"id\":40075},\r\n\t\t{\"id\":37390},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":40402,\"enchant\":3368},\r\n\t\t{\"id\":40491,\"enchant\":3368},\r\n\t\t{\"id\":42620}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_UNHOLY_DW_BIS_PRESET = {\r\n\tname: 'P2 DW Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":45472,\"enchant\":3817,\"gems\":[41398,40041]},\r\n\t\t  {\"id\":46040,\"gems\":[39996]},\r\n\t\t  {\"id\":46117,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t  {\"id\":45588,\"enchant\":3831,\"gems\":[39996]},\r\n\t\t  {\"id\":46111,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":45663,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t  {\"id\":45481,\"enchant\":3604,\"gems\":[0]},\r\n\t\t  {\"id\":45241,\"gems\":[42142,45862,39996]},\r\n\t\t  {\"id\":45134,\"enchant\":3823,\"gems\":[40041,39996,40022]},\r\n\t\t  {\"id\":45599,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":45534,\"gems\":[39996]},\r\n\t\t  {\"id\":45250},\r\n\t\t  {\"id\":45609},\r\n\t\t  {\"id\":42987},\r\n\t\t  {\"id\":46097,\"enchant\":3368,\"gems\":[39996]},\r\n\t\t  {\"id\":46036,\"enchant\":3368,\"gems\":[39996]},\r\n\t\t  {\"id\":45254}\r\n  ]}`),\r\n};\r\n\r\nexport const P3_UNHOLY_DW_BIS_PRESET = {\r\n\tname: 'P3 DW Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n\t\t{\"id\":48493,\"enchant\":3817,\"gems\":[41398,40146]},\r\n\t\t  {\"id\":47458,\"gems\":[40146]},\r\n\t\t  {\"id\":48495,\"enchant\":3808,\"gems\":[40111]},\r\n\t\t  {\"id\":47548,\"enchant\":3831,\"gems\":[40111]},\r\n\t\t  {\"id\":48491,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":45663,\"enchant\":3845,\"gems\":[40111,0]},\r\n\t\t  {\"id\":48492,\"enchant\":3604,\"gems\":[40146,0]},\r\n\t\t  {\"id\":47429,\"gems\":[40111,45862,40111]},\r\n\t\t  {\"id\":47465,\"enchant\":3823,\"gems\":[49110,40111,40146]},\r\n\t\t  {\"id\":45599,\"enchant\":3606,\"gems\":[40111,40111]},\r\n\t\t  {\"id\":47413,\"gems\":[40146]},\r\n\t\t  {\"id\":45534,\"gems\":[42142]},\r\n\t\t  {\"id\":47464},\r\n\t\t  {\"id\":45609},\r\n\t\t  {\"id\":47528,\"enchant\":3368,\"gems\":[40111]},\r\n\t\t  {\"id\":47528,\"enchant\":3368,\"gems\":[40111]},\r\n\t\t  {\"id\":47673}\r\n  ]}`),\r\n};\r\n\r\nexport const P4_UNHOLY_DW_BIS_PRESET = {\r\n\tname: 'P4 DW Unholy',\r\n\ttoolbar: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 2,\r\n\tgear: EquipmentSpec.fromJsonString(`{\"items\": [\r\n        {\"id\":51312,\"enchant\":3817,\"gems\":[41398,40111]},\r\n        {\"id\":50647,\"gems\":[40111]},\r\n        {\"id\":51314,\"enchant\":3808,\"gems\":[40111]},\r\n        {\"id\":50677,\"enchant\":3831,\"gems\":[40146]},\r\n        {\"id\":51310,\"enchant\":3832,\"gems\":[42142,49110]},\r\n        {\"id\":50659,\"enchant\":3845,\"gems\":[40146,0]},\r\n        {\"id\":51311,\"enchant\":3604,\"gems\":[40146,0]},\r\n        {\"id\":50620,\"gems\":[40146,40111,42142]},\r\n        {\"id\":50624,\"enchant\":3823,\"gems\":[40111,42142,40111]},\r\n        {\"id\":50639,\"enchant\":3606,\"gems\":[40146,40111]},\r\n        {\"id\":52572,\"gems\":[40146]},\r\n        {\"id\":51855,\"gems\":[40111]},\r\n        {\"id\":47131},\r\n        {\"id\":50363},\r\n        {\"id\":50737,\"enchant\":3368,\"gems\":[40111]},\r\n        {\"id\":50737,\"enchant\":3368,\"gems\":[40111]},\r\n        {\"id\":47673}\r\n\t]}`),\r\n};\r\n\r\nexport const P1_FROST_PRE_BIS_PRESET = {\r\n\tname: 'Pre-Raid Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":41386,\"enchant\":3817,\"gems\":[41398,49110]},\r\n\t\t{\"id\":42645,\"gems\":[42142]},\r\n\t\t{\"id\":34388,\"enchant\":3808,\"gems\":[39996,39996]},\r\n\t\t{\"id\":37647,\"enchant\":3831},\r\n\t\t{\"id\":39617,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":41355,\"enchant\":3845,\"gems\":[0]},\r\n\t\t{\"id\":39618,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":37171,\"gems\":[39996,39996]},\r\n\t\t{\"id\":37193,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t{\"id\":44306,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t{\"id\":42642,\"gems\":[39996]},\r\n\t\t{\"id\":44935},\r\n\t\t{\"id\":40684},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":41383,\"enchant\":3370},\r\n\t\t{\"id\":43611,\"enchant\":3368},\r\n\t\t{\"id\":40715}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_FROST_BIS_PRESET = {\r\n\tname: 'P1 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":44006,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":44664,\"gems\":[39996]},\r\n\t\t{\"id\":40557,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t{\"id\":40403,\"enchant\":3831},\r\n\t\t{\"id\":40550,\"enchant\":3832,\"gems\":[42142,39996]},\r\n\t\t{\"id\":40330,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t{\"id\":40552,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t{\"id\":40278,\"gems\":[39996,42142]},\r\n\t\t{\"id\":40556,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t{\"id\":40591,\"enchant\":3606},\r\n\t\t{\"id\":39401},\r\n\t\t{\"id\":40075},\r\n\t\t{\"id\":40256},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":40189,\"enchant\":3370},\r\n\t\t{\"id\":40189,\"enchant\":3368},\r\n\t\t{\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P2_FROST_BIS_PRESET = {\r\n\tname: 'P2 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":46115,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t  {\"id\":45459,\"gems\":[39996]},\r\n\t\t  {\"id\":46117,\"enchant\":3808,\"gems\":[39996]},\r\n\t\t  {\"id\":46032,\"enchant\":3831,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":46111,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":45663,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t  {\"id\":46113,\"enchant\":3604,\"gems\":[39996,0]},\r\n\t\t  {\"id\":45241,\"gems\":[42142,45862,39996]},\r\n\t\t  {\"id\":45134,\"enchant\":3823,\"gems\":[39996,39996,39996]},\r\n\t\t  {\"id\":45599,\"enchant\":3606,\"gems\":[39996,39996]},\r\n\t\t  {\"id\":45608,\"gems\":[39996]},\r\n\t\t  {\"id\":45534,\"gems\":[39996]},\r\n\t\t  {\"id\":45931},\r\n\t\t  {\"id\":42987},\r\n\t\t  {\"id\":46097,\"enchant\":3370,\"gems\":[39996]},\r\n\t\t  {\"id\":46097,\"enchant\":3368,\"gems\":[39996]},\r\n\t\t  {\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P3_FROST_BIS_PRESET = {\r\n\tname: 'P3 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":48493,\"enchant\":3817,\"gems\":[41398,40142]},\r\n\t\t  {\"id\":45459,\"gems\":[40111]},\r\n\t\t  {\"id\":48495,\"enchant\":3808,\"gems\":[40111]},\r\n\t\t  {\"id\":47548,\"enchant\":3831,\"gems\":[40111]},\r\n\t\t  {\"id\":48491,\"enchant\":3832,\"gems\":[42142,42142]},\r\n\t\t  {\"id\":45663,\"enchant\":3845,\"gems\":[40111,0]},\r\n\t\t  {\"id\":47492,\"enchant\":3604,\"gems\":[49110,40111,0]},\r\n\t\t  {\"id\":45241,\"gems\":[40111,42142,40111]},\r\n\t\t  {\"id\":48494,\"enchant\":3823,\"gems\":[40142,40111]},\r\n\t\t  {\"id\":47473,\"enchant\":3606,\"gems\":[40142,40111]},\r\n\t\t  {\"id\":46966,\"gems\":[40111]},\r\n\t\t  {\"id\":45534,\"gems\":[40111]},\r\n\t\t  {\"id\":47464},\r\n\t\t  {\"id\":45931},\r\n\t\t  {\"id\":47528,\"enchant\":3370,\"gems\":[40111]},\r\n\t\t  {\"id\":47528,\"enchant\":3368,\"gems\":[40111]},\r\n\t\t  {\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P4_FROST_BIS_PRESET = {\r\n\tname: 'P4 Frost',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n        {\"id\":51312,\"enchant\":3817,\"gems\":[41398,42153]},\r\n        {\"id\":50728,\"gems\":[40117]},\r\n        {\"id\":51314,\"enchant\":3808,\"gems\":[42153]},\r\n        {\"id\":47548,\"enchant\":3831,\"gems\":[40117]},\r\n        {\"id\":51310,\"enchant\":3832,\"gems\":[42153,40117]},\r\n        {\"id\":50659,\"enchant\":3845,\"gems\":[40117,0]},\r\n        {\"id\":51311,\"enchant\":3604,\"gems\":[40117,0]},\r\n        {\"id\":50620,\"enchant\":3601,\"gems\":[40143,40117,40117]},\r\n        {\"id\":51817,\"enchant\":3823,\"gems\":[49110,40117,40143]},\r\n        {\"id\":50639,\"enchant\":3606,\"gems\":[40143,40117]},\r\n        {\"id\":52572,\"gems\":[40117]},\r\n        {\"id\":50693,\"gems\":[40117]},\r\n        {\"id\":50363},\r\n        {\"id\":47464},\r\n        {\"id\":50737,\"enchant\":3370,\"gems\":[40117]},\r\n        {\"id\":50737,\"enchant\":3368,\"gems\":[40117]},\r\n        {\"id\":40207}\r\n  ]}`),\r\n};\r\n\r\nexport const P1_FROSTSUBUNH_BIS_PRESET = {\r\n\tname: 'P1 Frost Sub Unh',\r\n\ttooltip: Tooltips.BASIC_BIS_DISCLAIMER,\r\n\tenableWhen: (player: Player<Spec.SpecDeathknight>) => player.getTalentTree() == 1,\r\n\tgear: EquipmentSpec.fromJsonString(`{   \"items\": [\r\n\t\t{\"id\":44006,\"enchant\":3817,\"gems\":[41398,42702]},\r\n\t\t{\"id\":44664,\"gems\":[40003]},\r\n\t\t{\"id\":40557,\"enchant\":3808,\"gems\":[40003]},\r\n\t\t{\"id\":40403,\"enchant\":3831},\r\n\t\t{\"id\":40550,\"enchant\":3832,\"gems\":[42142,40003]},\r\n\t\t{\"id\":40330,\"enchant\":3845,\"gems\":[39996,0]},\r\n\t\t{\"id\":40552,\"enchant\":3604,\"gems\":[40058,0]},\r\n\t\t{\"id\":40278,\"gems\":[39996,42142]},\r\n\t\t{\"id\":40556,\"enchant\":3823,\"gems\":[42142,39996]},\r\n\t\t{\"id\":40591,\"enchant\":3606},\r\n\t\t{\"id\":39401},\r\n\t\t{\"id\":40075},\r\n\t\t{\"id\":40256},\r\n\t\t{\"id\":42987},\r\n\t\t{\"id\":40189,\"enchant\":3370},\r\n\t\t{\"id\":40189,\"enchant\":3368},\r\n\t\t{\"id\":40207}\r\n  ]}`),\r\n};\r\n","import { APLRotation } from '../core/proto/apl.js';\r\nimport { HandType, RaidBuffs } from '../core/proto/common.js';\r\nimport { PartyBuffs } from '../core/proto/common.js';\r\nimport { IndividualBuffs } from '../core/proto/common.js';\r\nimport { Debuffs } from '../core/proto/common.js';\r\nimport { ItemSlot } from '../core/proto/common.js';\r\nimport { Spec } from '../core/proto/common.js';\r\nimport { Stat, PseudoStat } from '../core/proto/common.js';\r\nimport { TristateEffect } from '../core/proto/common.js'\r\nimport { Player } from '../core/player.js';\r\nimport { Stats } from '../core/proto_utils/stats.js';\r\nimport { IndividualSimUI } from '../core/individual_sim_ui.js';\r\n\r\nimport { Deathknight, Deathknight_Rotation as DeathKnightRotation, DeathknightTalents as DeathKnightTalents, Deathknight_Options as DeathKnightOptions } from '../core/proto/deathknight.js';\r\n\r\nimport * as IconInputs from '../core/components/icon_inputs.js';\r\nimport * as OtherInputs from '../core/components/other_inputs.js';\r\nimport * as Tooltips from '../core/constants/tooltips.js';\r\n\r\nimport * as DeathKnightInputs from './inputs.js';\r\nimport * as Presets from './presets.js';\r\n\r\nexport class DeathknightSimUI extends IndividualSimUI<Spec.SpecDeathknight> {\r\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecDeathknight>) {\r\n\t\tsuper(parentElem, player, {\r\n\t\t\tcssClass: 'deathknight-sim-ui',\r\n\t\t\tcssScheme: 'death-knight',\r\n\t\t\t// List any known bugs / issues here and they'll be shown on the site.\r\n\t\t\tknownIssues: [\r\n\t\t\t],\r\n\r\n\t\t\t// All stats for which EP should be calculated.\r\n\t\t\tepStats: [\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatSpellHaste,\r\n\t\t\t],\r\n\t\t\tepPseudoStats: [\r\n\t\t\t\tPseudoStat.PseudoStatMainHandDps,\r\n\t\t\t\tPseudoStat.PseudoStatOffHandDps,\r\n\t\t\t],\r\n\t\t\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\r\n\t\t\tepReferenceStat: Stat.StatAttackPower,\r\n\t\t\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\r\n\t\t\tdisplayStats: [\r\n\t\t\t\tStat.StatHealth,\r\n\t\t\t\tStat.StatArmor,\r\n\t\t\t\tStat.StatStrength,\r\n\t\t\t\tStat.StatAgility,\r\n\t\t\t\tStat.StatSpellHit,\r\n\t\t\t\tStat.StatSpellCrit,\r\n\t\t\t\tStat.StatAttackPower,\r\n\t\t\t\tStat.StatMeleeHit,\r\n\t\t\t\tStat.StatMeleeCrit,\r\n\t\t\t\tStat.StatMeleeHaste,\r\n\t\t\t\tStat.StatArmorPenetration,\r\n\t\t\t\tStat.StatExpertise,\r\n\t\t\t],\r\n\t\t\tdefaults: {\r\n\t\t\t\t// Default equipped gear.\r\n\t\t\t\tgear: Presets.P2_UNHOLY_DW_BIS_PRESET.gear,\r\n\t\t\t\t// Default EP weights for sorting gear in the gear picker.\r\n\t\t\t\tepWeights: Stats.fromMap({\r\n\t\t\t\t\t[Stat.StatStrength]: 3.22,\r\n\t\t\t\t\t[Stat.StatAgility]: 0.62,\r\n\t\t\t\t\t[Stat.StatArmor]: 0.01,\r\n\t\t\t\t\t[Stat.StatAttackPower]: 1,\r\n\t\t\t\t\t[Stat.StatExpertise]: 1.13,\r\n\t\t\t\t\t[Stat.StatMeleeHaste]: 1.85,\r\n\t\t\t\t\t[Stat.StatMeleeHit]: 1.92,\r\n\t\t\t\t\t[Stat.StatMeleeCrit]: 0.76,\r\n\t\t\t\t\t[Stat.StatArmorPenetration]: 0.77,\r\n\t\t\t\t\t[Stat.StatSpellHit]: 0.80,\r\n\t\t\t\t\t[Stat.StatSpellCrit]: 0.34,\r\n\t\t\t\t}, {\r\n\t\t\t\t\t[PseudoStat.PseudoStatMainHandDps]: 3.10,\r\n\t\t\t\t\t[PseudoStat.PseudoStatOffHandDps]: 1.79,\r\n\t\t\t\t}),\r\n\t\t\t\t// Default consumes settings.\r\n\t\t\t\tconsumes: Presets.DefaultConsumes,\r\n\t\t\t\t// Default rotation settings.\r\n\t\t\t\trotation: Presets.DefaultUnholyRotation,\r\n\t\t\t\t// Default talents.\r\n\t\t\t\ttalents: Presets.UnholyDualWieldTalents.data,\r\n\t\t\t\t// Default spec-specific settings.\r\n\t\t\t\tspecOptions: Presets.DefaultUnholyOptions,\r\n\t\t\t\t// Default raid/party buffs settings.\r\n\t\t\t\traidBuffs: RaidBuffs.create({\r\n\t\t\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tswiftRetribution: true,\r\n\t\t\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\ticyTalons: true,\r\n\t\t\t\t\tabominationsMight: true,\r\n\t\t\t\t\tleaderOfThePack: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t\tsanctifiedRetribution: true,\r\n\t\t\t\t\tbloodlust: true,\r\n\t\t\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tmoonkinAura: TristateEffect.TristateEffectRegular,\r\n\t\t\t\t\twrathOfAirTotem: true,\r\n\t\t\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tpartyBuffs: PartyBuffs.create({\r\n\t\t\t\t\theroicPresence: false,\r\n\t\t\t\t}),\r\n\t\t\t\tindividualBuffs: IndividualBuffs.create({\r\n\t\t\t\t\tblessingOfKings: true,\r\n\t\t\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t}),\r\n\t\t\t\tdebuffs: Debuffs.create({\r\n\t\t\t\t\tbloodFrenzy: true,\r\n\t\t\t\t\tfaerieFire: TristateEffect.TristateEffectImproved,\r\n\t\t\t\t\tsunderArmor: true,\r\n\t\t\t\t\tebonPlaguebringer: true,\r\n\t\t\t\t\tmangle: true,\r\n\t\t\t\t\theartOfTheCrusader: true,\r\n\t\t\t\t\tshadowMastery: true,\r\n\t\t\t\t}),\r\n\t\t\t},\r\n\r\n\t\t\tautoRotation: (player: Player<Spec.SpecDeathknight>): APLRotation => {\r\n\t\t\t\tconst talentTree = player.getTalentTree();\r\n\t\t\t\tconst numTargets = player.sim.encounter.targets.length;\r\n\t\t\t\tswitch (talentTree) {\r\n\t\t\t\t\tcase 0: \r\n\t\t\t\t\t\tif (player.getSpecOptions().drwPestiApply || numTargets > 1) {\r\n\t\t\t\t\t\t\tif (numTargets > 5) {\r\n\t\t\t\t\t\t\t\treturn Presets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Presets.BLOOD_PESTI_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn Presets.BLOOD_PESTI_DD_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tcase 1: \r\n\t\t\t\t\t\tconst talentPoints = player.getTalentTreePoints()\r\n\t\t\t\t\t\t// TODO: Add Frost AOE rotation\r\n\t\t\t\t\t\tif (talentPoints[0] > talentPoints[2]) {\r\n\t\t\t\t\t\t\treturn Presets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn Presets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tdefault: \r\n\t\t\t\t\t\tif (numTargets > 1) {\r\n\t\t\t\t\t\t\treturn Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (player.getEquippedItem(ItemSlot.ItemSlotMainHand)!.item.handType == HandType.HandTypeTwoHand) {\r\n\t\t\t\t\t\t\t\treturn Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT.rotation.rotation!;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// IconInputs to include in the 'Player' section on the settings tab.\r\n\t\t\tplayerIconInputs: [\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Rotation' section on the settings tab.\r\n\t\t\trotationInputs: DeathKnightInputs.DeathKnightRotationConfig,\r\n\t\t\tpetConsumeInputs: [\r\n\t\t\t\tIconInputs.SpicedMammothTreats,\r\n\t\t\t],\r\n\t\t\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\r\n\t\t\tincludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.SpellDamageDebuff,\r\n\t\t\t\tIconInputs.StaminaBuff,\r\n\t\t\t],\r\n\t\t\texcludeBuffDebuffInputs: [\r\n\t\t\t\tIconInputs.AttackPowerDebuff,\r\n\t\t\t\tIconInputs.DamageReductionPercentBuff,\r\n\t\t\t\tIconInputs.MeleeAttackSpeedDebuff,\r\n\t\t\t],\r\n\t\t\t// Inputs to include in the 'Other' section on the settings tab.\r\n\t\t\totherInputs: {\r\n\t\t\t\tinputs: [\r\n\t\t\t\t\tDeathKnightInputs.DiseaseDowntime,\r\n\t\t\t\t\tDeathKnightInputs.DrwPestiApply,\r\n\t\t\t\t\tDeathKnightInputs.SelfUnholyFrenzy,\r\n\t\t\t\t\tDeathKnightInputs.StartingRunicPower,\r\n\t\t\t\t\tDeathKnightInputs.PetUptime,\r\n\r\n\t\t\t\t\tDeathKnightInputs.PrecastGhoulFrenzy,\r\n\t\t\t\t\tDeathKnightInputs.PrecastHornOfWinter,\r\n\r\n\t\t\t\t\tOtherInputs.TankAssignment,\r\n\t\t\t\t\tOtherInputs.InFrontOfTarget,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tencounterPicker: {\r\n\t\t\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\r\n\t\t\t\tshowExecuteProportion: false,\r\n\t\t\t},\r\n\r\n\t\t\tpresets: {\r\n\t\t\t\t// Preset talents that the user can quickly select.\r\n\t\t\t\ttalents: [\r\n\t\t\t\t\tPresets.BloodTalents,\r\n\t\t\t\t\tPresets.FrostTalents,\r\n\t\t\t\t\tPresets.FrostUnholyTalents,\r\n\t\t\t\t\tPresets.UnholyDualWieldTalents,\r\n\t\t\t\t\tPresets.UnholyDualWieldSSTalents,\r\n\t\t\t\t\tPresets.Unholy2HTalents,\r\n\t\t\t\t\tPresets.UnholyAoeTalents,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset rotations that the user can quickly select.\r\n\t\t\t\trotations: [\r\n\t\t\t\t\tPresets.BLOOD_ROTATION_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.FROST_ROTATION_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.UNHOLY_DW_ROTATION_PRESET_LEGACY_DEFAULT,\r\n\t\t\t\t\tPresets.BLOOD_PESTI_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.BLOOD_PESTI_DD_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.UNHOLY_DW_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.UNHOLY_2H_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t\tPresets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT,\r\n\t\t\t\t],\r\n\t\t\t\t// Preset gear configurations that the user can quickly select.\r\n\t\t\t\tgear: [\r\n\t\t\t\t\tPresets.P1_BLOOD_BIS_PRESET,\r\n\t\t\t\t\tPresets.P2_BLOOD_BIS_PRESET,\r\n\t\t\t\t\tPresets.P3_BLOOD_BIS_PRESET,\r\n\t\t\t\t\tPresets.P4_BLOOD_BIS_PRESET,\r\n\t\t\t\t\tPresets.P1_FROST_BIS_PRESET,\r\n\t\t\t\t\tPresets.P2_FROST_BIS_PRESET,\r\n\t\t\t\t\tPresets.P3_FROST_BIS_PRESET,\r\n\t\t\t\t\tPresets.P4_FROST_BIS_PRESET,\r\n\t\t\t\t\tPresets.P1_UNHOLY_DW_BIS_PRESET,\r\n\t\t\t\t\tPresets.P2_UNHOLY_DW_BIS_PRESET,\r\n\t\t\t\t\tPresets.P3_UNHOLY_DW_BIS_PRESET,\r\n\t\t\t\t\tPresets.P4_UNHOLY_DW_BIS_PRESET,\r\n\t\t\t\t\tPresets.P4_UNHOLY_2H_BIS_PRESET,\r\n\t\t\t\t\t// Not needed anymore just filling ui Space\r\n\t\t\t\t\t// Disabled on purpose\r\n\t\t\t\t\t//Presets.P1_FROSTSUBUNH_BIS_PRESET,\r\n\t\t\t\t\t//Presets.P1_FROST_PRE_BIS_PRESET,\r\n\t\t\t\t\t//Presets.P1_UNHOLY_DW_PRERAID_PRESET,\r\n\t\t\t\t\t//Presets.P1_UNHOLY_2H_PRERAID_PRESET,\r\n\t\t\t\t\t//Presets.P1_UNHOLY_2H_BIS_PRESET,\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n}\r\n"],"names":["SelfUnholyFrenzy","InputHelpers.makeSpecOptionsBooleanInput","fieldName","label","labelTooltip","extraCssClasses","getValue","player","getSpecOptions","unholyFrenzyTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","showWhen","getTalents","hysteria","changeEmitter","TypedEvent","onAny","rotationChangeEmitter","talentsChangeEmitter","StartingRunicPower","InputHelpers.makeSpecOptionsNumberInput","PetUptime","percent","masterOfGhouls","PrecastGhoulFrenzy","summonGargoyle","ghoulFrenzy","specOptionsChangeEmitter","PrecastHornOfWinter","DrwPestiApply","getRotation","autoRotation","getTalentTree","getGlyphs","major1","DeathknightMajorGlyph","GlyphOfDisease","major2","major3","InputHelpers.makeRotationNumberInput","UseDeathAndDecay","InputHelpers.makeRotationBooleanInput","scourgeStrike","epidemic","desyncRotation","sim","encounter","targets","length","targetsChangeEmitter","InputHelpers.makeRotationEnumInput","values","name","value","DeathAndDecayPrio","MaxRuneDowntime","MaxDndUptime","useDeathAndDecay","UseEmpowerRuneWeapon","frostRotationType","FrostRotationType","Custom","UseGargoyle","HoldErwArmy","useEmpowerRuneWeapon","armyOfTheDead","ArmyOfTheDead","AsMajorCd","BloodlustPresence","StartingPresence","Blood","Unholy","GargoylePresence","preNerfedGargoyle","BloodTapGhoulFrenzy","FirstDiseaseInput","FirstDisease","FrostFever","BloodPlague","ArmyOfTheDeadInput","DoNotUse","PreCast","StartingPresenceInput","FightPresence","BloodRuneFillerInput","BloodRuneFiller","BloodStrike","BloodBoil","PreNerfedGargoyleInput","getShowExperimental","BloodTapInput","BloodTap","GhoulFrenzy","IcyTouch","BloodStrikeBT","BloodBoilBT","UseAMSInput","howlingBlast","AvgAMSSuccessRateInput","useAms","AvgAMSHitInput","UseAutoRotation","DesyncRotation","Presence","Frost","BloodSpenderInput","BloodSpell","HS","BB","BS","UseDancingRuneWeapon","dancingRuneWeapon","DrwDiseasesInput","DrwDiseases","DoNotApply","Normal","Pestilence","useDancingRuneWeapon","bloodOpener","BloodOpener","Standard","Experimental_1","FrostCustomRotation","InputHelpers.makeCustomRotationInput","numColumns","actionId","ActionId","fromSpellId","CustomSpellOption","CustomIcyTouch","CustomPlagueStrike","CustomPestilence","CustomObliterate","CustomHowlingBlast","CustomHowlingBlastRime","CustomBloodBoil","CustomBloodStrike","CustomDeathAndDecay","CustomHornOfWinter","CustomUnbreakableArmor","CustomBloodTap","CustomEmpoweredRuneWeapon","CustomFrostStrike","EnableWeaponSwap","useGargoyle","WeaponSwapInputs","InputHelpers.MakeItemSwapInput","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","enableWeaponSwap","DiseaseDowntime","VirulenceRefreshTime","getEquippedItem","ItemSlotRanged","_item","id","gearChangeEmitter","DeathKnightRotationConfig","inputs","SingleTarget","FrostTalents","data","SavedTalents","talentsString","glyphs","Glyphs","GlyphOfObliterate","GlyphOfFrostStrike","minor1","DeathknightMinorGlyph","GlyphOfHornOfWinter","minor2","GlyphOfPestilence","minor3","GlyphOfRaiseDead","FrostUnholyTalents","UnholyDualWieldTalents","GlyphOfTheGhoul","GlyphOfIcyTouch","GlyphOfDeathAndDecay","UnholyDualWieldSSTalents","Unholy2HTalents","GlyphOfDarkDeath","UnholyAoeTalents","BloodTalents","GlyphOfDancingRuneWeapon","GlyphOfDeathStrike","DefaultUnholyRotation","DeathKnightRotation","btGhoulFrenzy","refreshHornOfWinter","holdErwArmy","Deathknight_Rotation_ArmyOfTheDead","startingPresence","Deathknight_Rotation_Presence","blPresence","presence","gargoylePresence","bloodRuneFiller","Deathknight_Rotation_BloodRuneFiller","drwDiseases","Deathknight_Rotation_DrwDiseases","bloodSpender","Deathknight_Rotation_BloodSpell","DefaultUnholyOptions","DeathKnightOptions","drwPestiApply","startingRunicPower","petUptime","precastGhoulFrenzy","precastHornOfWinter","diseaseDowntime","DefaultFrostRotation","avgAmsSuccessRate","avgAmsHit","Deathknight_Rotation_FrostRotationType","frostCustomRotation","CustomRotation","spells","CustomSpell","spell","DefaultBloodRotation","DefaultConsumes","Consumes","flask","Flask","FlaskOfEndlessRage","food","Food","FoodDragonfinFilet","defaultPotion","Potions","PotionOfSpeed","petFood","PetFood","PetFoodSpicedMammothTreats","prepopPotion","thermalSapper","fillerExplosive","Explosive","ExplosiveSaroniteBomb","BLOOD_ROTATION_PRESET_LEGACY_DEFAULT","rotation","SavedRotation","specRotationOptionsJson","toJsonString","FROST_ROTATION_PRESET_LEGACY_DEFAULT","UNHOLY_DW_ROTATION_PRESET_LEGACY_DEFAULT","BLOOD_PESTI_ROTATION_PRESET_DEFAULT","APLRotation","fromJsonString","BLOOD_PESTI_DD_ROTATION_PRESET_DEFAULT","BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT","FROST_BL_PESTI_ROTATION_PRESET_DEFAULT","FROST_UH_PESTI_ROTATION_PRESET_DEFAULT","UNHOLY_DW_ROTATION_PRESET_DEFAULT","UNHOLY_2H_ROTATION_PRESET_DEFAULT","UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","P1_BLOOD_BIS_PRESET","tooltip","Tooltips.BASIC_BIS_DISCLAIMER","enableWhen","gear","EquipmentSpec","P2_BLOOD_BIS_PRESET","P3_BLOOD_BIS_PRESET","P4_BLOOD_BIS_PRESET","P4_UNHOLY_2H_BIS_PRESET","toolbar","P1_UNHOLY_DW_BIS_PRESET","P2_UNHOLY_DW_BIS_PRESET","P3_UNHOLY_DW_BIS_PRESET","P4_UNHOLY_DW_BIS_PRESET","P1_FROST_BIS_PRESET","P2_FROST_BIS_PRESET","P3_FROST_BIS_PRESET","P4_FROST_BIS_PRESET","DeathknightSimUI","IndividualSimUI","constructor","parentElem","super","cssClass","cssScheme","knownIssues","epStats","Stat","StatStrength","StatArmor","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatSpellHit","StatSpellCrit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","defaults","Presets.P2_UNHOLY_DW_BIS_PRESET","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","Presets.DefaultUnholyRotation","talents","Presets.UnholyDualWieldTalents","specOptions","Presets.DefaultUnholyOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","swiftRetribution","strengthOfEarthTotem","icyTalons","abominationsMight","leaderOfThePack","TristateEffectRegular","sanctifiedRetribution","bloodlust","devotionAura","stoneskinTotem","moonkinAura","wrathOfAirTotem","powerWordFortitude","partyBuffs","PartyBuffs","heroicPresence","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","debuffs","Debuffs","bloodFrenzy","faerieFire","sunderArmor","ebonPlaguebringer","mangle","heartOfTheCrusader","shadowMastery","talentTree","numTargets","Presets.BLOOD_PESTI_AOE_ROTATION_PRESET_DEFAULT","Presets.BLOOD_PESTI_ROTATION_PRESET_DEFAULT","Presets.BLOOD_PESTI_DD_ROTATION_PRESET_DEFAULT","talentPoints","getTalentTreePoints","Presets.FROST_BL_PESTI_ROTATION_PRESET_DEFAULT","Presets.FROST_UH_PESTI_ROTATION_PRESET_DEFAULT","Presets.UNHOLY_DND_AOE_ROTATION_PRESET_DEFAULT","item","handType","HandType","HandTypeTwoHand","Presets.UNHOLY_2H_ROTATION_PRESET_DEFAULT","Presets.UNHOLY_DW_ROTATION_PRESET_DEFAULT","playerIconInputs","rotationInputs","DeathKnightInputs.DeathKnightRotationConfig","petConsumeInputs","IconInputs.SpicedMammothTreats","includeBuffDebuffInputs","IconInputs.SpellDamageDebuff","IconInputs.StaminaBuff","excludeBuffDebuffInputs","IconInputs.AttackPowerDebuff","IconInputs.DamageReductionPercentBuff","IconInputs.MeleeAttackSpeedDebuff","otherInputs","DeathKnightInputs.DiseaseDowntime","DeathKnightInputs.DrwPestiApply","DeathKnightInputs.SelfUnholyFrenzy","DeathKnightInputs.StartingRunicPower","DeathKnightInputs.PetUptime","DeathKnightInputs.PrecastGhoulFrenzy","DeathKnightInputs.PrecastHornOfWinter","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.BloodTalents","Presets.FrostTalents","Presets.FrostUnholyTalents","Presets.UnholyDualWieldSSTalents","Presets.Unholy2HTalents","Presets.UnholyAoeTalents","rotations","Presets.BLOOD_ROTATION_PRESET_LEGACY_DEFAULT","Presets.FROST_ROTATION_PRESET_LEGACY_DEFAULT","Presets.UNHOLY_DW_ROTATION_PRESET_LEGACY_DEFAULT","Presets.P1_BLOOD_BIS_PRESET","Presets.P2_BLOOD_BIS_PRESET","Presets.P3_BLOOD_BIS_PRESET","Presets.P4_BLOOD_BIS_PRESET","Presets.P1_FROST_BIS_PRESET","Presets.P2_FROST_BIS_PRESET","Presets.P3_FROST_BIS_PRESET","Presets.P4_FROST_BIS_PRESET","Presets.P1_UNHOLY_DW_BIS_PRESET","Presets.P3_UNHOLY_DW_BIS_PRESET","Presets.P4_UNHOLY_DW_BIS_PRESET","Presets.P4_UNHOLY_2H_BIS_PRESET"],"mappings":"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"}